terraform_version = "1.1.3"

planned_values = {
	"outputs": {
		"cluster_endpoint": {
			"name":      "cluster_endpoint",
			"sensitive": false,
			"value":     undefined,
		},
		"cluster_id": {
			"name":      "cluster_id",
			"sensitive": false,
			"value":     undefined,
		},
		"cluster_name": {
			"name":      "cluster_name",
			"sensitive": false,
			"value":     undefined,
		},
		"cluster_security_group_id": {
			"name":      "cluster_security_group_id",
			"sensitive": false,
			"value":     undefined,
		},
		"config_map_aws_auth": {
			"name":      "config_map_aws_auth",
			"sensitive": false,
			"value":     undefined,
		},
		"kubectl_config": {
			"name":      "kubectl_config",
			"sensitive": false,
			"value":     undefined,
		},
		"region": {
			"name":      "region",
			"sensitive": false,
			"value":     "us-east-2",
		},
	},
	"resources": {
		"aws_eks_cluster.cluster": {
			"address":        "aws_eks_cluster.cluster",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "data",
			"module_address": "",
			"name":           "cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_eks_cluster",
			"values":         {},
		},
		"aws_eks_cluster_auth.cluster": {
			"address":        "aws_eks_cluster_auth.cluster",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "data",
			"module_address": "",
			"name":           "cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_eks_cluster_auth",
			"values":         {},
		},
		"aws_security_group.all_worker_mgmt": {
			"address":        "aws_security_group.all_worker_mgmt",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "all_worker_mgmt",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Managed by Terraform",
				"ingress": [
					{
						"cidr_blocks": [
							"10.0.0.0/8",
							"172.16.0.0/12",
							"192.168.0.0/16",
						],
						"description":      "",
						"from_port":        22,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          22,
					},
				],
				"name_prefix":            "all_worker_management",
				"revoke_rules_on_delete": false,
				"tags":     null,
				"timeouts": null,
			},
		},
		"aws_security_group.worker_group_mgmt_one": {
			"address":        "aws_security_group.worker_group_mgmt_one",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "worker_group_mgmt_one",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Managed by Terraform",
				"ingress": [
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "",
						"from_port":        22,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          22,
					},
				],
				"name_prefix":            "worker_group_mgmt_one",
				"revoke_rules_on_delete": false,
				"tags":     null,
				"timeouts": null,
			},
		},
		"aws_security_group.worker_group_mgmt_two": {
			"address":        "aws_security_group.worker_group_mgmt_two",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "worker_group_mgmt_two",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Managed by Terraform",
				"ingress": [
					{
						"cidr_blocks": [
							"192.168.0.0/16",
						],
						"description":      "",
						"from_port":        22,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          22,
					},
				],
				"name_prefix":            "worker_group_mgmt_two",
				"revoke_rules_on_delete": false,
				"tags":     null,
				"timeouts": null,
			},
		},
		"module.eks.aws_autoscaling_group.workers[0]": {
			"address":        "module.eks.aws_autoscaling_group.workers[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_autoscaling_group",
			"values": {
				"capacity_rebalance":        false,
				"desired_capacity":          2,
				"enabled_metrics":           null,
				"force_delete":              false,
				"force_delete_warm_pool":    false,
				"health_check_grace_period": 300,
				"initial_lifecycle_hook":    [],
				"instance_refresh":          [],
				"launch_template":           [],
				"load_balancers":            null,
				"max_instance_lifetime":     0,
				"max_size":                  3,
				"metrics_granularity":       "1Minute",
				"min_elb_capacity":          null,
				"min_size":                  1,
				"mixed_instances_policy":    [],
				"placement_group":           null,
				"protect_from_scale_in":     false,
				"suspended_processes": [
					"AZRebalance",
				],
				"tag": [
					{
						"key": "Name",
						"propagate_at_launch": true,
					},
					{
						"propagate_at_launch": true,
						"value":               "owned",
					},
					{
						"propagate_at_launch": true,
						"value":               "owned",
					},
				],
				"tags":                      null,
				"target_group_arns":         null,
				"termination_policies":      [],
				"timeouts":                  null,
				"wait_for_capacity_timeout": "10m",
				"wait_for_elb_capacity":     null,
				"warm_pool":                 [],
			},
		},
		"module.eks.aws_autoscaling_group.workers[1]": {
			"address":        "module.eks.aws_autoscaling_group.workers[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_autoscaling_group",
			"values": {
				"capacity_rebalance":        false,
				"desired_capacity":          1,
				"enabled_metrics":           null,
				"force_delete":              false,
				"force_delete_warm_pool":    false,
				"health_check_grace_period": 300,
				"initial_lifecycle_hook":    [],
				"instance_refresh":          [],
				"launch_template":           [],
				"load_balancers":            null,
				"max_instance_lifetime":     0,
				"max_size":                  3,
				"metrics_granularity":       "1Minute",
				"min_elb_capacity":          null,
				"min_size":                  1,
				"mixed_instances_policy":    [],
				"placement_group":           null,
				"protect_from_scale_in":     false,
				"suspended_processes": [
					"AZRebalance",
				],
				"tag": [
					{
						"key": "Name",
						"propagate_at_launch": true,
					},
					{
						"propagate_at_launch": true,
						"value":               "owned",
					},
					{
						"propagate_at_launch": true,
						"value":               "owned",
					},
				],
				"tags":                      null,
				"target_group_arns":         null,
				"termination_policies":      [],
				"timeouts":                  null,
				"wait_for_capacity_timeout": "10m",
				"wait_for_elb_capacity":     null,
				"warm_pool":                 [],
			},
		},
		"module.eks.aws_eks_cluster.this[0]": {
			"address":        "module.eks.aws_eks_cluster.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_eks_cluster",
			"values": {
				"enabled_cluster_log_types": null,
				"encryption_config":         [],
				"kubernetes_network_config": [
					{},
				],
				"tags": null,
				"timeouts": {
					"create": "30m",
					"delete": "15m",
					"update": "60m",
				},
				"version": "1.20",
				"vpc_config": [
					{
						"endpoint_private_access": false,
						"endpoint_public_access":  true,
						"public_access_cidrs": [
							"0.0.0.0/0",
						],
					},
				],
			},
		},
		"module.eks.aws_iam_instance_profile.workers[0]": {
			"address":        "module.eks.aws_iam_instance_profile.workers[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_instance_profile",
			"values": {
				"path": "/",
				"tags": null,
			},
		},
		"module.eks.aws_iam_instance_profile.workers[1]": {
			"address":        "module.eks.aws_iam_instance_profile.workers[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_instance_profile",
			"values": {
				"path": "/",
				"tags": null,
			},
		},
		"module.eks.aws_iam_policy.cluster_deny_log_group[0]": {
			"address":        "module.eks.aws_iam_policy.cluster_deny_log_group[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_deny_log_group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "Deny CreateLogGroup",
				"path":        "/",
				"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"logs:CreateLogGroup\",\n      \"Resource\": \"*\"\n    }\n  ]\n}",
				"tags":        null,
			},
		},
		"module.eks.aws_iam_policy.cluster_elb_sl_role_creation[0]": {
			"address":        "module.eks.aws_iam_policy.cluster_elb_sl_role_creation[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_elb_sl_role_creation",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_policy",
			"values": {
				"description": "Permissions for EKS to create AWSServiceRoleForElasticLoadBalancing service-linked role",
				"path":        "/",
				"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
				"tags":        null,
			},
		},
		"module.eks.aws_iam_role.cluster[0]": {
			"address":        "module.eks.aws_iam_role.cluster[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role",
			"values": {
				"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
				"description":           null,
				"force_detach_policies": true,
				"max_session_duration":  3600,
				"path":                  "/",
				"permissions_boundary":  null,
				"tags":                  null,
			},
		},
		"module.eks.aws_iam_role.workers[0]": {
			"address":        "module.eks.aws_iam_role.workers[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role",
			"values": {
				"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
				"description":           null,
				"force_detach_policies": true,
				"max_session_duration":  3600,
				"path":                  "/",
				"permissions_boundary":  null,
				"tags":                  null,
			},
		},
		"module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy[0]": {
			"address":        "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_AmazonEKSClusterPolicy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role_policy_attachment",
			"values": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
			},
		},
		"module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy[0]": {
			"address":        "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_AmazonEKSServicePolicy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role_policy_attachment",
			"values": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
			},
		},
		"module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy[0]": {
			"address":        "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_AmazonEKSVPCResourceControllerPolicy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role_policy_attachment",
			"values": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
			},
		},
		"module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group[0]": {
			"address":        "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_deny_log_group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role_policy_attachment",
			"values":         {},
		},
		"module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation[0]": {
			"address":        "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_elb_sl_role_creation",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role_policy_attachment",
			"values":         {},
		},
		"module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly[0]": {
			"address":        "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_AmazonEC2ContainerRegistryReadOnly",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role_policy_attachment",
			"values": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
			},
		},
		"module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy[0]": {
			"address":        "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_AmazonEKSWorkerNodePolicy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role_policy_attachment",
			"values": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
			},
		},
		"module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy[0]": {
			"address":        "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_AmazonEKS_CNI_Policy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role_policy_attachment",
			"values": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
			},
		},
		"module.eks.aws_launch_configuration.workers[0]": {
			"address":        "module.eks.aws_launch_configuration.workers[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_launch_configuration",
			"values": {
				"associate_public_ip_address": false,
				"ebs_optimized":               false,
				"enable_monitoring":           true,
				"ephemeral_block_device":      [],
				"image_id":                    "ami-04821cb666bb14bc3",
				"instance_type":               "t2.small",
				"metadata_options": [
					{
						"http_endpoint": "enabled",
						"http_tokens":   "optional",
					},
				],
				"placement_tenancy": "",
				"root_block_device": [
					{
						"delete_on_termination": true,
						"encrypted":             false,
						"iops":                  0,
						"volume_size":           100,
						"volume_type":           "gp2",
					},
				],
				"spot_price":                       "",
				"user_data":                        null,
				"vpc_classic_link_id":              null,
				"vpc_classic_link_security_groups": null,
			},
		},
		"module.eks.aws_launch_configuration.workers[1]": {
			"address":        "module.eks.aws_launch_configuration.workers[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_launch_configuration",
			"values": {
				"associate_public_ip_address": false,
				"ebs_optimized":               false,
				"enable_monitoring":           true,
				"ephemeral_block_device":      [],
				"image_id":                    "ami-04821cb666bb14bc3",
				"instance_type":               "t2.medium",
				"metadata_options": [
					{
						"http_endpoint": "enabled",
						"http_tokens":   "optional",
					},
				],
				"placement_tenancy": "",
				"root_block_device": [
					{
						"delete_on_termination": true,
						"encrypted":             false,
						"iops":                  0,
						"volume_size":           100,
						"volume_type":           "gp2",
					},
				],
				"spot_price":                       "",
				"user_data":                        null,
				"vpc_classic_link_id":              null,
				"vpc_classic_link_security_groups": null,
			},
		},
		"module.eks.aws_security_group.cluster[0]": {
			"address":        "module.eks.aws_security_group.cluster[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description":            "EKS cluster security group.",
				"revoke_rules_on_delete": false,
				"timeouts":               null,
			},
		},
		"module.eks.aws_security_group.workers[0]": {
			"address":        "module.eks.aws_security_group.workers[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description":            "Security group for all nodes in the cluster.",
				"revoke_rules_on_delete": false,
				"timeouts":               null,
			},
		},
		"module.eks.aws_security_group_rule.cluster_egress_internet[0]": {
			"address":        "module.eks.aws_security_group_rule.cluster_egress_internet[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_egress_internet",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      "Allow cluster egress access to the Internet.",
				"from_port":        0,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "-1",
				"self":             false,
				"to_port":          0,
				"type":             "egress",
			},
		},
		"module.eks.aws_security_group_rule.cluster_https_worker_ingress[0]": {
			"address":        "module.eks.aws_security_group_rule.cluster_https_worker_ingress[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_https_worker_ingress",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks":      null,
				"description":      "Allow pods to communicate with the EKS cluster API.",
				"from_port":        443,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          443,
				"type":             "ingress",
			},
		},
		"module.eks.aws_security_group_rule.workers_egress_internet[0]": {
			"address":        "module.eks.aws_security_group_rule.workers_egress_internet[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_egress_internet",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      "Allow nodes all egress to the Internet.",
				"from_port":        0,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "-1",
				"self":             false,
				"to_port":          0,
				"type":             "egress",
			},
		},
		"module.eks.aws_security_group_rule.workers_ingress_cluster[0]": {
			"address":        "module.eks.aws_security_group_rule.workers_ingress_cluster[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_ingress_cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks":      null,
				"description":      "Allow workers pods to receive communication from the cluster control plane.",
				"from_port":        1025,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          65535,
				"type":             "ingress",
			},
		},
		"module.eks.aws_security_group_rule.workers_ingress_cluster_https[0]": {
			"address":        "module.eks.aws_security_group_rule.workers_ingress_cluster_https[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_ingress_cluster_https",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks":      null,
				"description":      "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
				"from_port":        443,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          443,
				"type":             "ingress",
			},
		},
		"module.eks.aws_security_group_rule.workers_ingress_self[0]": {
			"address":        "module.eks.aws_security_group_rule.workers_ingress_self[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_ingress_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks":      null,
				"description":      "Allow node to communicate with each other.",
				"from_port":        0,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "-1",
				"self":             false,
				"to_port":          65535,
				"type":             "ingress",
			},
		},
		"module.eks.http.wait_for_cluster[0]": {
			"address":        "module.eks.http.wait_for_cluster[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "data",
			"module_address": "module.eks",
			"name":           "wait_for_cluster",
			"provider_name":  "registry.terraform.io/terraform-aws-modules/http",
			"tainted":        false,
			"type":           "http",
			"values": {
				"insecure":        null,
				"request_headers": null,
				"timeout":         300,
			},
		},
		"module.eks.kubernetes_config_map.aws_auth[0]": {
			"address":        "module.eks.kubernetes_config_map.aws_auth[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "aws_auth",
			"provider_name":  "registry.terraform.io/hashicorp/kubernetes",
			"tainted":        false,
			"type":           "kubernetes_config_map",
			"values": {
				"binary_data": null,
				"metadata": [
					{
						"annotations":   null,
						"generate_name": null,
						"labels": {
							"app.kubernetes.io/managed-by": "Terraform",
							"terraform.io/module":          "terraform-aws-modules.eks.aws",
						},
						"name":      "aws-auth",
						"namespace": "kube-system",
					},
				],
			},
		},
		"module.eks.local_file.kubeconfig[0]": {
			"address":        "module.eks.local_file.kubeconfig[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "kubeconfig",
			"provider_name":  "registry.terraform.io/hashicorp/local",
			"tainted":        false,
			"type":           "local_file",
			"values": {
				"content_base64":       null,
				"directory_permission": "0755",
				"file_permission":      "0600",
				"sensitive_content":    "REDACTED_SENSITIVE",
				"source":               null,
			},
		},
		"module.vpc.aws_eip.nat[0]": {
			"address":        "module.vpc.aws_eip.nat[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "nat",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_eip",
			"values": {
				"address":                   null,
				"associate_with_private_ip": null,
				"customer_owned_ipv4_pool":  null,
				"timeouts":                  null,
				"vpc":                       true,
			},
		},
		"module.vpc.aws_internet_gateway.this[0]": {
			"address":        "module.vpc.aws_internet_gateway.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_internet_gateway",
			"values":         {},
		},
		"module.vpc.aws_nat_gateway.this[0]": {
			"address":        "module.vpc.aws_nat_gateway.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_nat_gateway",
			"values": {
				"connectivity_type": "public",
			},
		},
		"module.vpc.aws_route.private_nat_gateway[0]": {
			"address":        "module.vpc.aws_route.private_nat_gateway[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private_nat_gateway",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route",
			"values": {
				"carrier_gateway_id":          null,
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": null,
				"destination_prefix_list_id":  null,
				"egress_only_gateway_id":      null,
				"gateway_id":                  null,
				"local_gateway_id":            null,
				"timeouts": {
					"create": "5m",
					"delete": null,
					"update": null,
				},
				"transit_gateway_id":        null,
				"vpc_endpoint_id":           null,
				"vpc_peering_connection_id": null,
			},
		},
		"module.vpc.aws_route.public_internet_gateway[0]": {
			"address":        "module.vpc.aws_route.public_internet_gateway[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public_internet_gateway",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route",
			"values": {
				"carrier_gateway_id":          null,
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": null,
				"destination_prefix_list_id":  null,
				"egress_only_gateway_id":      null,
				"local_gateway_id":            null,
				"nat_gateway_id":              null,
				"timeouts": {
					"create": "5m",
					"delete": null,
					"update": null,
				},
				"transit_gateway_id":        null,
				"vpc_endpoint_id":           null,
				"vpc_peering_connection_id": null,
			},
		},
		"module.vpc.aws_route_table.private[0]": {
			"address":        "module.vpc.aws_route_table.private[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table",
			"values": {
				"timeouts": null,
			},
		},
		"module.vpc.aws_route_table.public[0]": {
			"address":        "module.vpc.aws_route_table.public[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table",
			"values": {
				"timeouts": null,
			},
		},
		"module.vpc.aws_route_table_association.private[0]": {
			"address":        "module.vpc.aws_route_table_association.private[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id": null,
			},
		},
		"module.vpc.aws_route_table_association.private[1]": {
			"address":        "module.vpc.aws_route_table_association.private[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id": null,
			},
		},
		"module.vpc.aws_route_table_association.private[2]": {
			"address":        "module.vpc.aws_route_table_association.private[2]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          2,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id": null,
			},
		},
		"module.vpc.aws_route_table_association.public[0]": {
			"address":        "module.vpc.aws_route_table_association.public[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id": null,
			},
		},
		"module.vpc.aws_route_table_association.public[1]": {
			"address":        "module.vpc.aws_route_table_association.public[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id": null,
			},
		},
		"module.vpc.aws_route_table_association.public[2]": {
			"address":        "module.vpc.aws_route_table_association.public[2]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          2,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id": null,
			},
		},
		"module.vpc.aws_subnet.private[0]": {
			"address":        "module.vpc.aws_subnet.private[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "us-east-2a",
				"cidr_block":                                     "10.0.1.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        false,
				"outpost_arn":                                    null,
				"timeouts":                                       null,
			},
		},
		"module.vpc.aws_subnet.private[1]": {
			"address":        "module.vpc.aws_subnet.private[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "us-east-2b",
				"cidr_block":                                     "10.0.2.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        false,
				"outpost_arn":                                    null,
				"timeouts":                                       null,
			},
		},
		"module.vpc.aws_subnet.private[2]": {
			"address":        "module.vpc.aws_subnet.private[2]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          2,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "us-east-2c",
				"cidr_block":                                     "10.0.3.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        false,
				"outpost_arn":                                    null,
				"timeouts":                                       null,
			},
		},
		"module.vpc.aws_subnet.public[0]": {
			"address":        "module.vpc.aws_subnet.public[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "us-east-2a",
				"cidr_block":                                     "10.0.4.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        true,
				"outpost_arn":                                    null,
				"timeouts":                                       null,
			},
		},
		"module.vpc.aws_subnet.public[1]": {
			"address":        "module.vpc.aws_subnet.public[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "us-east-2b",
				"cidr_block":                                     "10.0.5.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        true,
				"outpost_arn":                                    null,
				"timeouts":                                       null,
			},
		},
		"module.vpc.aws_subnet.public[2]": {
			"address":        "module.vpc.aws_subnet.public[2]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          2,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "us-east-2c",
				"cidr_block":                                     "10.0.6.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        true,
				"outpost_arn":                                    null,
				"timeouts":                                       null,
			},
		},
		"module.vpc.aws_vpc.this[0]": {
			"address":        "module.vpc.aws_vpc.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_vpc",
			"values": {
				"assign_generated_ipv6_cidr_block": false,
				"cidr_block":                       "10.0.0.0/16",
				"enable_dns_hostnames":             true,
				"enable_dns_support":               true,
				"instance_tenancy":                 "default",
				"ipv4_ipam_pool_id":                null,
				"ipv4_netmask_length":              null,
				"ipv6_ipam_pool_id":                null,
				"ipv6_netmask_length":              null,
			},
		},
		"random_string.suffix": {
			"address":        "random_string.suffix",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "suffix",
			"provider_name":  "registry.terraform.io/hashicorp/random",
			"tainted":        false,
			"type":           "random_string",
			"values": {
				"keepers":          null,
				"length":           8,
				"lower":            true,
				"min_lower":        0,
				"min_numeric":      0,
				"min_special":      0,
				"min_upper":        0,
				"number":           true,
				"override_special": null,
				"special":          false,
				"upper":            true,
			},
		},
	},
}

variables = {
	"region": {
		"name":  "region",
		"value": "us-east-2",
	},
}

resource_changes = {
	"aws_security_group.all_worker_mgmt": {
		"address": "aws_security_group.all_worker_mgmt",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Managed by Terraform",
				"ingress": [
					{
						"cidr_blocks": [
							"10.0.0.0/8",
							"172.16.0.0/12",
							"192.168.0.0/16",
						],
						"description":      "",
						"from_port":        22,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          22,
					},
				],
				"name_prefix":            "all_worker_management",
				"revoke_rules_on_delete": false,
				"tags":     null,
				"timeouts": null,
			},
			"after_unknown": {
				"arn":    true,
				"egress": true,
				"id":     true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
							false,
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"name":     true,
				"owner_id": true,
				"tags_all": true,
				"vpc_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "all_worker_mgmt",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"aws_security_group.worker_group_mgmt_one": {
		"address": "aws_security_group.worker_group_mgmt_one",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Managed by Terraform",
				"ingress": [
					{
						"cidr_blocks": [
							"10.0.0.0/8",
						],
						"description":      "",
						"from_port":        22,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          22,
					},
				],
				"name_prefix":            "worker_group_mgmt_one",
				"revoke_rules_on_delete": false,
				"tags":     null,
				"timeouts": null,
			},
			"after_unknown": {
				"arn":    true,
				"egress": true,
				"id":     true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"name":     true,
				"owner_id": true,
				"tags_all": true,
				"vpc_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "worker_group_mgmt_one",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"aws_security_group.worker_group_mgmt_two": {
		"address": "aws_security_group.worker_group_mgmt_two",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Managed by Terraform",
				"ingress": [
					{
						"cidr_blocks": [
							"192.168.0.0/16",
						],
						"description":      "",
						"from_port":        22,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          22,
					},
				],
				"name_prefix":            "worker_group_mgmt_two",
				"revoke_rules_on_delete": false,
				"tags":     null,
				"timeouts": null,
			},
			"after_unknown": {
				"arn":    true,
				"egress": true,
				"id":     true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"name":     true,
				"owner_id": true,
				"tags_all": true,
				"vpc_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "worker_group_mgmt_two",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"data.aws_eks_cluster.cluster": {
		"address": "data.aws_eks_cluster.cluster",
		"change": {
			"actions": [
				"read",
			],
			"after": {},
			"after_unknown": {
				"arn": true,
				"certificate_authority":     true,
				"created_at":                true,
				"enabled_cluster_log_types": true,
				"endpoint":                  true,
				"id":                        true,
				"identity":                  true,
				"kubernetes_network_config": true,
				"name":             true,
				"platform_version": true,
				"role_arn":         true,
				"status":           true,
				"tags":             true,
				"version":          true,
				"vpc_config":       true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "data",
		"module_address": "",
		"name":           "cluster",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_eks_cluster",
	},
	"data.aws_eks_cluster_auth.cluster": {
		"address": "data.aws_eks_cluster_auth.cluster",
		"change": {
			"actions": [
				"read",
			],
			"after": {},
			"after_unknown": {
				"id":    true,
				"name":  true,
				"token": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "data",
		"module_address": "",
		"name":           "cluster",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_eks_cluster_auth",
	},
	"module.eks.aws_autoscaling_group.workers[0]": {
		"address": "module.eks.aws_autoscaling_group.workers[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"capacity_rebalance":        false,
				"desired_capacity":          2,
				"enabled_metrics":           null,
				"force_delete":              false,
				"force_delete_warm_pool":    false,
				"health_check_grace_period": 300,
				"initial_lifecycle_hook":    [],
				"instance_refresh":          [],
				"launch_template":           [],
				"load_balancers":            null,
				"max_instance_lifetime":     0,
				"max_size":                  3,
				"metrics_granularity":       "1Minute",
				"min_elb_capacity":          null,
				"min_size":                  1,
				"mixed_instances_policy":    [],
				"placement_group":           null,
				"protect_from_scale_in":     false,
				"suspended_processes": [
					"AZRebalance",
				],
				"tag": [
					{
						"key": "Name",
						"propagate_at_launch": true,
					},
					{
						"propagate_at_launch": true,
						"value":               "owned",
					},
					{
						"propagate_at_launch": true,
						"value":               "owned",
					},
				],
				"tags":                      null,
				"target_group_arns":         null,
				"termination_policies":      [],
				"timeouts":                  null,
				"wait_for_capacity_timeout": "10m",
				"wait_for_elb_capacity":     null,
				"warm_pool":                 [],
			},
			"after_unknown": {
				"arn":                true,
				"availability_zones": true,
				"default_cooldown":   true,
				"health_check_type":  true,
				"id":                 true,
				"initial_lifecycle_hook": [],
				"instance_refresh":       [],
				"launch_configuration":   true,
				"launch_template":        [],
				"mixed_instances_policy": [],
				"name":                    true,
				"name_prefix":             true,
				"service_linked_role_arn": true,
				"suspended_processes": [
					false,
				],
				"tag": [
					{
						"value": true,
					},
					{
						"key": true,
					},
					{
						"key": true,
					},
				],
				"termination_policies": [],
				"vpc_zone_identifier":  true,
				"warm_pool":            [],
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_autoscaling_group",
	},
	"module.eks.aws_autoscaling_group.workers[1]": {
		"address": "module.eks.aws_autoscaling_group.workers[1]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"capacity_rebalance":        false,
				"desired_capacity":          1,
				"enabled_metrics":           null,
				"force_delete":              false,
				"force_delete_warm_pool":    false,
				"health_check_grace_period": 300,
				"initial_lifecycle_hook":    [],
				"instance_refresh":          [],
				"launch_template":           [],
				"load_balancers":            null,
				"max_instance_lifetime":     0,
				"max_size":                  3,
				"metrics_granularity":       "1Minute",
				"min_elb_capacity":          null,
				"min_size":                  1,
				"mixed_instances_policy":    [],
				"placement_group":           null,
				"protect_from_scale_in":     false,
				"suspended_processes": [
					"AZRebalance",
				],
				"tag": [
					{
						"key": "Name",
						"propagate_at_launch": true,
					},
					{
						"propagate_at_launch": true,
						"value":               "owned",
					},
					{
						"propagate_at_launch": true,
						"value":               "owned",
					},
				],
				"tags":                      null,
				"target_group_arns":         null,
				"termination_policies":      [],
				"timeouts":                  null,
				"wait_for_capacity_timeout": "10m",
				"wait_for_elb_capacity":     null,
				"warm_pool":                 [],
			},
			"after_unknown": {
				"arn":                true,
				"availability_zones": true,
				"default_cooldown":   true,
				"health_check_type":  true,
				"id":                 true,
				"initial_lifecycle_hook": [],
				"instance_refresh":       [],
				"launch_configuration":   true,
				"launch_template":        [],
				"mixed_instances_policy": [],
				"name":                    true,
				"name_prefix":             true,
				"service_linked_role_arn": true,
				"suspended_processes": [
					false,
				],
				"tag": [
					{
						"value": true,
					},
					{
						"key": true,
					},
					{
						"key": true,
					},
				],
				"termination_policies": [],
				"vpc_zone_identifier":  true,
				"warm_pool":            [],
			},
			"before": null,
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_autoscaling_group",
	},
	"module.eks.aws_eks_cluster.this[0]": {
		"address": "module.eks.aws_eks_cluster.this[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"enabled_cluster_log_types": null,
				"encryption_config":         [],
				"kubernetes_network_config": [
					{},
				],
				"tags": null,
				"timeouts": {
					"create": "30m",
					"delete": "15m",
					"update": "60m",
				},
				"version": "1.20",
				"vpc_config": [
					{
						"endpoint_private_access": false,
						"endpoint_public_access":  true,
						"public_access_cidrs": [
							"0.0.0.0/0",
						],
					},
				],
			},
			"after_unknown": {
				"arn": true,
				"certificate_authority": true,
				"created_at":            true,
				"encryption_config":     [],
				"endpoint":              true,
				"id":                    true,
				"identity":              true,
				"kubernetes_network_config": [
					{
						"service_ipv4_cidr": true,
					},
				],
				"name":             true,
				"platform_version": true,
				"role_arn":         true,
				"status":           true,
				"tags_all":         true,
				"timeouts":         {},
				"vpc_config": [
					{
						"cluster_security_group_id": true,
						"public_access_cidrs": [
							false,
						],
						"security_group_ids": true,
						"subnet_ids":         true,
						"vpc_id":             true,
					},
				],
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_eks_cluster",
	},
	"module.eks.aws_iam_instance_profile.workers[0]": {
		"address": "module.eks.aws_iam_instance_profile.workers[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"path": "/",
				"tags": null,
			},
			"after_unknown": {
				"arn":         true,
				"create_date": true,
				"id":          true,
				"name":        true,
				"name_prefix": true,
				"role":        true,
				"tags_all":    true,
				"unique_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_instance_profile",
	},
	"module.eks.aws_iam_instance_profile.workers[1]": {
		"address": "module.eks.aws_iam_instance_profile.workers[1]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"path": "/",
				"tags": null,
			},
			"after_unknown": {
				"arn":         true,
				"create_date": true,
				"id":          true,
				"name":        true,
				"name_prefix": true,
				"role":        true,
				"tags_all":    true,
				"unique_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_instance_profile",
	},
	"module.eks.aws_iam_policy.cluster_deny_log_group[0]": {
		"address": "module.eks.aws_iam_policy.cluster_deny_log_group[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Deny CreateLogGroup",
				"path":        "/",
				"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"logs:CreateLogGroup\",\n      \"Resource\": \"*\"\n    }\n  ]\n}",
				"tags":        null,
			},
			"after_unknown": {
				"arn":         true,
				"id":          true,
				"name":        true,
				"name_prefix": true,
				"policy_id":   true,
				"tags_all":    true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster_deny_log_group",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.eks.aws_iam_policy.cluster_elb_sl_role_creation[0]": {
		"address": "module.eks.aws_iam_policy.cluster_elb_sl_role_creation[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Permissions for EKS to create AWSServiceRoleForElasticLoadBalancing service-linked role",
				"path":        "/",
				"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
				"tags":        null,
			},
			"after_unknown": {
				"arn":         true,
				"id":          true,
				"name":        true,
				"name_prefix": true,
				"policy_id":   true,
				"tags_all":    true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster_elb_sl_role_creation",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_policy",
	},
	"module.eks.aws_iam_role.cluster[0]": {
		"address": "module.eks.aws_iam_role.cluster[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
				"description":           null,
				"force_detach_policies": true,
				"max_session_duration":  3600,
				"path":                  "/",
				"permissions_boundary":  null,
				"tags":                  null,
			},
			"after_unknown": {
				"arn":                 true,
				"create_date":         true,
				"id":                  true,
				"inline_policy":       true,
				"managed_policy_arns": true,
				"name":                true,
				"name_prefix":         true,
				"tags_all":            true,
				"unique_id":           true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role",
	},
	"module.eks.aws_iam_role.workers[0]": {
		"address": "module.eks.aws_iam_role.workers[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
				"description":           null,
				"force_detach_policies": true,
				"max_session_duration":  3600,
				"path":                  "/",
				"permissions_boundary":  null,
				"tags":                  null,
			},
			"after_unknown": {
				"arn":                 true,
				"create_date":         true,
				"id":                  true,
				"inline_policy":       true,
				"managed_policy_arns": true,
				"name":                true,
				"name_prefix":         true,
				"tags_all":            true,
				"unique_id":           true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role",
	},
	"module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy[0]": {
		"address": "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
			},
			"after_unknown": {
				"id":   true,
				"role": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster_AmazonEKSClusterPolicy",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role_policy_attachment",
	},
	"module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy[0]": {
		"address": "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
			},
			"after_unknown": {
				"id":   true,
				"role": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster_AmazonEKSServicePolicy",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role_policy_attachment",
	},
	"module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy[0]": {
		"address": "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
			},
			"after_unknown": {
				"id":   true,
				"role": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster_AmazonEKSVPCResourceControllerPolicy",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role_policy_attachment",
	},
	"module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group[0]": {
		"address": "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {},
			"after_unknown": {
				"id":         true,
				"policy_arn": true,
				"role":       true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster_deny_log_group",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role_policy_attachment",
	},
	"module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation[0]": {
		"address": "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {},
			"after_unknown": {
				"id":         true,
				"policy_arn": true,
				"role":       true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster_elb_sl_role_creation",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role_policy_attachment",
	},
	"module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly[0]": {
		"address": "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
			},
			"after_unknown": {
				"id":   true,
				"role": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers_AmazonEC2ContainerRegistryReadOnly",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role_policy_attachment",
	},
	"module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy[0]": {
		"address": "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
			},
			"after_unknown": {
				"id":   true,
				"role": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers_AmazonEKSWorkerNodePolicy",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role_policy_attachment",
	},
	"module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy[0]": {
		"address": "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
			},
			"after_unknown": {
				"id":   true,
				"role": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers_AmazonEKS_CNI_Policy",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role_policy_attachment",
	},
	"module.eks.aws_launch_configuration.workers[0]": {
		"address": "module.eks.aws_launch_configuration.workers[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"associate_public_ip_address": false,
				"ebs_optimized":               false,
				"enable_monitoring":           true,
				"ephemeral_block_device":      [],
				"image_id":                    "ami-04821cb666bb14bc3",
				"instance_type":               "t2.small",
				"metadata_options": [
					{
						"http_endpoint": "enabled",
						"http_tokens":   "optional",
					},
				],
				"placement_tenancy": "",
				"root_block_device": [
					{
						"delete_on_termination": true,
						"encrypted":             false,
						"iops":                  0,
						"volume_size":           100,
						"volume_type":           "gp2",
					},
				],
				"spot_price":                       "",
				"user_data":                        null,
				"vpc_classic_link_id":              null,
				"vpc_classic_link_security_groups": null,
			},
			"after_unknown": {
				"arn":                    true,
				"ebs_block_device":       true,
				"ephemeral_block_device": [],
				"iam_instance_profile":   true,
				"id":       true,
				"key_name": true,
				"metadata_options": [
					{
						"http_put_response_hop_limit": true,
					},
				],
				"name":        true,
				"name_prefix": true,
				"root_block_device": [
					{
						"throughput": true,
					},
				],
				"security_groups":  true,
				"user_data_base64": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_launch_configuration",
	},
	"module.eks.aws_launch_configuration.workers[1]": {
		"address": "module.eks.aws_launch_configuration.workers[1]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"associate_public_ip_address": false,
				"ebs_optimized":               false,
				"enable_monitoring":           true,
				"ephemeral_block_device":      [],
				"image_id":                    "ami-04821cb666bb14bc3",
				"instance_type":               "t2.medium",
				"metadata_options": [
					{
						"http_endpoint": "enabled",
						"http_tokens":   "optional",
					},
				],
				"placement_tenancy": "",
				"root_block_device": [
					{
						"delete_on_termination": true,
						"encrypted":             false,
						"iops":                  0,
						"volume_size":           100,
						"volume_type":           "gp2",
					},
				],
				"spot_price":                       "",
				"user_data":                        null,
				"vpc_classic_link_id":              null,
				"vpc_classic_link_security_groups": null,
			},
			"after_unknown": {
				"arn":                    true,
				"ebs_block_device":       true,
				"ephemeral_block_device": [],
				"iam_instance_profile":   true,
				"id":       true,
				"key_name": true,
				"metadata_options": [
					{
						"http_put_response_hop_limit": true,
					},
				],
				"name":        true,
				"name_prefix": true,
				"root_block_device": [
					{
						"throughput": true,
					},
				],
				"security_groups":  true,
				"user_data_base64": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_launch_configuration",
	},
	"module.eks.aws_security_group.cluster[0]": {
		"address": "module.eks.aws_security_group.cluster[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description":            "EKS cluster security group.",
				"revoke_rules_on_delete": false,
				"timeouts":               null,
			},
			"after_unknown": {
				"arn":         true,
				"egress":      true,
				"id":          true,
				"ingress":     true,
				"name":        true,
				"name_prefix": true,
				"owner_id":    true,
				"tags":        true,
				"tags_all":    true,
				"vpc_id":      true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.eks.aws_security_group.workers[0]": {
		"address": "module.eks.aws_security_group.workers[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description":            "Security group for all nodes in the cluster.",
				"revoke_rules_on_delete": false,
				"timeouts":               null,
			},
			"after_unknown": {
				"arn":         true,
				"egress":      true,
				"id":          true,
				"ingress":     true,
				"name":        true,
				"name_prefix": true,
				"owner_id":    true,
				"tags":        true,
				"tags_all":    true,
				"vpc_id":      true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.eks.aws_security_group_rule.cluster_egress_internet[0]": {
		"address": "module.eks.aws_security_group_rule.cluster_egress_internet[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      "Allow cluster egress access to the Internet.",
				"from_port":        0,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "-1",
				"self":             false,
				"to_port":          0,
				"type":             "egress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster_egress_internet",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.eks.aws_security_group_rule.cluster_https_worker_ingress[0]": {
		"address": "module.eks.aws_security_group_rule.cluster_https_worker_ingress[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks":      null,
				"description":      "Allow pods to communicate with the EKS cluster API.",
				"from_port":        443,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          443,
				"type":             "ingress",
			},
			"after_unknown": {
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "cluster_https_worker_ingress",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.eks.aws_security_group_rule.workers_egress_internet[0]": {
		"address": "module.eks.aws_security_group_rule.workers_egress_internet[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      "Allow nodes all egress to the Internet.",
				"from_port":        0,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "-1",
				"self":             false,
				"to_port":          0,
				"type":             "egress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers_egress_internet",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.eks.aws_security_group_rule.workers_ingress_cluster[0]": {
		"address": "module.eks.aws_security_group_rule.workers_ingress_cluster[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks":      null,
				"description":      "Allow workers pods to receive communication from the cluster control plane.",
				"from_port":        1025,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          65535,
				"type":             "ingress",
			},
			"after_unknown": {
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers_ingress_cluster",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.eks.aws_security_group_rule.workers_ingress_cluster_https[0]": {
		"address": "module.eks.aws_security_group_rule.workers_ingress_cluster_https[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks":      null,
				"description":      "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
				"from_port":        443,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          443,
				"type":             "ingress",
			},
			"after_unknown": {
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers_ingress_cluster_https",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.eks.aws_security_group_rule.workers_ingress_self[0]": {
		"address": "module.eks.aws_security_group_rule.workers_ingress_self[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks":      null,
				"description":      "Allow node to communicate with each other.",
				"from_port":        0,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "-1",
				"self":             false,
				"to_port":          65535,
				"type":             "ingress",
			},
			"after_unknown": {
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "workers_ingress_self",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.eks.data.http.wait_for_cluster[0]": {
		"address": "module.eks.data.http.wait_for_cluster[0]",
		"change": {
			"actions": [
				"read",
			],
			"after": {
				"insecure":        null,
				"request_headers": null,
				"timeout":         300,
			},
			"after_unknown": {
				"body":             true,
				"ca_certificate":   true,
				"id":               true,
				"response_headers": true,
				"url":              true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "data",
		"module_address": "module.eks",
		"name":           "wait_for_cluster",
		"provider_name":  "registry.terraform.io/terraform-aws-modules/http",
		"type":           "http",
	},
	"module.eks.kubernetes_config_map.aws_auth[0]": {
		"address": "module.eks.kubernetes_config_map.aws_auth[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"binary_data": null,
				"metadata": [
					{
						"annotations":   null,
						"generate_name": null,
						"labels": {
							"app.kubernetes.io/managed-by": "Terraform",
							"terraform.io/module":          "terraform-aws-modules.eks.aws",
						},
						"name":      "aws-auth",
						"namespace": "kube-system",
					},
				],
			},
			"after_unknown": {
				"data": true,
				"id":   true,
				"metadata": [
					{
						"generation":       true,
						"labels":           {},
						"resource_version": true,
						"uid":              true,
					},
				],
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "aws_auth",
		"provider_name":  "registry.terraform.io/hashicorp/kubernetes",
		"type":           "kubernetes_config_map",
	},
	"module.eks.local_file.kubeconfig[0]": {
		"address": "module.eks.local_file.kubeconfig[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"content_base64":       null,
				"directory_permission": "0755",
				"file_permission":      "0600",
				"sensitive_content":    "REDACTED_SENSITIVE",
				"source":               null,
			},
			"after_unknown": {
				"content":  true,
				"filename": true,
				"id":       true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.eks",
		"name":           "kubeconfig",
		"provider_name":  "registry.terraform.io/hashicorp/local",
		"type":           "local_file",
	},
	"module.vpc.aws_eip.nat[0]": {
		"address": "module.vpc.aws_eip.nat[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"address":                   null,
				"associate_with_private_ip": null,
				"customer_owned_ipv4_pool":  null,
				"timeouts":                  null,
				"vpc":                       true,
			},
			"after_unknown": {
				"allocation_id":        true,
				"association_id":       true,
				"carrier_ip":           true,
				"customer_owned_ip":    true,
				"domain":               true,
				"id":                   true,
				"instance":             true,
				"network_border_group": true,
				"network_interface":    true,
				"private_dns":          true,
				"private_ip":           true,
				"public_dns":           true,
				"public_ip":            true,
				"public_ipv4_pool":     true,
				"tags":                 true,
				"tags_all":             true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "nat",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_eip",
	},
	"module.vpc.aws_internet_gateway.this[0]": {
		"address": "module.vpc.aws_internet_gateway.this[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {},
			"after_unknown": {
				"arn":      true,
				"id":       true,
				"owner_id": true,
				"tags":     true,
				"tags_all": true,
				"vpc_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_internet_gateway",
	},
	"module.vpc.aws_nat_gateway.this[0]": {
		"address": "module.vpc.aws_nat_gateway.this[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"connectivity_type": "public",
			},
			"after_unknown": {
				"allocation_id": true,
				"id":            true,
				"network_interface_id": true,
				"private_ip":           true,
				"public_ip":            true,
				"subnet_id":            true,
				"tags":                 true,
				"tags_all":             true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_nat_gateway",
	},
	"module.vpc.aws_route.private_nat_gateway[0]": {
		"address": "module.vpc.aws_route.private_nat_gateway[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"carrier_gateway_id":          null,
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": null,
				"destination_prefix_list_id":  null,
				"egress_only_gateway_id":      null,
				"gateway_id":                  null,
				"local_gateway_id":            null,
				"timeouts": {
					"create": "5m",
					"delete": null,
					"update": null,
				},
				"transit_gateway_id":        null,
				"vpc_endpoint_id":           null,
				"vpc_peering_connection_id": null,
			},
			"after_unknown": {
				"id":                   true,
				"instance_id":          true,
				"instance_owner_id":    true,
				"nat_gateway_id":       true,
				"network_interface_id": true,
				"origin":               true,
				"route_table_id":       true,
				"state":                true,
				"timeouts":             {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private_nat_gateway",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route",
	},
	"module.vpc.aws_route.public_internet_gateway[0]": {
		"address": "module.vpc.aws_route.public_internet_gateway[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"carrier_gateway_id":          null,
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": null,
				"destination_prefix_list_id":  null,
				"egress_only_gateway_id":      null,
				"local_gateway_id":            null,
				"nat_gateway_id":              null,
				"timeouts": {
					"create": "5m",
					"delete": null,
					"update": null,
				},
				"transit_gateway_id":        null,
				"vpc_endpoint_id":           null,
				"vpc_peering_connection_id": null,
			},
			"after_unknown": {
				"gateway_id":           true,
				"id":                   true,
				"instance_id":          true,
				"instance_owner_id":    true,
				"network_interface_id": true,
				"origin":               true,
				"route_table_id":       true,
				"state":                true,
				"timeouts":             {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public_internet_gateway",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route",
	},
	"module.vpc.aws_route_table.private[0]": {
		"address": "module.vpc.aws_route_table.private[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"timeouts": null,
			},
			"after_unknown": {
				"arn":              true,
				"id":               true,
				"owner_id":         true,
				"propagating_vgws": true,
				"route":            true,
				"tags":             true,
				"tags_all":         true,
				"vpc_id":           true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table",
	},
	"module.vpc.aws_route_table.public[0]": {
		"address": "module.vpc.aws_route_table.public[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"timeouts": null,
			},
			"after_unknown": {
				"arn":              true,
				"id":               true,
				"owner_id":         true,
				"propagating_vgws": true,
				"route":            true,
				"tags":             true,
				"tags_all":         true,
				"vpc_id":           true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table",
	},
	"module.vpc.aws_route_table_association.private[0]": {
		"address": "module.vpc.aws_route_table_association.private[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"gateway_id": null,
			},
			"after_unknown": {
				"id":             true,
				"route_table_id": true,
				"subnet_id":      true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.private[1]": {
		"address": "module.vpc.aws_route_table_association.private[1]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"gateway_id": null,
			},
			"after_unknown": {
				"id":             true,
				"route_table_id": true,
				"subnet_id":      true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.private[2]": {
		"address": "module.vpc.aws_route_table_association.private[2]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"gateway_id": null,
			},
			"after_unknown": {
				"id":             true,
				"route_table_id": true,
				"subnet_id":      true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          2,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.public[0]": {
		"address": "module.vpc.aws_route_table_association.public[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"gateway_id": null,
			},
			"after_unknown": {
				"id":             true,
				"route_table_id": true,
				"subnet_id":      true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.public[1]": {
		"address": "module.vpc.aws_route_table_association.public[1]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"gateway_id": null,
			},
			"after_unknown": {
				"id":             true,
				"route_table_id": true,
				"subnet_id":      true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.public[2]": {
		"address": "module.vpc.aws_route_table_association.public[2]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"gateway_id": null,
			},
			"after_unknown": {
				"id":             true,
				"route_table_id": true,
				"subnet_id":      true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          2,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_subnet.private[0]": {
		"address": "module.vpc.aws_subnet.private[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "us-east-2a",
				"cidr_block":                                     "10.0.1.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        false,
				"outpost_arn":                                    null,
				"timeouts":                                       null,
			},
			"after_unknown": {
				"arn": true,
				"availability_zone_id": true,
				"id": true,
				"ipv6_cidr_block_association_id":      true,
				"owner_id":                            true,
				"private_dns_hostname_type_on_launch": true,
				"tags":     true,
				"tags_all": true,
				"vpc_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_subnet.private[1]": {
		"address": "module.vpc.aws_subnet.private[1]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "us-east-2b",
				"cidr_block":                                     "10.0.2.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        false,
				"outpost_arn":                                    null,
				"timeouts":                                       null,
			},
			"after_unknown": {
				"arn": true,
				"availability_zone_id": true,
				"id": true,
				"ipv6_cidr_block_association_id":      true,
				"owner_id":                            true,
				"private_dns_hostname_type_on_launch": true,
				"tags":     true,
				"tags_all": true,
				"vpc_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_subnet.private[2]": {
		"address": "module.vpc.aws_subnet.private[2]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "us-east-2c",
				"cidr_block":                                     "10.0.3.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        false,
				"outpost_arn":                                    null,
				"timeouts":                                       null,
			},
			"after_unknown": {
				"arn": true,
				"availability_zone_id": true,
				"id": true,
				"ipv6_cidr_block_association_id":      true,
				"owner_id":                            true,
				"private_dns_hostname_type_on_launch": true,
				"tags":     true,
				"tags_all": true,
				"vpc_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          2,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_subnet.public[0]": {
		"address": "module.vpc.aws_subnet.public[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "us-east-2a",
				"cidr_block":                                     "10.0.4.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        true,
				"outpost_arn":                                    null,
				"timeouts":                                       null,
			},
			"after_unknown": {
				"arn": true,
				"availability_zone_id": true,
				"id": true,
				"ipv6_cidr_block_association_id":      true,
				"owner_id":                            true,
				"private_dns_hostname_type_on_launch": true,
				"tags":     true,
				"tags_all": true,
				"vpc_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_subnet.public[1]": {
		"address": "module.vpc.aws_subnet.public[1]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "us-east-2b",
				"cidr_block":                                     "10.0.5.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        true,
				"outpost_arn":                                    null,
				"timeouts":                                       null,
			},
			"after_unknown": {
				"arn": true,
				"availability_zone_id": true,
				"id": true,
				"ipv6_cidr_block_association_id":      true,
				"owner_id":                            true,
				"private_dns_hostname_type_on_launch": true,
				"tags":     true,
				"tags_all": true,
				"vpc_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_subnet.public[2]": {
		"address": "module.vpc.aws_subnet.public[2]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "us-east-2c",
				"cidr_block":                                     "10.0.6.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        true,
				"outpost_arn":                                    null,
				"timeouts":                                       null,
			},
			"after_unknown": {
				"arn": true,
				"availability_zone_id": true,
				"id": true,
				"ipv6_cidr_block_association_id":      true,
				"owner_id":                            true,
				"private_dns_hostname_type_on_launch": true,
				"tags":     true,
				"tags_all": true,
				"vpc_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          2,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_vpc.this[0]": {
		"address": "module.vpc.aws_vpc.this[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assign_generated_ipv6_cidr_block": false,
				"cidr_block":                       "10.0.0.0/16",
				"enable_dns_hostnames":             true,
				"enable_dns_support":               true,
				"instance_tenancy":                 "default",
				"ipv4_ipam_pool_id":                null,
				"ipv4_netmask_length":              null,
				"ipv6_ipam_pool_id":                null,
				"ipv6_netmask_length":              null,
			},
			"after_unknown": {
				"arn": true,
				"default_network_acl_id":         true,
				"default_route_table_id":         true,
				"default_security_group_id":      true,
				"dhcp_options_id":                true,
				"enable_classiclink":             true,
				"enable_classiclink_dns_support": true,
				"id": true,
				"ipv6_association_id": true,
				"ipv6_cidr_block":     true,
				"main_route_table_id": true,
				"owner_id":            true,
				"tags":                true,
				"tags_all":            true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_vpc",
	},
	"random_string.suffix": {
		"address": "random_string.suffix",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"keepers":          null,
				"length":           8,
				"lower":            true,
				"min_lower":        0,
				"min_numeric":      0,
				"min_special":      0,
				"min_upper":        0,
				"number":           true,
				"override_special": null,
				"special":          false,
				"upper":            true,
			},
			"after_unknown": {
				"id":     true,
				"result": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "suffix",
		"provider_name":  "registry.terraform.io/hashicorp/random",
		"type":           "random_string",
	},
}

output_changes = {
	"cluster_endpoint": {
		"change": {
			"actions": [
				"create",
			],
			"after":         undefined,
			"after_unknown": true,
			"before":        null,
		},
		"name": "cluster_endpoint",
	},
	"cluster_id": {
		"change": {
			"actions": [
				"create",
			],
			"after":         undefined,
			"after_unknown": true,
			"before":        null,
		},
		"name": "cluster_id",
	},
	"cluster_name": {
		"change": {
			"actions": [
				"create",
			],
			"after":         undefined,
			"after_unknown": true,
			"before":        null,
		},
		"name": "cluster_name",
	},
	"cluster_security_group_id": {
		"change": {
			"actions": [
				"create",
			],
			"after":         undefined,
			"after_unknown": true,
			"before":        null,
		},
		"name": "cluster_security_group_id",
	},
	"config_map_aws_auth": {
		"change": {
			"actions": [
				"create",
			],
			"after":         undefined,
			"after_unknown": true,
			"before":        null,
		},
		"name": "config_map_aws_auth",
	},
	"kubectl_config": {
		"change": {
			"actions": [
				"create",
			],
			"after":         undefined,
			"after_unknown": true,
			"before":        null,
		},
		"name": "kubectl_config",
	},
	"region": {
		"change": {
			"actions": [
				"create",
			],
			"after":         "us-east-2",
			"after_unknown": false,
			"before":        null,
		},
		"name": "region",
	},
}

raw = {
	"configuration": {
		"provider_config": {
			"aws": {
				"expressions": {
					"region": {
						"references": [
							"var.region",
						],
					},
				},
				"name":               "aws",
				"version_constraint": ">= 3.20.0",
			},
			"kubernetes": {
				"expressions": {
					"cluster_ca_certificate": {
						"references": [
							"data.aws_eks_cluster.cluster.certificate_authority[0].data",
							"data.aws_eks_cluster.cluster.certificate_authority[0]",
							"data.aws_eks_cluster.cluster.certificate_authority",
							"data.aws_eks_cluster.cluster",
						],
					},
					"host": {
						"references": [
							"data.aws_eks_cluster.cluster.endpoint",
							"data.aws_eks_cluster.cluster",
						],
					},
					"token": {
						"references": [
							"data.aws_eks_cluster_auth.cluster.token",
							"data.aws_eks_cluster_auth.cluster",
						],
					},
				},
				"name":               "kubernetes",
				"version_constraint": ">= 2.0.1",
			},
			"local": {
				"name":               "local",
				"version_constraint": "2.1.0",
			},
			"module.eks.module.fargate:aws": {
				"module_address":     "module.eks.module.fargate",
				"name":               "aws",
				"version_constraint": ">= 3.56.0",
			},
			"module.eks.module.node_groups:aws": {
				"module_address":     "module.eks.module.node_groups",
				"name":               "aws",
				"version_constraint": ">= 3.56.0",
			},
			"module.eks.module.node_groups:cloudinit": {
				"module_address":     "module.eks.module.node_groups",
				"name":               "cloudinit",
				"version_constraint": ">= 2.0.0",
			},
			"module.eks:aws": {
				"module_address":     "module.eks",
				"name":               "aws",
				"version_constraint": ">= 3.56.0",
			},
			"module.eks:cloudinit": {
				"module_address":     "module.eks",
				"name":               "cloudinit",
				"version_constraint": ">= 2.0.0",
			},
			"module.eks:http": {
				"module_address":     "module.eks",
				"name":               "http",
				"version_constraint": ">= 2.4.1",
			},
			"module.eks:kubernetes": {
				"module_address":     "module.eks",
				"name":               "kubernetes",
				"version_constraint": ">= 1.11.1",
			},
			"module.eks:local": {
				"module_address":     "module.eks",
				"name":               "local",
				"version_constraint": ">= 1.4.0",
			},
			"module.vpc:aws": {
				"module_address":     "module.vpc",
				"name":               "aws",
				"version_constraint": ">= 3.15.0",
			},
			"null": {
				"name":               "null",
				"version_constraint": "3.1.0",
			},
			"random": {
				"name":               "random",
				"version_constraint": "3.1.0",
			},
		},
		"root_module": {
			"module_calls": {
				"eks": {
					"expressions": {
						"cluster_name": {
							"references": [
								"local.cluster_name",
							],
						},
						"cluster_version": {
							"constant_value": "1.20",
						},
						"subnets": {
							"references": [
								"module.vpc.private_subnets",
								"module.vpc",
							],
						},
						"vpc_id": {
							"references": [
								"module.vpc.vpc_id",
								"module.vpc",
							],
						},
						"worker_groups": {
							"references": [
								"aws_security_group.worker_group_mgmt_one.id",
								"aws_security_group.worker_group_mgmt_one",
								"aws_security_group.worker_group_mgmt_two.id",
								"aws_security_group.worker_group_mgmt_two",
							],
						},
						"workers_group_defaults": {
							"constant_value": {
								"root_volume_type": "gp2",
							},
						},
					},
					"module": {
						"module_calls": {
							"fargate": {
								"expressions": {
									"cluster_name": {
										"references": [
											"local.cluster_name",
										],
									},
									"create_eks": {
										"references": [
											"var.create_eks",
										],
									},
									"create_fargate_pod_execution_role": {
										"references": [
											"var.create_fargate_pod_execution_role",
										],
									},
									"fargate_pod_execution_role_name": {
										"references": [
											"var.fargate_pod_execution_role_name",
										],
									},
									"fargate_profiles": {
										"references": [
											"var.fargate_profiles",
										],
									},
									"iam_path": {
										"references": [
											"var.iam_path",
										],
									},
									"permissions_boundary": {
										"references": [
											"var.permissions_boundary",
										],
									},
									"subnets": {
										"references": [
											"var.fargate_subnets",
											"var.subnets",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
								},
								"module": {
									"outputs": {
										"aws_auth_roles": {
											"description": "Roles for use in aws-auth ConfigMap",
											"expression": {
												"references": [
													"local.pod_execution_role_arn",
													"local.create_eks",
												],
											},
										},
										"fargate_profile_arns": {
											"description": "Amazon Resource Name (ARN) of the EKS Fargate Profiles.",
											"expression": {
												"references": [
													"aws_eks_fargate_profile.this",
												],
											},
										},
										"fargate_profile_ids": {
											"description": "EKS Cluster name and EKS Fargate Profile names separated by a colon (:).",
											"expression": {
												"references": [
													"aws_eks_fargate_profile.this",
												],
											},
										},
										"iam_role_arn": {
											"description": "IAM role ARN for EKS Fargate pods",
											"expression": {
												"references": [
													"local.pod_execution_role_arn",
												],
											},
										},
										"iam_role_name": {
											"description": "IAM role name for EKS Fargate pods",
											"expression": {
												"references": [
													"local.pod_execution_role_name",
												],
											},
										},
									},
									"resources": [
										{
											"address": "aws_eks_fargate_profile.this",
											"expressions": {
												"cluster_name": {
													"references": [
														"var.cluster_name",
													],
												},
												"fargate_profile_name": {
													"references": [
														"each.value",
														"var.cluster_name",
														"each.key",
													],
												},
												"pod_execution_role_arn": {
													"references": [
														"local.pod_execution_role_arn",
													],
												},
												"subnet_ids": {
													"references": [
														"each.value",
														"var.subnets",
													],
												},
												"tags": {
													"references": [
														"var.tags",
														"each.value",
													],
												},
												"timeouts": {},
											},
											"for_each_expression": {
												"references": [
													"local.fargate_profiles",
												],
											},
											"mode":                "managed",
											"name":                "this",
											"provider_config_key": "fargate:aws",
											"schema_version":      0,
											"type":                "aws_eks_fargate_profile",
										},
										{
											"address": "aws_iam_role.eks_fargate_pod",
											"count_expression": {
												"references": [
													"local.create_eks",
													"var.create_fargate_pod_execution_role",
												],
											},
											"expressions": {
												"assume_role_policy": {
													"references": [
														"data.aws_iam_policy_document.eks_fargate_pod_assume_role[0].json",
														"data.aws_iam_policy_document.eks_fargate_pod_assume_role[0]",
														"data.aws_iam_policy_document.eks_fargate_pod_assume_role",
													],
												},
												"name_prefix": {
													"references": [
														"var.cluster_name",
													],
												},
												"path": {
													"references": [
														"var.iam_path",
													],
												},
												"permissions_boundary": {
													"references": [
														"var.permissions_boundary",
													],
												},
												"tags": {
													"references": [
														"var.tags",
													],
												},
											},
											"mode":                "managed",
											"name":                "eks_fargate_pod",
											"provider_config_key": "fargate:aws",
											"schema_version":      0,
											"type":                "aws_iam_role",
										},
										{
											"address": "aws_iam_role_policy_attachment.eks_fargate_pod",
											"count_expression": {
												"references": [
													"local.create_eks",
													"var.create_fargate_pod_execution_role",
												],
											},
											"expressions": {
												"policy_arn": {
													"references": [
														"data.aws_partition.current.partition",
														"data.aws_partition.current",
													],
												},
												"role": {
													"references": [
														"aws_iam_role.eks_fargate_pod[0].name",
														"aws_iam_role.eks_fargate_pod[0]",
														"aws_iam_role.eks_fargate_pod",
													],
												},
											},
											"mode":                "managed",
											"name":                "eks_fargate_pod",
											"provider_config_key": "fargate:aws",
											"schema_version":      0,
											"type":                "aws_iam_role_policy_attachment",
										},
										{
											"address": "data.aws_iam_policy_document.eks_fargate_pod_assume_role",
											"count_expression": {
												"references": [
													"local.create_eks",
													"var.create_fargate_pod_execution_role",
												],
											},
											"expressions": {
												"statement": [
													{
														"actions": {
															"constant_value": [
																"sts:AssumeRole",
															],
														},
														"effect": {
															"constant_value": "Allow",
														},
														"principals": [
															{
																"identifiers": {
																	"constant_value": [
																		"eks-fargate-pods.amazonaws.com",
																	],
																},
																"type": {
																	"constant_value": "Service",
																},
															},
														],
													},
												],
											},
											"mode":                "data",
											"name":                "eks_fargate_pod_assume_role",
											"provider_config_key": "fargate:aws",
											"schema_version":      0,
											"type":                "aws_iam_policy_document",
										},
										{
											"address": "data.aws_iam_role.custom_fargate_iam_role",
											"count_expression": {
												"references": [
													"local.create_eks",
													"var.create_fargate_pod_execution_role",
												],
											},
											"expressions": {
												"name": {
													"references": [
														"var.fargate_pod_execution_role_name",
													],
												},
											},
											"mode":                "data",
											"name":                "custom_fargate_iam_role",
											"provider_config_key": "fargate:aws",
											"schema_version":      0,
											"type":                "aws_iam_role",
										},
										{
											"address":             "data.aws_partition.current",
											"mode":                "data",
											"name":                "current",
											"provider_config_key": "fargate:aws",
											"schema_version":      0,
											"type":                "aws_partition",
										},
									],
									"variables": {
										"cluster_name": {
											"default":     "",
											"description": "Name of the EKS cluster.",
										},
										"create_eks": {
											"default":     true,
											"description": "Controls if EKS resources should be created (it affects almost all resources)",
										},
										"create_fargate_pod_execution_role": {
											"default":     true,
											"description": "Controls if the the IAM Role that provides permissions for the EKS Fargate Profile should be created.",
										},
										"fargate_pod_execution_role_name": {
											"description": "The IAM Role that provides permissions for the EKS Fargate Profile.",
										},
										"fargate_profiles": {
											"default":     {},
											"description": "Fargate profiles to create. See `fargate_profile` keys section in README.md for more details",
										},
										"iam_path": {
											"default":     "/",
											"description": "IAM roles will be created on this path.",
										},
										"permissions_boundary": {
											"description": "If provided, all IAM roles will be created with this permissions boundary attached.",
										},
										"subnets": {
											"default":     [],
											"description": "A list of subnets for the EKS Fargate profiles.",
										},
										"tags": {
											"default":     {},
											"description": "A map of tags to add to all resources.",
										},
									},
								},
								"source": "./modules/fargate",
							},
							"node_groups": {
								"depends_on": [
									"aws_eks_cluster.this",
									"aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
									"aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
									"aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
								],
								"expressions": {
									"cluster_auth_base64": {
										"references": [
											"local.cluster_auth_base64",
										],
									},
									"cluster_endpoint": {
										"references": [
											"local.cluster_endpoint",
										],
									},
									"cluster_name": {
										"references": [
											"local.cluster_name",
										],
									},
									"create_eks": {
										"references": [
											"var.create_eks",
										],
									},
									"default_iam_role_arn": {
										"references": [
											"aws_iam_role.workers",
										],
									},
									"ebs_optimized_not_supported": {
										"references": [
											"local.ebs_optimized_not_supported",
										],
									},
									"node_groups": {
										"references": [
											"var.node_groups",
										],
									},
									"node_groups_defaults": {
										"references": [
											"var.node_groups_defaults",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
									"worker_additional_security_group_ids": {
										"references": [
											"var.worker_additional_security_group_ids",
										],
									},
									"worker_security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"workers_group_defaults": {
										"references": [
											"local.workers_group_defaults",
										],
									},
								},
								"module": {
									"outputs": {
										"aws_auth_roles": {
											"description": "Roles for use in aws-auth ConfigMap",
											"expression": {
												"references": [
													"local.node_groups_expanded",
													"var.default_iam_role_arn",
												],
											},
										},
										"node_groups": {
											"description": "Outputs from EKS node groups. Map of maps, keyed by `var.node_groups` keys. See `aws_eks_node_group` Terraform documentation for values",
											"expression": {
												"references": [
													"aws_eks_node_group.workers",
												],
											},
										},
									},
									"resources": [
										{
											"address": "aws_eks_node_group.workers",
											"expressions": {
												"ami_type": {
													"references": [
														"each.value",
													],
												},
												"capacity_type": {
													"references": [
														"each.value",
													],
												},
												"cluster_name": {
													"references": [
														"var.cluster_name",
													],
												},
												"disk_size": {
													"references": [
														"each.value[\"launch_template_id\"]",
														"each.value",
														"each.value[\"create_launch_template\"]",
														"each.value",
														"each.value",
													],
												},
												"force_update_version": {
													"references": [
														"each.value",
													],
												},
												"instance_types": {
													"references": [
														"each.value[\"set_instance_types_on_lt\"]",
														"each.value",
														"each.value[\"instance_types\"]",
														"each.value",
													],
												},
												"labels": {
													"references": [
														"var.node_groups_defaults",
														"var.node_groups",
														"each.key",
													],
												},
												"node_group_name": {
													"references": [
														"each.value",
													],
												},
												"node_group_name_prefix": {
													"references": [
														"each.value",
														"local.node_groups_names",
														"each.key",
													],
												},
												"node_role_arn": {
													"references": [
														"each.value[\"iam_role_arn\"]",
														"each.value",
													],
												},
												"release_version": {
													"references": [
														"each.value",
													],
												},
												"scaling_config": [
													{
														"desired_size": {
															"references": [
																"each.value[\"desired_capacity\"]",
																"each.value",
															],
														},
														"max_size": {
															"references": [
																"each.value[\"max_capacity\"]",
																"each.value",
															],
														},
														"min_size": {
															"references": [
																"each.value[\"min_capacity\"]",
																"each.value",
															],
														},
													},
												],
												"subnet_ids": {
													"references": [
														"each.value[\"subnets\"]",
														"each.value",
													],
												},
												"tags": {
													"references": [
														"var.tags",
														"var.node_groups_defaults",
														"var.node_groups",
														"each.key",
													],
												},
												"timeouts": {},
												"version": {
													"references": [
														"each.value",
													],
												},
											},
											"for_each_expression": {
												"references": [
													"local.node_groups_expanded",
												],
											},
											"mode":                "managed",
											"name":                "workers",
											"provider_config_key": "node_groups:aws",
											"schema_version":      0,
											"type":                "aws_eks_node_group",
										},
										{
											"address": "aws_launch_template.workers",
											"expressions": {
												"block_device_mappings": [
													{
														"device_name": {
															"constant_value": "/dev/xvda",
														},
														"ebs": [
															{
																"delete_on_termination": {
																	"constant_value": true,
																},
																"encrypted": {
																	"references": [
																		"each.value",
																	],
																},
																"iops": {
																	"references": [
																		"each.value",
																	],
																},
																"kms_key_id": {
																	"references": [
																		"each.value",
																	],
																},
																"throughput": {
																	"references": [
																		"each.value",
																	],
																},
																"volume_size": {
																	"references": [
																		"each.value",
																	],
																},
																"volume_type": {
																	"references": [
																		"each.value",
																	],
																},
															},
														],
													},
												],
												"description": {
													"references": [
														"local.node_groups_names",
														"each.key",
													],
												},
												"ebs_optimized": {
													"references": [
														"each.value",
														"var.ebs_optimized_not_supported",
														"each.value.instance_types",
														"each.value",
													],
												},
												"image_id": {
													"references": [
														"each.value",
													],
												},
												"instance_type": {
													"references": [
														"each.value[\"set_instance_types_on_lt\"]",
														"each.value",
														"each.value.instance_types",
														"each.value",
													],
												},
												"key_name": {
													"references": [
														"each.value",
													],
												},
												"metadata_options": [
													{
														"http_endpoint": {
															"references": [
																"each.value",
															],
														},
														"http_put_response_hop_limit": {
															"references": [
																"each.value",
															],
														},
														"http_tokens": {
															"references": [
																"each.value",
															],
														},
													},
												],
												"monitoring": [
													{
														"enabled": {
															"references": [
																"each.value",
															],
														},
													},
												],
												"name_prefix": {
													"references": [
														"local.node_groups_names",
														"each.key",
													],
												},
												"network_interfaces": [
													{
														"associate_public_ip_address": {
															"references": [
																"each.value",
															],
														},
														"delete_on_termination": {
															"references": [
																"each.value",
															],
														},
														"security_groups": {
															"references": [
																"var.worker_security_group_id",
																"var.worker_additional_security_group_ids",
																"each.value",
															],
														},
													},
												],
												"tag_specifications": [
													{
														"resource_type": {
															"constant_value": "instance",
														},
														"tags": {
															"references": [
																"var.tags",
																"local.node_groups_names",
																"each.key",
																"var.node_groups_defaults",
																"var.node_groups",
																"each.key",
															],
														},
													},
													{
														"resource_type": {
															"constant_value": "volume",
														},
														"tags": {
															"references": [
																"var.tags",
																"local.node_groups_names",
																"each.key",
																"var.node_groups_defaults",
																"var.node_groups",
																"each.key",
															],
														},
													},
													{
														"resource_type": {
															"constant_value": "network-interface",
														},
														"tags": {
															"references": [
																"var.tags",
																"local.node_groups_names",
																"each.key",
																"var.node_groups_defaults",
																"var.node_groups",
																"each.key",
															],
														},
													},
												],
												"tags": {
													"references": [
														"var.tags",
														"var.node_groups_defaults",
														"var.node_groups",
														"each.key",
													],
												},
												"update_default_version": {
													"references": [
														"each.value",
													],
												},
												"user_data": {
													"references": [
														"data.cloudinit_config.workers_userdata",
														"each.key",
													],
												},
											},
											"for_each_expression": {
												"references": [
													"local.node_groups_expanded",
												],
											},
											"mode":                "managed",
											"name":                "workers",
											"provider_config_key": "node_groups:aws",
											"schema_version":      0,
											"type":                "aws_launch_template",
										},
										{
											"address": "data.cloudinit_config.workers_userdata",
											"expressions": {
												"base64_encode": {
													"constant_value": true,
												},
												"boundary": {
													"constant_value": "//",
												},
												"gzip": {
													"constant_value": false,
												},
												"part": [
													{
														"content": {
															"references": [
																"path.module",
																"var.cluster_name",
																"var.cluster_endpoint",
																"var.cluster_auth_base64",
																"each.value",
																"each.value[\"ami_is_eks_optimized\"]",
																"each.value",
																"each.value[\"bootstrap_env\"]",
																"each.value",
																"each.value[\"kubelet_extra_args\"]",
																"each.value",
																"each.value[\"pre_userdata\"]",
																"each.value",
																"each.value",
																"each.value",
																"each.value",
															],
														},
														"content_type": {
															"constant_value": "text/x-shellscript",
														},
													},
												],
											},
											"for_each_expression": {
												"references": [
													"local.node_groups_expanded",
												],
											},
											"mode":                "data",
											"name":                "workers_userdata",
											"provider_config_key": "node_groups:cloudinit",
											"schema_version":      0,
											"type":                "cloudinit_config",
										},
									],
									"variables": {
										"cluster_auth_base64": {
											"default":     "",
											"description": "Base64 encoded CA of parent cluster",
										},
										"cluster_endpoint": {
											"default":     "",
											"description": "Endpoint of parent cluster",
										},
										"cluster_name": {
											"default":     "",
											"description": "Name of parent cluster",
										},
										"create_eks": {
											"default":     true,
											"description": "Controls if EKS resources should be created (it affects almost all resources)",
										},
										"default_iam_role_arn": {
											"default":     "",
											"description": "ARN of the default IAM worker role to use if one is not specified in `var.node_groups` or `var.node_groups_defaults`",
										},
										"ebs_optimized_not_supported": {
											"default":     [],
											"description": "List of instance types that do not support EBS optimization",
										},
										"node_groups": {
											"default":     {},
											"description": "Map of maps of `eks_node_groups` to create. See \"`node_groups` and `node_groups_defaults` keys\" section in README.md for more details",
										},
										"node_groups_defaults": {
											"default":     {},
											"description": "map of maps of node groups to create. See \"`node_groups` and `node_groups_defaults` keys\" section in README.md for more details",
										},
										"tags": {
											"default":     {},
											"description": "A map of tags to add to all resources",
										},
										"worker_additional_security_group_ids": {
											"default":     [],
											"description": "A list of additional security group ids to attach to worker instances",
										},
										"worker_security_group_id": {
											"default":     "",
											"description": "If provided, all workers will be attached to this security group. If not given, a security group will be created with necessary ingress/egress to work with the EKS cluster.",
										},
										"workers_group_defaults": {
											"default":     {},
											"description": "Workers group defaults from parent",
										},
									},
								},
								"source": "./modules/node_groups",
							},
						},
						"outputs": {
							"cloudwatch_log_group_arn": {
								"description": "Arn of cloudwatch log group created",
								"expression": {
									"references": [
										"aws_cloudwatch_log_group.this",
									],
								},
							},
							"cloudwatch_log_group_name": {
								"description": "Name of cloudwatch log group created",
								"expression": {
									"references": [
										"aws_cloudwatch_log_group.this",
									],
								},
							},
							"cluster_arn": {
								"description": "The Amazon Resource Name (ARN) of the cluster.",
								"expression": {
									"references": [
										"local.cluster_arn",
									],
								},
							},
							"cluster_certificate_authority_data": {
								"description": "Nested attribute containing certificate-authority-data for your cluster. This is the base64 encoded certificate data required to communicate with your cluster.",
								"expression": {
									"references": [
										"local.cluster_auth_base64",
									],
								},
							},
							"cluster_endpoint": {
								"description": "The endpoint for your EKS Kubernetes API.",
								"expression": {
									"references": [
										"local.cluster_endpoint",
									],
								},
							},
							"cluster_iam_role_arn": {
								"description": "IAM role ARN of the EKS cluster.",
								"expression": {
									"references": [
										"local.cluster_iam_role_arn",
									],
								},
							},
							"cluster_iam_role_name": {
								"description": "IAM role name of the EKS cluster.",
								"expression": {
									"references": [
										"local.cluster_iam_role_name",
									],
								},
							},
							"cluster_id": {
								"depends_on": [
									"data.http.wait_for_cluster",
								],
								"description": "The name/id of the EKS cluster. Will block on cluster creation until the cluster is really ready.",
								"expression": {
									"references": [
										"local.cluster_id",
									],
								},
							},
							"cluster_oidc_issuer_url": {
								"description": "The URL on the EKS cluster OIDC Issuer",
								"expression": {
									"references": [
										"local.cluster_oidc_issuer_url",
									],
								},
							},
							"cluster_primary_security_group_id": {
								"description": "The cluster primary security group ID created by the EKS cluster on 1.14 or later. Referred to as 'Cluster security group' in the EKS console.",
								"expression": {
									"references": [
										"local.cluster_primary_security_group_id",
									],
								},
							},
							"cluster_security_group_id": {
								"description": "Security group ID attached to the EKS cluster. On 1.14 or later, this is the 'Additional security groups' in the EKS console.",
								"expression": {
									"references": [
										"local.cluster_security_group_id",
									],
								},
							},
							"cluster_version": {
								"description": "The Kubernetes server version for the EKS cluster.",
								"expression": {
									"references": [
										"aws_eks_cluster.this",
									],
								},
							},
							"config_map_aws_auth": {
								"description": "A kubernetes configuration to authenticate to this EKS cluster.",
								"expression": {
									"references": [
										"kubernetes_config_map.aws_auth",
									],
								},
							},
							"fargate_iam_role_arn": {
								"description": "IAM role ARN for EKS Fargate pods",
								"expression": {
									"references": [
										"module.fargate.iam_role_arn",
										"module.fargate",
									],
								},
							},
							"fargate_iam_role_name": {
								"description": "IAM role name for EKS Fargate pods",
								"expression": {
									"references": [
										"module.fargate.iam_role_name",
										"module.fargate",
									],
								},
							},
							"fargate_profile_arns": {
								"description": "Amazon Resource Name (ARN) of the EKS Fargate Profiles.",
								"expression": {
									"references": [
										"module.fargate.fargate_profile_arns",
										"module.fargate",
									],
								},
							},
							"fargate_profile_ids": {
								"description": "EKS Cluster name and EKS Fargate Profile names separated by a colon (:).",
								"expression": {
									"references": [
										"module.fargate.fargate_profile_ids",
										"module.fargate",
									],
								},
							},
							"kubeconfig": {
								"depends_on": [
									"data.http.wait_for_cluster",
								],
								"description": "kubectl config file contents for this EKS cluster. Will block on cluster creation until the cluster is really ready.",
								"expression": {
									"references": [
										"local.kubeconfig",
									],
								},
							},
							"kubeconfig_filename": {
								"depends_on": [
									"data.http.wait_for_cluster",
								],
								"description": "The filename of the generated kubectl config. Will block on cluster creation until the cluster is really ready.",
								"expression": {
									"references": [
										"local_file.kubeconfig",
									],
								},
							},
							"node_groups": {
								"description": "Outputs from EKS node groups. Map of maps, keyed by var.node_groups keys",
								"expression": {
									"references": [
										"module.node_groups.node_groups",
										"module.node_groups",
									],
								},
							},
							"oidc_provider_arn": {
								"description": "The ARN of the OIDC Provider if `enable_irsa = true`.",
								"expression": {
									"references": [
										"var.enable_irsa",
										"aws_iam_openid_connect_provider.oidc_provider",
									],
								},
							},
							"security_group_rule_cluster_https_worker_ingress": {
								"description": "Security group rule responsible for allowing pods to communicate with the EKS cluster API.",
								"expression": {
									"references": [
										"aws_security_group_rule.cluster_https_worker_ingress",
									],
								},
							},
							"worker_iam_instance_profile_arns": {
								"description": "default IAM instance profile ARN for EKS worker groups",
								"expression": {
									"references": [
										"aws_iam_instance_profile.workers",
										"aws_iam_instance_profile.workers_launch_template",
									],
								},
							},
							"worker_iam_instance_profile_names": {
								"description": "default IAM instance profile name for EKS worker groups",
								"expression": {
									"references": [
										"aws_iam_instance_profile.workers",
										"aws_iam_instance_profile.workers_launch_template",
									],
								},
							},
							"worker_iam_role_arn": {
								"description": "default IAM role ARN for EKS worker groups",
								"expression": {
									"references": [
										"aws_iam_role.workers",
										"data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
										"data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
									],
								},
							},
							"worker_iam_role_name": {
								"description": "default IAM role name for EKS worker groups",
								"expression": {
									"references": [
										"aws_iam_role.workers",
										"data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
										"data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
									],
								},
							},
							"worker_security_group_id": {
								"description": "Security group ID attached to the EKS workers.",
								"expression": {
									"references": [
										"local.worker_security_group_id",
									],
								},
							},
							"workers_asg_arns": {
								"description": "IDs of the autoscaling groups containing workers.",
								"expression": {
									"references": [
										"aws_autoscaling_group.workers",
										"aws_autoscaling_group.workers_launch_template",
									],
								},
							},
							"workers_asg_names": {
								"description": "Names of the autoscaling groups containing workers.",
								"expression": {
									"references": [
										"aws_autoscaling_group.workers",
										"aws_autoscaling_group.workers_launch_template",
									],
								},
							},
							"workers_default_ami_id": {
								"description": "ID of the default worker group AMI",
								"expression": {
									"references": [
										"local.default_ami_id_linux",
									],
								},
							},
							"workers_default_ami_id_windows": {
								"description": "ID of the default Windows worker group AMI",
								"expression": {
									"references": [
										"local.default_ami_id_windows",
									],
								},
							},
							"workers_launch_template_arns": {
								"description": "ARNs of the worker launch templates.",
								"expression": {
									"references": [
										"aws_launch_template.workers_launch_template",
									],
								},
							},
							"workers_launch_template_ids": {
								"description": "IDs of the worker launch templates.",
								"expression": {
									"references": [
										"aws_launch_template.workers_launch_template",
									],
								},
							},
							"workers_launch_template_latest_versions": {
								"description": "Latest versions of the worker launch templates.",
								"expression": {
									"references": [
										"aws_launch_template.workers_launch_template",
									],
								},
							},
							"workers_user_data": {
								"description": "User data of worker groups",
								"expression": {
									"references": [
										"local.launch_configuration_userdata_rendered",
										"local.launch_template_userdata_rendered",
									],
								},
							},
						},
						"resources": [
							{
								"address": "aws_autoscaling_group.workers",
								"count_expression": {
									"references": [
										"var.create_eks",
										"local.worker_group_launch_configuration_count",
									],
								},
								"expressions": {
									"capacity_rebalance": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"capacity_rebalance\"]",
											"local.workers_group_defaults",
										],
									},
									"default_cooldown": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"default_cooldown\"]",
											"local.workers_group_defaults",
										],
									},
									"desired_capacity": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"asg_desired_capacity\"]",
											"local.workers_group_defaults",
										],
									},
									"enabled_metrics": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"enabled_metrics\"]",
											"local.workers_group_defaults",
										],
									},
									"force_delete": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"asg_force_delete\"]",
											"local.workers_group_defaults",
										],
									},
									"health_check_grace_period": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"health_check_grace_period\"]",
											"local.workers_group_defaults",
										],
									},
									"health_check_type": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"health_check_type\"]",
											"local.workers_group_defaults",
										],
									},
									"launch_configuration": {
										"references": [
											"aws_launch_configuration.workers",
											"count.index",
										],
									},
									"load_balancers": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"load_balancers\"]",
											"local.workers_group_defaults",
										],
									},
									"max_instance_lifetime": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"max_instance_lifetime\"]",
											"local.workers_group_defaults",
										],
									},
									"max_size": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"asg_max_size\"]",
											"local.workers_group_defaults",
										],
									},
									"min_size": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"asg_min_size\"]",
											"local.workers_group_defaults",
										],
									},
									"name_prefix": {
										"references": [
											"local.cluster_name",
											"var.worker_groups",
											"count.index",
											"count.index",
										],
									},
									"placement_group": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"placement_group\"]",
											"local.workers_group_defaults",
										],
									},
									"protect_from_scale_in": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"protect_from_scale_in\"]",
											"local.workers_group_defaults",
										],
									},
									"service_linked_role_arn": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"service_linked_role_arn\"]",
											"local.workers_group_defaults",
										],
									},
									"suspended_processes": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"suspended_processes\"]",
											"local.workers_group_defaults",
										],
									},
									"target_group_arns": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"target_group_arns\"]",
											"local.workers_group_defaults",
										],
									},
									"termination_policies": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"termination_policies\"]",
											"local.workers_group_defaults",
										],
									},
									"vpc_zone_identifier": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"subnets\"]",
											"local.workers_group_defaults",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_autoscaling_group",
							},
							{
								"address": "aws_autoscaling_group.workers_launch_template",
								"count_expression": {
									"references": [
										"var.create_eks",
										"local.worker_group_launch_template_count",
									],
								},
								"expressions": {
									"capacity_rebalance": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"capacity_rebalance\"]",
											"local.workers_group_defaults",
										],
									},
									"default_cooldown": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"default_cooldown\"]",
											"local.workers_group_defaults",
										],
									},
									"desired_capacity": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"asg_desired_capacity\"]",
											"local.workers_group_defaults",
										],
									},
									"enabled_metrics": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"enabled_metrics\"]",
											"local.workers_group_defaults",
										],
									},
									"force_delete": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"asg_force_delete\"]",
											"local.workers_group_defaults",
										],
									},
									"health_check_grace_period": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"health_check_grace_period\"]",
											"local.workers_group_defaults",
										],
									},
									"health_check_type": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"health_check_type\"]",
											"local.workers_group_defaults",
										],
									},
									"load_balancers": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"load_balancers\"]",
											"local.workers_group_defaults",
										],
									},
									"max_instance_lifetime": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"max_instance_lifetime\"]",
											"local.workers_group_defaults",
										],
									},
									"max_size": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"asg_max_size\"]",
											"local.workers_group_defaults",
										],
									},
									"min_size": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"asg_min_size\"]",
											"local.workers_group_defaults",
										],
									},
									"name_prefix": {
										"references": [
											"local.cluster_name",
											"var.worker_groups_launch_template",
											"count.index",
											"count.index",
										],
									},
									"placement_group": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"placement_group\"]",
											"local.workers_group_defaults",
										],
									},
									"protect_from_scale_in": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"protect_from_scale_in\"]",
											"local.workers_group_defaults",
										],
									},
									"service_linked_role_arn": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"service_linked_role_arn\"]",
											"local.workers_group_defaults",
										],
									},
									"suspended_processes": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"suspended_processes\"]",
											"local.workers_group_defaults",
										],
									},
									"target_group_arns": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"target_group_arns\"]",
											"local.workers_group_defaults",
										],
									},
									"termination_policies": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"termination_policies\"]",
											"local.workers_group_defaults",
										],
									},
									"vpc_zone_identifier": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"subnets\"]",
											"local.workers_group_defaults",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers_launch_template",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_autoscaling_group",
							},
							{
								"address": "aws_cloudwatch_log_group.this",
								"count_expression": {
									"references": [
										"var.cluster_enabled_log_types",
										"var.create_eks",
									],
								},
								"expressions": {
									"kms_key_id": {
										"references": [
											"var.cluster_log_kms_key_id",
										],
									},
									"name": {
										"references": [
											"var.cluster_name",
										],
									},
									"retention_in_days": {
										"references": [
											"var.cluster_log_retention_in_days",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_cloudwatch_log_group",
							},
							{
								"address": "aws_eks_cluster.this",
								"count_expression": {
									"references": [
										"var.create_eks",
									],
								},
								"depends_on": [
									"aws_security_group_rule.cluster_egress_internet",
									"aws_security_group_rule.cluster_https_worker_ingress",
									"aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
									"aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
									"aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
									"aws_cloudwatch_log_group.this",
								],
								"expressions": {
									"enabled_cluster_log_types": {
										"references": [
											"var.cluster_enabled_log_types",
										],
									},
									"kubernetes_network_config": [
										{
											"service_ipv4_cidr": {
												"references": [
													"var.cluster_service_ipv4_cidr",
												],
											},
										},
									],
									"name": {
										"references": [
											"var.cluster_name",
										],
									},
									"role_arn": {
										"references": [
											"local.cluster_iam_role_arn",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.cluster_tags",
										],
									},
									"timeouts": {},
									"version": {
										"references": [
											"var.cluster_version",
										],
									},
									"vpc_config": [
										{
											"endpoint_private_access": {
												"references": [
													"var.cluster_endpoint_private_access",
												],
											},
											"endpoint_public_access": {
												"references": [
													"var.cluster_endpoint_public_access",
												],
											},
											"public_access_cidrs": {
												"references": [
													"var.cluster_endpoint_public_access_cidrs",
												],
											},
											"security_group_ids": {
												"references": [
													"local.cluster_security_group_id",
												],
											},
											"subnet_ids": {
												"references": [
													"var.subnets",
												],
											},
										},
									],
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_eks_cluster",
							},
							{
								"address": "aws_iam_instance_profile.workers",
								"count_expression": {
									"references": [
										"var.manage_worker_iam_resources",
										"var.create_eks",
										"local.worker_group_launch_configuration_count",
									],
								},
								"expressions": {
									"name_prefix": {
										"references": [
											"local.cluster_name",
										],
									},
									"path": {
										"references": [
											"var.iam_path",
										],
									},
									"role": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.default_iam_role_id",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_instance_profile",
							},
							{
								"address": "aws_iam_instance_profile.workers_launch_template",
								"count_expression": {
									"references": [
										"var.manage_worker_iam_resources",
										"var.create_eks",
										"local.worker_group_launch_template_count",
									],
								},
								"expressions": {
									"name_prefix": {
										"references": [
											"local.cluster_name",
										],
									},
									"path": {
										"references": [
											"var.iam_path",
										],
									},
									"role": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.default_iam_role_id",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers_launch_template",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_instance_profile",
							},
							{
								"address": "aws_iam_openid_connect_provider.oidc_provider",
								"count_expression": {
									"references": [
										"var.enable_irsa",
										"var.create_eks",
									],
								},
								"expressions": {
									"client_id_list": {
										"references": [
											"local.client_id_list",
										],
									},
									"tags": {
										"references": [
											"var.cluster_name",
											"var.tags",
										],
									},
									"thumbprint_list": {
										"references": [
											"var.eks_oidc_root_ca_thumbprint",
										],
									},
									"url": {
										"references": [
											"local.cluster_oidc_issuer_url",
										],
									},
								},
								"mode":                "managed",
								"name":                "oidc_provider",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_openid_connect_provider",
							},
							{
								"address": "aws_iam_policy.cluster_deny_log_group",
								"count_expression": {
									"references": [
										"var.manage_cluster_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Deny CreateLogGroup",
									},
									"name_prefix": {
										"references": [
											"var.cluster_name",
										],
									},
									"path": {
										"references": [
											"var.iam_path",
										],
									},
									"policy": {
										"references": [
											"data.aws_iam_policy_document.cluster_deny_log_group[0].json",
											"data.aws_iam_policy_document.cluster_deny_log_group[0]",
											"data.aws_iam_policy_document.cluster_deny_log_group",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "cluster_deny_log_group",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_policy.cluster_elb_sl_role_creation",
								"count_expression": {
									"references": [
										"var.manage_cluster_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Permissions for EKS to create AWSServiceRoleForElasticLoadBalancing service-linked role",
									},
									"name_prefix": {
										"references": [
											"var.cluster_name",
										],
									},
									"path": {
										"references": [
											"var.iam_path",
										],
									},
									"policy": {
										"references": [
											"data.aws_iam_policy_document.cluster_elb_sl_role_creation[0].json",
											"data.aws_iam_policy_document.cluster_elb_sl_role_creation[0]",
											"data.aws_iam_policy_document.cluster_elb_sl_role_creation",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "cluster_elb_sl_role_creation",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_role.cluster",
								"count_expression": {
									"references": [
										"var.manage_cluster_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"assume_role_policy": {
										"references": [
											"data.aws_iam_policy_document.cluster_assume_role_policy.json",
											"data.aws_iam_policy_document.cluster_assume_role_policy",
										],
									},
									"force_detach_policies": {
										"constant_value": true,
									},
									"name": {
										"references": [
											"var.cluster_iam_role_name",
											"var.cluster_iam_role_name",
										],
									},
									"name_prefix": {
										"references": [
											"var.cluster_iam_role_name",
											"var.cluster_name",
										],
									},
									"path": {
										"references": [
											"var.iam_path",
										],
									},
									"permissions_boundary": {
										"references": [
											"var.permissions_boundary",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "cluster",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role",
							},
							{
								"address": "aws_iam_role.workers",
								"count_expression": {
									"references": [
										"var.manage_worker_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"assume_role_policy": {
										"references": [
											"data.aws_iam_policy_document.workers_assume_role_policy.json",
											"data.aws_iam_policy_document.workers_assume_role_policy",
										],
									},
									"force_detach_policies": {
										"constant_value": true,
									},
									"name": {
										"references": [
											"var.workers_role_name",
											"var.workers_role_name",
										],
									},
									"name_prefix": {
										"references": [
											"var.workers_role_name",
											"local.cluster_name",
										],
									},
									"path": {
										"references": [
											"var.iam_path",
										],
									},
									"permissions_boundary": {
										"references": [
											"var.permissions_boundary",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role",
							},
							{
								"address": "aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
								"count_expression": {
									"references": [
										"var.manage_cluster_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"local.policy_arn_prefix",
										],
									},
									"role": {
										"references": [
											"local.cluster_iam_role_name",
										],
									},
								},
								"mode":                "managed",
								"name":                "cluster_AmazonEKSClusterPolicy",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
								"count_expression": {
									"references": [
										"var.manage_cluster_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"local.policy_arn_prefix",
										],
									},
									"role": {
										"references": [
											"local.cluster_iam_role_name",
										],
									},
								},
								"mode":                "managed",
								"name":                "cluster_AmazonEKSServicePolicy",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
								"count_expression": {
									"references": [
										"var.manage_cluster_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"local.policy_arn_prefix",
										],
									},
									"role": {
										"references": [
											"local.cluster_iam_role_name",
										],
									},
								},
								"mode":                "managed",
								"name":                "cluster_AmazonEKSVPCResourceControllerPolicy",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_iam_role_policy_attachment.cluster_deny_log_group",
								"count_expression": {
									"references": [
										"var.manage_cluster_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"aws_iam_policy.cluster_deny_log_group[0].arn",
											"aws_iam_policy.cluster_deny_log_group[0]",
											"aws_iam_policy.cluster_deny_log_group",
										],
									},
									"role": {
										"references": [
											"local.cluster_iam_role_name",
										],
									},
								},
								"mode":                "managed",
								"name":                "cluster_deny_log_group",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
								"count_expression": {
									"references": [
										"var.manage_cluster_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"aws_iam_policy.cluster_elb_sl_role_creation[0].arn",
											"aws_iam_policy.cluster_elb_sl_role_creation[0]",
											"aws_iam_policy.cluster_elb_sl_role_creation",
										],
									},
									"role": {
										"references": [
											"local.cluster_iam_role_name",
										],
									},
								},
								"mode":                "managed",
								"name":                "cluster_elb_sl_role_creation",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
								"count_expression": {
									"references": [
										"var.manage_worker_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"local.policy_arn_prefix",
										],
									},
									"role": {
										"references": [
											"aws_iam_role.workers[0].name",
											"aws_iam_role.workers[0]",
											"aws_iam_role.workers",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers_AmazonEC2ContainerRegistryReadOnly",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
								"count_expression": {
									"references": [
										"var.manage_worker_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"local.policy_arn_prefix",
										],
									},
									"role": {
										"references": [
											"aws_iam_role.workers[0].name",
											"aws_iam_role.workers[0]",
											"aws_iam_role.workers",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers_AmazonEKSWorkerNodePolicy",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
								"count_expression": {
									"references": [
										"var.manage_worker_iam_resources",
										"var.attach_worker_cni_policy",
										"var.create_eks",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"local.policy_arn_prefix",
										],
									},
									"role": {
										"references": [
											"aws_iam_role.workers[0].name",
											"aws_iam_role.workers[0]",
											"aws_iam_role.workers",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers_AmazonEKS_CNI_Policy",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_iam_role_policy_attachment.workers_additional_policies",
								"count_expression": {
									"references": [
										"var.manage_worker_iam_resources",
										"var.create_eks",
										"var.workers_additional_policies",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"var.workers_additional_policies",
											"count.index",
										],
									},
									"role": {
										"references": [
											"aws_iam_role.workers[0].name",
											"aws_iam_role.workers[0]",
											"aws_iam_role.workers",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers_additional_policies",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_launch_configuration.workers",
								"count_expression": {
									"references": [
										"var.create_eks",
										"local.worker_group_launch_configuration_count",
									],
								},
								"depends_on": [
									"aws_security_group_rule.workers_egress_internet",
									"aws_security_group_rule.workers_ingress_self",
									"aws_security_group_rule.workers_ingress_cluster",
									"aws_security_group_rule.workers_ingress_cluster_kubelet",
									"aws_security_group_rule.workers_ingress_cluster_https",
									"aws_security_group_rule.workers_ingress_cluster_primary",
									"aws_security_group_rule.cluster_primary_ingress_workers",
									"aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
									"aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
									"aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
									"aws_iam_role_policy_attachment.workers_additional_policies",
								],
								"expressions": {
									"associate_public_ip_address": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"public_ip\"]",
											"local.workers_group_defaults",
										],
									},
									"ebs_optimized": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.ebs_optimized_not_supported",
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"instance_type\"]",
											"local.workers_group_defaults",
										],
									},
									"enable_monitoring": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"enable_monitoring\"]",
											"local.workers_group_defaults",
										],
									},
									"iam_instance_profile": {
										"references": [
											"aws_iam_instance_profile.workers",
											"data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
											"count.index",
										],
									},
									"image_id": {
										"references": [
											"var.worker_groups",
											"count.index",
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"platform\"]",
											"local.workers_group_defaults",
											"local.default_ami_id_windows",
											"local.default_ami_id_linux",
										],
									},
									"instance_type": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"instance_type\"]",
											"local.workers_group_defaults",
										],
									},
									"key_name": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"key_name\"]",
											"local.workers_group_defaults",
										],
									},
									"metadata_options": [
										{
											"http_endpoint": {
												"references": [
													"var.worker_groups",
													"count.index",
													"local.workers_group_defaults[\"metadata_http_endpoint\"]",
													"local.workers_group_defaults",
												],
											},
											"http_put_response_hop_limit": {
												"references": [
													"var.worker_groups",
													"count.index",
													"local.workers_group_defaults[\"metadata_http_put_response_hop_limit\"]",
													"local.workers_group_defaults",
												],
											},
											"http_tokens": {
												"references": [
													"var.worker_groups",
													"count.index",
													"local.workers_group_defaults[\"metadata_http_tokens\"]",
													"local.workers_group_defaults",
												],
											},
										},
									],
									"name_prefix": {
										"references": [
											"local.cluster_name",
											"var.worker_groups",
											"count.index",
											"count.index",
										],
									},
									"placement_tenancy": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"placement_tenancy\"]",
											"local.workers_group_defaults",
										],
									},
									"root_block_device": [
										{
											"delete_on_termination": {
												"constant_value": true,
											},
											"encrypted": {
												"references": [
													"var.worker_groups",
													"count.index",
													"local.workers_group_defaults[\"root_encrypted\"]",
													"local.workers_group_defaults",
												],
											},
											"iops": {
												"references": [
													"var.worker_groups",
													"count.index",
													"local.workers_group_defaults[\"root_iops\"]",
													"local.workers_group_defaults",
												],
											},
											"throughput": {
												"references": [
													"var.worker_groups",
													"count.index",
													"local.workers_group_defaults[\"root_volume_throughput\"]",
													"local.workers_group_defaults",
												],
											},
											"volume_size": {
												"references": [
													"var.worker_groups",
													"count.index",
													"local.workers_group_defaults[\"root_volume_size\"]",
													"local.workers_group_defaults",
												],
											},
											"volume_type": {
												"references": [
													"var.worker_groups",
													"count.index",
													"local.workers_group_defaults[\"root_volume_type\"]",
													"local.workers_group_defaults",
												],
											},
										},
									],
									"security_groups": {
										"references": [
											"local.worker_security_group_id",
											"var.worker_additional_security_group_ids",
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"additional_security_group_ids\"]",
											"local.workers_group_defaults",
										],
									},
									"spot_price": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"spot_price\"]",
											"local.workers_group_defaults",
										],
									},
									"user_data_base64": {
										"references": [
											"local.launch_configuration_userdata_rendered",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_launch_configuration",
							},
							{
								"address": "aws_launch_template.workers_launch_template",
								"count_expression": {
									"references": [
										"var.create_eks",
										"local.worker_group_launch_template_count",
									],
								},
								"depends_on": [
									"aws_security_group_rule.workers_egress_internet",
									"aws_security_group_rule.workers_ingress_self",
									"aws_security_group_rule.workers_ingress_cluster",
									"aws_security_group_rule.workers_ingress_cluster_kubelet",
									"aws_security_group_rule.workers_ingress_cluster_https",
									"aws_security_group_rule.workers_ingress_cluster_primary",
									"aws_security_group_rule.cluster_primary_ingress_workers",
									"aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
									"aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
									"aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
									"aws_iam_role_policy_attachment.workers_additional_policies",
								],
								"expressions": {
									"block_device_mappings": [
										{
											"device_name": {
												"references": [
													"var.worker_groups_launch_template",
													"count.index",
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults[\"platform\"]",
													"local.workers_group_defaults",
													"local.workers_group_defaults[\"root_block_device_name_windows\"]",
													"local.workers_group_defaults",
													"local.workers_group_defaults[\"root_block_device_name\"]",
													"local.workers_group_defaults",
												],
											},
											"ebs": [
												{
													"delete_on_termination": {
														"constant_value": true,
													},
													"encrypted": {
														"references": [
															"var.worker_groups_launch_template",
															"count.index",
															"local.workers_group_defaults[\"root_encrypted\"]",
															"local.workers_group_defaults",
														],
													},
													"iops": {
														"references": [
															"var.worker_groups_launch_template",
															"count.index",
															"local.workers_group_defaults[\"root_iops\"]",
															"local.workers_group_defaults",
														],
													},
													"kms_key_id": {
														"references": [
															"var.worker_groups_launch_template",
															"count.index",
															"local.workers_group_defaults[\"root_kms_key_id\"]",
															"local.workers_group_defaults",
														],
													},
													"throughput": {
														"references": [
															"var.worker_groups_launch_template",
															"count.index",
															"local.workers_group_defaults[\"root_volume_throughput\"]",
															"local.workers_group_defaults",
														],
													},
													"volume_size": {
														"references": [
															"var.worker_groups_launch_template",
															"count.index",
															"local.workers_group_defaults[\"root_volume_size\"]",
															"local.workers_group_defaults",
														],
													},
													"volume_type": {
														"references": [
															"var.worker_groups_launch_template",
															"count.index",
															"local.workers_group_defaults[\"root_volume_type\"]",
															"local.workers_group_defaults",
														],
													},
												},
											],
										},
									],
									"ebs_optimized": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.ebs_optimized_not_supported",
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"instance_type\"]",
											"local.workers_group_defaults",
										],
									},
									"enclave_options": [
										{
											"enabled": {
												"references": [
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults[\"enclave_support\"]",
													"local.workers_group_defaults",
												],
											},
										},
									],
									"iam_instance_profile": [
										{
											"name": {
												"references": [
													"aws_iam_instance_profile.workers_launch_template",
													"data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
													"count.index",
												],
											},
										},
									],
									"image_id": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"platform\"]",
											"local.workers_group_defaults",
											"local.default_ami_id_windows",
											"local.default_ami_id_linux",
										],
									},
									"instance_type": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"instance_type\"]",
											"local.workers_group_defaults",
										],
									},
									"key_name": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"key_name\"]",
											"local.workers_group_defaults",
										],
									},
									"metadata_options": [
										{
											"http_endpoint": {
												"references": [
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults[\"metadata_http_endpoint\"]",
													"local.workers_group_defaults",
												],
											},
											"http_put_response_hop_limit": {
												"references": [
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults[\"metadata_http_put_response_hop_limit\"]",
													"local.workers_group_defaults",
												],
											},
											"http_tokens": {
												"references": [
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults[\"metadata_http_tokens\"]",
													"local.workers_group_defaults",
												],
											},
										},
									],
									"monitoring": [
										{
											"enabled": {
												"references": [
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults[\"enable_monitoring\"]",
													"local.workers_group_defaults",
												],
											},
										},
									],
									"name_prefix": {
										"references": [
											"local.cluster_name",
											"var.worker_groups_launch_template",
											"count.index",
											"count.index",
										],
									},
									"network_interfaces": [
										{
											"associate_public_ip_address": {
												"references": [
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults[\"public_ip\"]",
													"local.workers_group_defaults",
												],
											},
											"delete_on_termination": {
												"references": [
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults[\"eni_delete\"]",
													"local.workers_group_defaults",
												],
											},
											"interface_type": {
												"references": [
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults[\"interface_type\"]",
													"local.workers_group_defaults",
												],
											},
											"security_groups": {
												"references": [
													"local.worker_security_group_id",
													"var.worker_additional_security_group_ids",
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults[\"additional_security_group_ids\"]",
													"local.workers_group_defaults",
												],
											},
										},
									],
									"tag_specifications": [
										{
											"resource_type": {
												"constant_value": "volume",
											},
											"tags": {
												"references": [
													"local.cluster_name",
													"var.worker_groups_launch_template",
													"count.index",
													"count.index",
													"var.tags",
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults[\"tags\"]",
													"local.workers_group_defaults",
												],
											},
										},
										{
											"resource_type": {
												"constant_value": "instance",
											},
											"tags": {
												"references": [
													"local.cluster_name",
													"var.worker_groups_launch_template",
													"count.index",
													"count.index",
													"var.tags",
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults[\"tags\"]",
													"local.workers_group_defaults",
												],
											},
										},
										{
											"resource_type": {
												"constant_value": "network-interface",
											},
											"tags": {
												"references": [
													"local.cluster_name",
													"var.worker_groups_launch_template",
													"count.index",
													"count.index",
													"var.tags",
													"var.worker_groups_launch_template",
													"count.index",
													"local.workers_group_defaults[\"tags\"]",
													"local.workers_group_defaults",
												],
											},
										},
									],
									"tags": {
										"references": [
											"var.tags",
										],
									},
									"update_default_version": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"update_default_version\"]",
											"local.workers_group_defaults",
										],
									},
									"user_data": {
										"references": [
											"local.launch_template_userdata_rendered",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers_launch_template",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_launch_template",
							},
							{
								"address": "aws_security_group.cluster",
								"count_expression": {
									"references": [
										"var.cluster_create_security_group",
										"var.create_eks",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "EKS cluster security group.",
									},
									"name_prefix": {
										"references": [
											"var.cluster_name",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.cluster_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "cluster",
								"provider_config_key": "eks:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
							{
								"address": "aws_security_group.workers",
								"count_expression": {
									"references": [
										"var.worker_create_security_group",
										"var.create_eks",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Security group for all nodes in the cluster.",
									},
									"name_prefix": {
										"references": [
											"var.cluster_name",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.cluster_name",
											"var.cluster_name",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "workers",
								"provider_config_key": "eks:aws",
								"schema_version":      1,
								"type":                "aws_security_group",
							},
							{
								"address": "aws_security_group_rule.cluster_egress_internet",
								"count_expression": {
									"references": [
										"var.cluster_create_security_group",
										"var.create_eks",
									],
								},
								"expressions": {
									"cidr_blocks": {
										"references": [
											"var.cluster_egress_cidrs",
										],
									},
									"description": {
										"constant_value": "Allow cluster egress access to the Internet.",
									},
									"from_port": {
										"constant_value": 0,
									},
									"protocol": {
										"constant_value": "-1",
									},
									"security_group_id": {
										"references": [
											"local.cluster_security_group_id",
										],
									},
									"to_port": {
										"constant_value": 0,
									},
									"type": {
										"constant_value": "egress",
									},
								},
								"mode":                "managed",
								"name":                "cluster_egress_internet",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "aws_security_group_rule.cluster_https_worker_ingress",
								"count_expression": {
									"references": [
										"var.cluster_create_security_group",
										"var.create_eks",
										"var.worker_create_security_group",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Allow pods to communicate with the EKS cluster API.",
									},
									"from_port": {
										"constant_value": 443,
									},
									"protocol": {
										"constant_value": "tcp",
									},
									"security_group_id": {
										"references": [
											"local.cluster_security_group_id",
										],
									},
									"source_security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"to_port": {
										"constant_value": 443,
									},
									"type": {
										"constant_value": "ingress",
									},
								},
								"mode":                "managed",
								"name":                "cluster_https_worker_ingress",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "aws_security_group_rule.cluster_primary_ingress_workers",
								"count_expression": {
									"references": [
										"var.worker_create_security_group",
										"var.worker_create_cluster_primary_security_group_rules",
										"var.create_eks",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Allow pods running on workers to send communication to cluster primary security group (e.g. Fargate pods).",
									},
									"from_port": {
										"constant_value": 0,
									},
									"protocol": {
										"constant_value": "all",
									},
									"security_group_id": {
										"references": [
											"local.cluster_primary_security_group_id",
										],
									},
									"source_security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"to_port": {
										"constant_value": 65535,
									},
									"type": {
										"constant_value": "ingress",
									},
								},
								"mode":                "managed",
								"name":                "cluster_primary_ingress_workers",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "aws_security_group_rule.cluster_private_access_cidrs_source",
								"expressions": {
									"cidr_blocks": {
										"references": [
											"each.value",
										],
									},
									"description": {
										"constant_value": "Allow private K8S API ingress from custom CIDR source.",
									},
									"from_port": {
										"constant_value": 443,
									},
									"protocol": {
										"constant_value": "tcp",
									},
									"security_group_id": {
										"references": [
											"aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
											"aws_eks_cluster.this[0].vpc_config[0]",
											"aws_eks_cluster.this[0].vpc_config",
											"aws_eks_cluster.this[0]",
											"aws_eks_cluster.this",
										],
									},
									"to_port": {
										"constant_value": 443,
									},
									"type": {
										"constant_value": "ingress",
									},
								},
								"for_each_expression": {
									"references": [
										"var.create_eks",
										"var.cluster_create_endpoint_private_access_sg_rule",
										"var.cluster_endpoint_private_access",
										"var.cluster_endpoint_private_access_cidrs",
										"var.cluster_endpoint_private_access_cidrs",
									],
								},
								"mode":                "managed",
								"name":                "cluster_private_access_cidrs_source",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "aws_security_group_rule.cluster_private_access_sg_source",
								"count_expression": {
									"references": [
										"var.create_eks",
										"var.cluster_create_endpoint_private_access_sg_rule",
										"var.cluster_endpoint_private_access",
										"var.cluster_endpoint_private_access_sg",
										"var.cluster_endpoint_private_access_sg",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Allow private K8S API ingress from custom Security Groups source.",
									},
									"from_port": {
										"constant_value": 443,
									},
									"protocol": {
										"constant_value": "tcp",
									},
									"security_group_id": {
										"references": [
											"aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
											"aws_eks_cluster.this[0].vpc_config[0]",
											"aws_eks_cluster.this[0].vpc_config",
											"aws_eks_cluster.this[0]",
											"aws_eks_cluster.this",
										],
									},
									"source_security_group_id": {
										"references": [
											"var.cluster_endpoint_private_access_sg",
											"count.index",
										],
									},
									"to_port": {
										"constant_value": 443,
									},
									"type": {
										"constant_value": "ingress",
									},
								},
								"mode":                "managed",
								"name":                "cluster_private_access_sg_source",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "aws_security_group_rule.workers_egress_internet",
								"count_expression": {
									"references": [
										"var.worker_create_security_group",
										"var.create_eks",
									],
								},
								"expressions": {
									"cidr_blocks": {
										"references": [
											"var.workers_egress_cidrs",
										],
									},
									"description": {
										"constant_value": "Allow nodes all egress to the Internet.",
									},
									"from_port": {
										"constant_value": 0,
									},
									"protocol": {
										"constant_value": "-1",
									},
									"security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"to_port": {
										"constant_value": 0,
									},
									"type": {
										"constant_value": "egress",
									},
								},
								"mode":                "managed",
								"name":                "workers_egress_internet",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "aws_security_group_rule.workers_ingress_cluster",
								"count_expression": {
									"references": [
										"var.worker_create_security_group",
										"var.create_eks",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Allow workers pods to receive communication from the cluster control plane.",
									},
									"from_port": {
										"references": [
											"var.worker_sg_ingress_from_port",
										],
									},
									"protocol": {
										"constant_value": "tcp",
									},
									"security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"source_security_group_id": {
										"references": [
											"local.cluster_security_group_id",
										],
									},
									"to_port": {
										"constant_value": 65535,
									},
									"type": {
										"constant_value": "ingress",
									},
								},
								"mode":                "managed",
								"name":                "workers_ingress_cluster",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "aws_security_group_rule.workers_ingress_cluster_https",
								"count_expression": {
									"references": [
										"var.worker_create_security_group",
										"var.create_eks",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
									},
									"from_port": {
										"constant_value": 443,
									},
									"protocol": {
										"constant_value": "tcp",
									},
									"security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"source_security_group_id": {
										"references": [
											"local.cluster_security_group_id",
										],
									},
									"to_port": {
										"constant_value": 443,
									},
									"type": {
										"constant_value": "ingress",
									},
								},
								"mode":                "managed",
								"name":                "workers_ingress_cluster_https",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "aws_security_group_rule.workers_ingress_cluster_kubelet",
								"count_expression": {
									"references": [
										"var.worker_create_security_group",
										"var.create_eks",
										"var.worker_sg_ingress_from_port",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Allow workers Kubelets to receive communication from the cluster control plane.",
									},
									"from_port": {
										"constant_value": 10250,
									},
									"protocol": {
										"constant_value": "tcp",
									},
									"security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"source_security_group_id": {
										"references": [
											"local.cluster_security_group_id",
										],
									},
									"to_port": {
										"constant_value": 10250,
									},
									"type": {
										"constant_value": "ingress",
									},
								},
								"mode":                "managed",
								"name":                "workers_ingress_cluster_kubelet",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "aws_security_group_rule.workers_ingress_cluster_primary",
								"count_expression": {
									"references": [
										"var.worker_create_security_group",
										"var.worker_create_cluster_primary_security_group_rules",
										"var.create_eks",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Allow pods running on workers to receive communication from cluster primary security group (e.g. Fargate pods).",
									},
									"from_port": {
										"constant_value": 0,
									},
									"protocol": {
										"constant_value": "all",
									},
									"security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"source_security_group_id": {
										"references": [
											"local.cluster_primary_security_group_id",
										],
									},
									"to_port": {
										"constant_value": 65535,
									},
									"type": {
										"constant_value": "ingress",
									},
								},
								"mode":                "managed",
								"name":                "workers_ingress_cluster_primary",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "aws_security_group_rule.workers_ingress_self",
								"count_expression": {
									"references": [
										"var.worker_create_security_group",
										"var.create_eks",
									],
								},
								"expressions": {
									"description": {
										"constant_value": "Allow node to communicate with each other.",
									},
									"from_port": {
										"constant_value": 0,
									},
									"protocol": {
										"constant_value": "-1",
									},
									"security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"source_security_group_id": {
										"references": [
											"local.worker_security_group_id",
										],
									},
									"to_port": {
										"constant_value": 65535,
									},
									"type": {
										"constant_value": "ingress",
									},
								},
								"mode":                "managed",
								"name":                "workers_ingress_self",
								"provider_config_key": "eks:aws",
								"schema_version":      2,
								"type":                "aws_security_group_rule",
							},
							{
								"address": "kubernetes_config_map.aws_auth",
								"count_expression": {
									"references": [
										"var.create_eks",
										"var.manage_aws_auth",
									],
								},
								"depends_on": [
									"data.http.wait_for_cluster[0]",
								],
								"expressions": {
									"data": {
										"references": [
											"local.configmap_roles",
											"var.map_roles",
											"var.map_users",
											"var.map_accounts",
										],
									},
									"metadata": [
										{
											"labels": {
												"references": [
													"var.aws_auth_additional_labels",
												],
											},
											"name": {
												"constant_value": "aws-auth",
											},
											"namespace": {
												"constant_value": "kube-system",
											},
										},
									],
								},
								"mode":                "managed",
								"name":                "aws_auth",
								"provider_config_key": "eks:kubernetes",
								"schema_version":      0,
								"type":                "kubernetes_config_map",
							},
							{
								"address": "local_file.kubeconfig",
								"count_expression": {
									"references": [
										"var.write_kubeconfig",
										"var.create_eks",
									],
								},
								"expressions": {
									"content": {
										"references": [
											"local.kubeconfig",
										],
									},
									"directory_permission": {
										"constant_value": "0755",
									},
									"file_permission": {
										"references": [
											"var.kubeconfig_file_permission",
										],
									},
									"filename": {
										"references": [
											"var.kubeconfig_output_path",
											"var.kubeconfig_output_path",
											"var.cluster_name",
											"var.kubeconfig_output_path",
										],
									},
								},
								"mode":                "managed",
								"name":                "kubeconfig",
								"provider_config_key": "eks:local",
								"schema_version":      0,
								"type":                "local_file",
							},
							{
								"address": "data.aws_ami.eks_worker",
								"count_expression": {
									"references": [
										"local.worker_groups_platforms",
									],
								},
								"expressions": {
									"filter": [
										{
											"name": {
												"constant_value": "name",
											},
											"values": {
												"references": [
													"local.worker_ami_name_filter",
												],
											},
										},
									],
									"most_recent": {
										"constant_value": true,
									},
									"owners": {
										"references": [
											"var.worker_ami_owner_id",
										],
									},
								},
								"mode":                "data",
								"name":                "eks_worker",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_ami",
							},
							{
								"address": "data.aws_ami.eks_worker_windows",
								"count_expression": {
									"references": [
										"local.worker_groups_platforms",
									],
								},
								"expressions": {
									"filter": [
										{
											"name": {
												"constant_value": "name",
											},
											"values": {
												"references": [
													"local.worker_ami_name_filter_windows",
												],
											},
										},
										{
											"name": {
												"constant_value": "platform",
											},
											"values": {
												"constant_value": [
													"windows",
												],
											},
										},
									],
									"most_recent": {
										"constant_value": true,
									},
									"owners": {
										"references": [
											"var.worker_ami_owner_id_windows",
										],
									},
								},
								"mode":                "data",
								"name":                "eks_worker_windows",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_ami",
							},
							{
								"address":             "data.aws_caller_identity.current",
								"mode":                "data",
								"name":                "current",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_caller_identity",
							},
							{
								"address": "data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
								"count_expression": {
									"references": [
										"var.manage_worker_iam_resources",
										"local.worker_group_launch_configuration_count",
									],
								},
								"expressions": {
									"name": {
										"references": [
											"var.worker_groups",
											"count.index",
											"local.workers_group_defaults[\"iam_instance_profile_name\"]",
											"local.workers_group_defaults",
										],
									},
								},
								"mode":                "data",
								"name":                "custom_worker_group_iam_instance_profile",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_instance_profile",
							},
							{
								"address": "data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
								"count_expression": {
									"references": [
										"var.manage_worker_iam_resources",
										"local.worker_group_launch_template_count",
									],
								},
								"expressions": {
									"name": {
										"references": [
											"var.worker_groups_launch_template",
											"count.index",
											"local.workers_group_defaults[\"iam_instance_profile_name\"]",
											"local.workers_group_defaults",
										],
									},
								},
								"mode":                "data",
								"name":                "custom_worker_group_launch_template_iam_instance_profile",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_instance_profile",
							},
							{
								"address": "data.aws_iam_policy_document.cluster_assume_role_policy",
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"sts:AssumeRole",
												],
											},
											"principals": [
												{
													"identifiers": {
														"constant_value": [
															"eks.amazonaws.com",
														],
													},
													"type": {
														"constant_value": "Service",
													},
												},
											],
											"sid": {
												"constant_value": "EKSClusterAssumeRole",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "cluster_assume_role_policy",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_policy_document.cluster_deny_log_group",
								"count_expression": {
									"references": [
										"var.manage_cluster_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"logs:CreateLogGroup",
												],
											},
											"effect": {
												"constant_value": "Deny",
											},
											"resources": {
												"constant_value": [
													"*",
												],
											},
										},
									],
								},
								"mode":                "data",
								"name":                "cluster_deny_log_group",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_policy_document.cluster_elb_sl_role_creation",
								"count_expression": {
									"references": [
										"var.manage_cluster_iam_resources",
										"var.create_eks",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"ec2:DescribeAccountAttributes",
													"ec2:DescribeInternetGateways",
													"ec2:DescribeAddresses",
												],
											},
											"effect": {
												"constant_value": "Allow",
											},
											"resources": {
												"constant_value": [
													"*",
												],
											},
										},
									],
								},
								"mode":                "data",
								"name":                "cluster_elb_sl_role_creation",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_policy_document.workers_assume_role_policy",
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"sts:AssumeRole",
												],
											},
											"principals": [
												{
													"identifiers": {
														"references": [
															"local.ec2_principal",
														],
													},
													"type": {
														"constant_value": "Service",
													},
												},
											],
											"sid": {
												"constant_value": "EKSWorkerAssumeRole",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "workers_assume_role_policy",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_role.custom_cluster_iam_role",
								"count_expression": {
									"references": [
										"var.manage_cluster_iam_resources",
									],
								},
								"expressions": {
									"name": {
										"references": [
											"var.cluster_iam_role_name",
										],
									},
								},
								"mode":                "data",
								"name":                "custom_cluster_iam_role",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_iam_role",
							},
							{
								"address":             "data.aws_partition.current",
								"mode":                "data",
								"name":                "current",
								"provider_config_key": "eks:aws",
								"schema_version":      0,
								"type":                "aws_partition",
							},
							{
								"address": "data.http.wait_for_cluster",
								"count_expression": {
									"references": [
										"var.create_eks",
										"var.manage_aws_auth",
									],
								},
								"depends_on": [
									"aws_eks_cluster.this",
									"aws_security_group_rule.cluster_private_access_sg_source",
									"aws_security_group_rule.cluster_private_access_cidrs_source",
								],
								"expressions": {
									"ca_certificate": {
										"references": [
											"local.cluster_auth_base64",
										],
									},
									"timeout": {
										"references": [
											"var.wait_for_cluster_timeout",
										],
									},
									"url": {
										"references": [
											"aws_eks_cluster.this[0].endpoint",
											"aws_eks_cluster.this[0]",
											"aws_eks_cluster.this",
										],
									},
								},
								"mode":                "data",
								"name":                "wait_for_cluster",
								"provider_config_key": "eks:http",
								"schema_version":      0,
								"type":                "http",
							},
						],
						"variables": {
							"attach_worker_cni_policy": {
								"default":     true,
								"description": "Whether to attach the Amazon managed `AmazonEKS_CNI_Policy` IAM policy to the default worker IAM role. WARNING: If set `false` the permissions must be assigned to the `aws-node` DaemonSet pods via another method or nodes will not be able to join the cluster.",
							},
							"aws_auth_additional_labels": {
								"default":     {},
								"description": "Additional kubernetes labels applied on aws-auth ConfigMap",
							},
							"cluster_create_endpoint_private_access_sg_rule": {
								"default":     false,
								"description": "Whether to create security group rules for the access to the Amazon EKS private API server endpoint. When is `true`, `cluster_endpoint_private_access_cidrs` must be setted.",
							},
							"cluster_create_security_group": {
								"default":     true,
								"description": "Whether to create a security group for the cluster or attach the cluster to `cluster_security_group_id`.",
							},
							"cluster_create_timeout": {
								"default":     "30m",
								"description": "Timeout value when creating the EKS cluster.",
							},
							"cluster_delete_timeout": {
								"default":     "15m",
								"description": "Timeout value when deleting the EKS cluster.",
							},
							"cluster_egress_cidrs": {
								"default": [
									"0.0.0.0/0",
								],
								"description": "List of CIDR blocks that are permitted for cluster egress traffic.",
							},
							"cluster_enabled_log_types": {
								"default":     [],
								"description": "A list of the desired control plane logging to enable. For more information, see Amazon EKS Control Plane Logging documentation (https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html)",
							},
							"cluster_encryption_config": {
								"default":     [],
								"description": "Configuration block with encryption configuration for the cluster. See examples/secrets_encryption/main.tf for example format",
							},
							"cluster_endpoint_private_access": {
								"default":     false,
								"description": "Indicates whether or not the Amazon EKS private API server endpoint is enabled.",
							},
							"cluster_endpoint_private_access_cidrs": {
								"description": "List of CIDR blocks which can access the Amazon EKS private API server endpoint. To use this `cluster_endpoint_private_access` and `cluster_create_endpoint_private_access_sg_rule` must be set to `true`.",
							},
							"cluster_endpoint_private_access_sg": {
								"description": "List of security group IDs which can access the Amazon EKS private API server endpoint. To use this `cluster_endpoint_private_access` and `cluster_create_endpoint_private_access_sg_rule` must be set to `true`.",
							},
							"cluster_endpoint_public_access": {
								"default":     true,
								"description": "Indicates whether or not the Amazon EKS public API server endpoint is enabled. When it's set to `false` ensure to have a proper private access with `cluster_endpoint_private_access = true`.",
							},
							"cluster_endpoint_public_access_cidrs": {
								"default": [
									"0.0.0.0/0",
								],
								"description": "List of CIDR blocks which can access the Amazon EKS public API server endpoint.",
							},
							"cluster_iam_role_name": {
								"default":     "",
								"description": "IAM role name for the cluster. If manage_cluster_iam_resources is set to false, set this to reuse an existing IAM role. If manage_cluster_iam_resources is set to true, set this to force the created role name.",
							},
							"cluster_log_kms_key_id": {
								"default":     "",
								"description": "If a KMS Key ARN is set, this key will be used to encrypt the corresponding log group. Please be sure that the KMS Key has an appropriate key policy (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)",
							},
							"cluster_log_retention_in_days": {
								"default":     90,
								"description": "Number of days to retain log events. Default retention - 90 days.",
							},
							"cluster_name": {
								"default":     "",
								"description": "Name of the EKS cluster. Also used as a prefix in names of related resources.",
							},
							"cluster_security_group_id": {
								"default":     "",
								"description": "If provided, the EKS cluster will be attached to this security group. If not given, a security group will be created with necessary ingress/egress to work with the workers",
							},
							"cluster_service_ipv4_cidr": {
								"description": "service ipv4 cidr for the kubernetes cluster",
							},
							"cluster_tags": {
								"default":     {},
								"description": "A map of tags to add to just the eks resource.",
							},
							"cluster_update_timeout": {
								"default":     "60m",
								"description": "Timeout value when updating the EKS cluster.",
							},
							"cluster_version": {
								"description": "Kubernetes minor version to use for the EKS cluster (for example 1.21).",
							},
							"create_eks": {
								"default":     true,
								"description": "Controls if EKS resources should be created (it affects almost all resources)",
							},
							"create_fargate_pod_execution_role": {
								"default":     true,
								"description": "Controls if the EKS Fargate pod execution IAM role should be created.",
							},
							"default_platform": {
								"default":     "linux",
								"description": "Default platform name. Valid options are `linux` and `windows`.",
							},
							"eks_oidc_root_ca_thumbprint": {
								"default":     "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
								"description": "Thumbprint of Root CA for EKS OIDC, Valid until 2037",
							},
							"enable_irsa": {
								"default":     false,
								"description": "Whether to create OpenID Connect Provider for EKS to enable IRSA",
							},
							"fargate_pod_execution_role_name": {
								"description": "The IAM Role that provides permissions for the EKS Fargate Profile.",
							},
							"fargate_profiles": {
								"default":     {},
								"description": "Fargate profiles to create. See `fargate_profile` keys section in fargate submodule's README.md for more details",
							},
							"fargate_subnets": {
								"default":     [],
								"description": "A list of subnets to place fargate workers within (if different from subnets).",
							},
							"iam_path": {
								"default":     "/",
								"description": "If provided, all IAM roles will be created on this path.",
							},
							"kubeconfig_api_version": {
								"default":     "client.authentication.k8s.io/v1alpha1",
								"description": "KubeConfig API version. Defaults to client.authentication.k8s.io/v1alpha1",
							},
							"kubeconfig_aws_authenticator_additional_args": {
								"default":     [],
								"description": "Any additional arguments to pass to the authenticator such as the role to assume. e.g. [\"-r\", \"MyEksRole\"].",
							},
							"kubeconfig_aws_authenticator_command": {
								"default":     "aws-iam-authenticator",
								"description": "Command to use to fetch AWS EKS credentials.",
							},
							"kubeconfig_aws_authenticator_command_args": {
								"default":     [],
								"description": "Default arguments passed to the authenticator command. Defaults to [token -i $cluster_name].",
							},
							"kubeconfig_aws_authenticator_env_variables": {
								"default":     {},
								"description": "Environment variables that should be used when executing the authenticator. e.g. { AWS_PROFILE = \"eks\"}.",
							},
							"kubeconfig_file_permission": {
								"default":     "0600",
								"description": "File permission of the Kubectl config file containing cluster configuration saved to `kubeconfig_output_path.`",
							},
							"kubeconfig_name": {
								"default":     "",
								"description": "Override the default name used for items kubeconfig.",
							},
							"kubeconfig_output_path": {
								"default":     "./",
								"description": "Where to save the Kubectl config file (if `write_kubeconfig = true`). Assumed to be a directory if the value ends with a forward slash `/`.",
							},
							"manage_aws_auth": {
								"default":     true,
								"description": "Whether to apply the aws-auth configmap file.",
							},
							"manage_cluster_iam_resources": {
								"default":     true,
								"description": "Whether to let the module manage cluster IAM resources. If set to false, cluster_iam_role_name must be specified.",
							},
							"manage_worker_iam_resources": {
								"default":     true,
								"description": "Whether to let the module manage worker IAM resources. If set to false, iam_instance_profile_name must be specified for workers.",
							},
							"map_accounts": {
								"default":     [],
								"description": "Additional AWS account numbers to add to the aws-auth configmap.",
							},
							"map_roles": {
								"default":     [],
								"description": "Additional IAM roles to add to the aws-auth configmap.",
							},
							"map_users": {
								"default":     [],
								"description": "Additional IAM users to add to the aws-auth configmap.",
							},
							"node_groups": {
								"default":     {},
								"description": "Map of map of node groups to create. See `node_groups` module's documentation for more details",
							},
							"node_groups_defaults": {
								"default":     {},
								"description": "Map of values to be applied to all node groups. See `node_groups` module's documentation for more details",
							},
							"openid_connect_audiences": {
								"default":     [],
								"description": "List of OpenID Connect audience client IDs to add to the IRSA provider.",
							},
							"permissions_boundary": {
								"description": "If provided, all IAM roles will be created with this permissions boundary attached.",
							},
							"subnets": {
								"default":     [],
								"description": "A list of subnets to place the EKS cluster and workers within.",
							},
							"tags": {
								"default":     {},
								"description": "A map of tags to add to all resources. Tags added to launch configuration or templates override these values for ASG Tags only.",
							},
							"vpc_id": {
								"description": "VPC where the cluster and workers will be deployed.",
							},
							"wait_for_cluster_timeout": {
								"default":     300,
								"description": "A timeout (in seconds) to wait for cluster to be available.",
							},
							"worker_additional_security_group_ids": {
								"default":     [],
								"description": "A list of additional security group ids to attach to worker instances",
							},
							"worker_ami_name_filter": {
								"default":     "",
								"description": "Name filter for AWS EKS worker AMI. If not provided, the latest official AMI for the specified 'cluster_version' is used.",
							},
							"worker_ami_name_filter_windows": {
								"default":     "",
								"description": "Name filter for AWS EKS Windows worker AMI. If not provided, the latest official AMI for the specified 'cluster_version' is used.",
							},
							"worker_ami_owner_id": {
								"default":     "amazon",
								"description": "The ID of the owner for the AMI to use for the AWS EKS workers. Valid values are an AWS account ID, 'self' (the current account), or an AWS owner alias (e.g. 'amazon', 'aws-marketplace', 'microsoft').",
							},
							"worker_ami_owner_id_windows": {
								"default":     "amazon",
								"description": "The ID of the owner for the AMI to use for the AWS EKS Windows workers. Valid values are an AWS account ID, 'self' (the current account), or an AWS owner alias (e.g. 'amazon', 'aws-marketplace', 'microsoft').",
							},
							"worker_create_cluster_primary_security_group_rules": {
								"default":     false,
								"description": "Whether to create security group rules to allow communication between pods on workers and pods using the primary cluster security group.",
							},
							"worker_create_initial_lifecycle_hooks": {
								"default":     false,
								"description": "Whether to create initial lifecycle hooks provided in worker groups.",
							},
							"worker_create_security_group": {
								"default":     true,
								"description": "Whether to create a security group for the workers or attach the workers to `worker_security_group_id`.",
							},
							"worker_groups": {
								"default":     [],
								"description": "A list of maps defining worker group configurations to be defined using AWS Launch Configurations. See workers_group_defaults for valid keys.",
							},
							"worker_groups_launch_template": {
								"default":     [],
								"description": "A list of maps defining worker group configurations to be defined using AWS Launch Templates. See workers_group_defaults for valid keys.",
							},
							"worker_security_group_id": {
								"default":     "",
								"description": "If provided, all workers will be attached to this security group. If not given, a security group will be created with necessary ingress/egress to work with the EKS cluster.",
							},
							"worker_sg_ingress_from_port": {
								"default":     1025,
								"description": "Minimum port number from which pods will accept communication. Must be changed to a lower value if some pods in your cluster will expose a port lower than 1025 (e.g. 22, 80, or 443).",
							},
							"workers_additional_policies": {
								"default":     [],
								"description": "Additional policies to be added to workers",
							},
							"workers_egress_cidrs": {
								"default": [
									"0.0.0.0/0",
								],
								"description": "List of CIDR blocks that are permitted for workers egress traffic.",
							},
							"workers_group_defaults": {
								"default":     {},
								"description": "Override default values for target groups. See workers_group_defaults_defaults in local.tf for valid keys.",
							},
							"workers_role_name": {
								"default":     "",
								"description": "User defined workers role name.",
							},
							"write_kubeconfig": {
								"default":     true,
								"description": "Whether to write a Kubectl config file containing the cluster configuration. Saved to `kubeconfig_output_path`.",
							},
						},
					},
					"source":             "terraform-aws-modules/eks/aws",
					"version_constraint": "17.24.0",
				},
				"vpc": {
					"expressions": {
						"azs": {
							"references": [
								"data.aws_availability_zones.available.names",
								"data.aws_availability_zones.available",
							],
						},
						"cidr": {
							"constant_value": "10.0.0.0/16",
						},
						"enable_dns_hostnames": {
							"constant_value": true,
						},
						"enable_nat_gateway": {
							"constant_value": true,
						},
						"name": {
							"constant_value": "education-vpc",
						},
						"private_subnet_tags": {
							"references": [
								"local.cluster_name",
							],
						},
						"private_subnets": {
							"constant_value": [
								"10.0.1.0/24",
								"10.0.2.0/24",
								"10.0.3.0/24",
							],
						},
						"public_subnet_tags": {
							"references": [
								"local.cluster_name",
							],
						},
						"public_subnets": {
							"constant_value": [
								"10.0.4.0/24",
								"10.0.5.0/24",
								"10.0.6.0/24",
							],
						},
						"single_nat_gateway": {
							"constant_value": true,
						},
						"tags": {
							"references": [
								"local.cluster_name",
							],
						},
					},
					"module": {
						"outputs": {
							"azs": {
								"description": "A list of availability zones specified as argument to this module",
								"expression": {
									"references": [
										"var.azs",
									],
								},
							},
							"cgw_arns": {
								"description": "List of ARNs of Customer Gateway",
								"expression": {
									"references": [
										"aws_customer_gateway.this",
									],
								},
							},
							"cgw_ids": {
								"description": "List of IDs of Customer Gateway",
								"expression": {
									"references": [
										"aws_customer_gateway.this",
									],
								},
							},
							"database_internet_gateway_route_id": {
								"description": "ID of the database internet gateway route.",
								"expression": {
									"references": [
										"aws_route.database_internet_gateway",
									],
								},
							},
							"database_ipv6_egress_route_id": {
								"description": "ID of the database IPv6 egress route.",
								"expression": {
									"references": [
										"aws_route.database_ipv6_egress",
									],
								},
							},
							"database_nat_gateway_route_ids": {
								"description": "List of IDs of the database nat gateway route.",
								"expression": {
									"references": [
										"aws_route.database_nat_gateway",
									],
								},
							},
							"database_network_acl_arn": {
								"description": "ARN of the database network ACL",
								"expression": {
									"references": [
										"aws_network_acl.database",
									],
								},
							},
							"database_network_acl_id": {
								"description": "ID of the database network ACL",
								"expression": {
									"references": [
										"aws_network_acl.database",
									],
								},
							},
							"database_route_table_association_ids": {
								"description": "List of IDs of the database route table association",
								"expression": {
									"references": [
										"aws_route_table_association.database",
									],
								},
							},
							"database_route_table_ids": {
								"description": "List of IDs of database route tables",
								"expression": {
									"references": [
										"aws_route_table.database",
										"aws_route_table.database",
										"aws_route_table.private",
									],
								},
							},
							"database_subnet_arns": {
								"description": "List of ARNs of database subnets",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"database_subnet_group": {
								"description": "ID of database subnet group",
								"expression": {
									"references": [
										"aws_db_subnet_group.database",
									],
								},
							},
							"database_subnet_group_name": {
								"description": "Name of database subnet group",
								"expression": {
									"references": [
										"aws_db_subnet_group.database",
									],
								},
							},
							"database_subnets": {
								"description": "List of IDs of database subnets",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"database_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of database subnets",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"database_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"default_network_acl_id": {
								"description": "The ID of the default network ACL",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"default_route_table_id": {
								"description": "The ID of the default route table",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"default_security_group_id": {
								"description": "The ID of the security group created by default on VPC creation",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"default_vpc_arn": {
								"description": "The ARN of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_cidr_block": {
								"description": "The CIDR block of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_default_network_acl_id": {
								"description": "The ID of the default network ACL of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_default_route_table_id": {
								"description": "The ID of the default route table of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_default_security_group_id": {
								"description": "The ID of the security group created by default on Default VPC creation",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_enable_dns_hostnames": {
								"description": "Whether or not the Default VPC has DNS hostname support",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_enable_dns_support": {
								"description": "Whether or not the Default VPC has DNS support",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_id": {
								"description": "The ID of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_instance_tenancy": {
								"description": "Tenancy of instances spin up within Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_main_route_table_id": {
								"description": "The ID of the main route table associated with the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"egress_only_internet_gateway_id": {
								"description": "The ID of the egress only Internet Gateway",
								"expression": {
									"references": [
										"aws_egress_only_internet_gateway.this",
									],
								},
							},
							"elasticache_network_acl_arn": {
								"description": "ARN of the elasticache network ACL",
								"expression": {
									"references": [
										"aws_network_acl.elasticache",
									],
								},
							},
							"elasticache_network_acl_id": {
								"description": "ID of the elasticache network ACL",
								"expression": {
									"references": [
										"aws_network_acl.elasticache",
									],
								},
							},
							"elasticache_route_table_association_ids": {
								"description": "List of IDs of the elasticache route table association",
								"expression": {
									"references": [
										"aws_route_table_association.elasticache",
									],
								},
							},
							"elasticache_route_table_ids": {
								"description": "List of IDs of elasticache route tables",
								"expression": {
									"references": [
										"aws_route_table.elasticache",
										"aws_route_table.elasticache",
										"aws_route_table.private",
									],
								},
							},
							"elasticache_subnet_arns": {
								"description": "List of ARNs of elasticache subnets",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"elasticache_subnet_group": {
								"description": "ID of elasticache subnet group",
								"expression": {
									"references": [
										"aws_elasticache_subnet_group.elasticache",
									],
								},
							},
							"elasticache_subnet_group_name": {
								"description": "Name of elasticache subnet group",
								"expression": {
									"references": [
										"aws_elasticache_subnet_group.elasticache",
									],
								},
							},
							"elasticache_subnets": {
								"description": "List of IDs of elasticache subnets",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"elasticache_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of elasticache subnets",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"elasticache_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"igw_arn": {
								"description": "The ARN of the Internet Gateway",
								"expression": {
									"references": [
										"aws_internet_gateway.this",
									],
								},
							},
							"igw_id": {
								"description": "The ID of the Internet Gateway",
								"expression": {
									"references": [
										"aws_internet_gateway.this",
									],
								},
							},
							"intra_network_acl_arn": {
								"description": "ARN of the intra network ACL",
								"expression": {
									"references": [
										"aws_network_acl.intra",
									],
								},
							},
							"intra_network_acl_id": {
								"description": "ID of the intra network ACL",
								"expression": {
									"references": [
										"aws_network_acl.intra",
									],
								},
							},
							"intra_route_table_association_ids": {
								"description": "List of IDs of the intra route table association",
								"expression": {
									"references": [
										"aws_route_table_association.intra",
									],
								},
							},
							"intra_route_table_ids": {
								"description": "List of IDs of intra route tables",
								"expression": {
									"references": [
										"aws_route_table.intra",
									],
								},
							},
							"intra_subnet_arns": {
								"description": "List of ARNs of intra subnets",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"intra_subnets": {
								"description": "List of IDs of intra subnets",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"intra_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of intra subnets",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"intra_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"name": {
								"description": "The name of the VPC specified as argument to this module",
								"expression": {
									"references": [
										"var.name",
									],
								},
							},
							"nat_ids": {
								"description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway",
								"expression": {
									"references": [
										"aws_eip.nat",
									],
								},
							},
							"nat_public_ips": {
								"description": "List of public Elastic IPs created for AWS NAT Gateway",
								"expression": {
									"references": [
										"var.reuse_nat_ips",
										"var.external_nat_ips",
										"aws_eip.nat",
									],
								},
							},
							"natgw_ids": {
								"description": "List of NAT Gateway IDs",
								"expression": {
									"references": [
										"aws_nat_gateway.this",
									],
								},
							},
							"outpost_network_acl_arn": {
								"description": "ARN of the outpost network ACL",
								"expression": {
									"references": [
										"aws_network_acl.outpost",
									],
								},
							},
							"outpost_network_acl_id": {
								"description": "ID of the outpost network ACL",
								"expression": {
									"references": [
										"aws_network_acl.outpost",
									],
								},
							},
							"outpost_subnet_arns": {
								"description": "List of ARNs of outpost subnets",
								"expression": {
									"references": [
										"aws_subnet.outpost",
									],
								},
							},
							"outpost_subnets": {
								"description": "List of IDs of outpost subnets",
								"expression": {
									"references": [
										"aws_subnet.outpost",
									],
								},
							},
							"outpost_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of outpost subnets",
								"expression": {
									"references": [
										"aws_subnet.outpost",
									],
								},
							},
							"outpost_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.outpost",
									],
								},
							},
							"private_ipv6_egress_route_ids": {
								"description": "List of IDs of the ipv6 egress route.",
								"expression": {
									"references": [
										"aws_route.private_ipv6_egress",
									],
								},
							},
							"private_nat_gateway_route_ids": {
								"description": "List of IDs of the private nat gateway route.",
								"expression": {
									"references": [
										"aws_route.private_nat_gateway",
									],
								},
							},
							"private_network_acl_arn": {
								"description": "ARN of the private network ACL",
								"expression": {
									"references": [
										"aws_network_acl.private",
									],
								},
							},
							"private_network_acl_id": {
								"description": "ID of the private network ACL",
								"expression": {
									"references": [
										"aws_network_acl.private",
									],
								},
							},
							"private_route_table_association_ids": {
								"description": "List of IDs of the private route table association",
								"expression": {
									"references": [
										"aws_route_table_association.private",
									],
								},
							},
							"private_route_table_ids": {
								"description": "List of IDs of private route tables",
								"expression": {
									"references": [
										"aws_route_table.private",
									],
								},
							},
							"private_subnet_arns": {
								"description": "List of ARNs of private subnets",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"private_subnets": {
								"description": "List of IDs of private subnets",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"private_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of private subnets",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"private_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"public_internet_gateway_ipv6_route_id": {
								"description": "ID of the IPv6 internet gateway route.",
								"expression": {
									"references": [
										"aws_route.public_internet_gateway_ipv6",
									],
								},
							},
							"public_internet_gateway_route_id": {
								"description": "ID of the internet gateway route.",
								"expression": {
									"references": [
										"aws_route.public_internet_gateway",
									],
								},
							},
							"public_network_acl_arn": {
								"description": "ARN of the public network ACL",
								"expression": {
									"references": [
										"aws_network_acl.public",
									],
								},
							},
							"public_network_acl_id": {
								"description": "ID of the public network ACL",
								"expression": {
									"references": [
										"aws_network_acl.public",
									],
								},
							},
							"public_route_table_association_ids": {
								"description": "List of IDs of the public route table association",
								"expression": {
									"references": [
										"aws_route_table_association.public",
									],
								},
							},
							"public_route_table_ids": {
								"description": "List of IDs of public route tables",
								"expression": {
									"references": [
										"aws_route_table.public",
									],
								},
							},
							"public_subnet_arns": {
								"description": "List of ARNs of public subnets",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"public_subnets": {
								"description": "List of IDs of public subnets",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"public_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of public subnets",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"public_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"redshift_network_acl_arn": {
								"description": "ARN of the redshift network ACL",
								"expression": {
									"references": [
										"aws_network_acl.redshift",
									],
								},
							},
							"redshift_network_acl_id": {
								"description": "ID of the redshift network ACL",
								"expression": {
									"references": [
										"aws_network_acl.redshift",
									],
								},
							},
							"redshift_public_route_table_association_ids": {
								"description": "List of IDs of the public redshidt route table association",
								"expression": {
									"references": [
										"aws_route_table_association.redshift_public",
									],
								},
							},
							"redshift_route_table_association_ids": {
								"description": "List of IDs of the redshift route table association",
								"expression": {
									"references": [
										"aws_route_table_association.redshift",
									],
								},
							},
							"redshift_route_table_ids": {
								"description": "List of IDs of redshift route tables",
								"expression": {
									"references": [
										"aws_route_table.redshift",
										"aws_route_table.redshift",
										"aws_route_table.private",
									],
								},
							},
							"redshift_subnet_arns": {
								"description": "List of ARNs of redshift subnets",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"redshift_subnet_group": {
								"description": "ID of redshift subnet group",
								"expression": {
									"references": [
										"aws_redshift_subnet_group.redshift",
									],
								},
							},
							"redshift_subnets": {
								"description": "List of IDs of redshift subnets",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"redshift_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of redshift subnets",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"redshift_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"this_customer_gateway": {
								"description": "Map of Customer Gateway attributes",
								"expression": {
									"references": [
										"aws_customer_gateway.this",
									],
								},
							},
							"vgw_arn": {
								"description": "The ARN of the VPN Gateway",
								"expression": {
									"references": [
										"aws_vpn_gateway.this",
									],
								},
							},
							"vgw_id": {
								"description": "The ID of the VPN Gateway",
								"expression": {
									"references": [
										"aws_vpn_gateway.this",
										"aws_vpn_gateway_attachment.this",
									],
								},
							},
							"vpc_arn": {
								"description": "The ARN of the VPC",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_cidr_block": {
								"description": "The CIDR block of the VPC",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_enable_dns_hostnames": {
								"description": "Whether or not the VPC has DNS hostname support",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_enable_dns_support": {
								"description": "Whether or not the VPC has DNS support",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_flow_log_cloudwatch_iam_role_arn": {
								"description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group",
								"expression": {
									"references": [
										"local.flow_log_iam_role_arn",
									],
								},
							},
							"vpc_flow_log_destination_arn": {
								"description": "The ARN of the destination for VPC Flow Logs",
								"expression": {
									"references": [
										"local.flow_log_destination_arn",
									],
								},
							},
							"vpc_flow_log_destination_type": {
								"description": "The type of the destination for VPC Flow Logs",
								"expression": {
									"references": [
										"var.flow_log_destination_type",
									],
								},
							},
							"vpc_flow_log_id": {
								"description": "The ID of the Flow Log resource",
								"expression": {
									"references": [
										"aws_flow_log.this",
									],
								},
							},
							"vpc_id": {
								"description": "The ID of the VPC",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_instance_tenancy": {
								"description": "Tenancy of instances spin up within VPC",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_ipv6_association_id": {
								"description": "The association ID for the IPv6 CIDR block",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_ipv6_cidr_block": {
								"description": "The IPv6 CIDR block",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_main_route_table_id": {
								"description": "The ID of the main route table associated with this VPC",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_owner_id": {
								"description": "The ID of the AWS account that owns the VPC",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_secondary_cidr_blocks": {
								"description": "List of secondary CIDR blocks of the VPC",
								"expression": {
									"references": [
										"aws_vpc_ipv4_cidr_block_association.this",
									],
								},
							},
						},
						"resources": [
							{
								"address": "aws_cloudwatch_log_group.flow_log",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_log_group",
									],
								},
								"expressions": {
									"kms_key_id": {
										"references": [
											"var.flow_log_cloudwatch_log_group_kms_key_id",
										],
									},
									"name": {
										"references": [
											"var.flow_log_cloudwatch_log_group_name_prefix",
											"local.vpc_id",
										],
									},
									"retention_in_days": {
										"references": [
											"var.flow_log_cloudwatch_log_group_retention_in_days",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.vpc_flow_log_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "flow_log",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_cloudwatch_log_group",
							},
							{
								"address": "aws_customer_gateway.this",
								"expressions": {
									"bgp_asn": {
										"references": [
											"each.value[\"bgp_asn\"]",
											"each.value",
										],
									},
									"ip_address": {
										"references": [
											"each.value[\"ip_address\"]",
											"each.value",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"each.key",
											"var.tags",
											"var.customer_gateway_tags",
										],
									},
									"type": {
										"constant_value": "ipsec.1",
									},
								},
								"for_each_expression": {
									"references": [
										"var.customer_gateways",
									],
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_customer_gateway",
							},
							{
								"address": "aws_db_subnet_group.database",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.database_subnets",
										"var.create_database_subnet_group",
									],
								},
								"expressions": {
									"description": {
										"references": [
											"var.name",
										],
									},
									"name": {
										"references": [
											"var.database_subnet_group_name",
											"var.name",
										],
									},
									"subnet_ids": {
										"references": [
											"aws_subnet.database",
										],
									},
									"tags": {
										"references": [
											"var.database_subnet_group_name",
											"var.name",
											"var.tags",
											"var.database_subnet_group_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_db_subnet_group",
							},
							{
								"address": "aws_default_network_acl.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.manage_default_network_acl",
									],
								},
								"expressions": {
									"default_network_acl_id": {
										"references": [
											"aws_vpc.this",
										],
									},
									"subnet_ids": {
										"references": [
											"aws_subnet.public",
											"aws_subnet.private",
											"aws_subnet.intra",
											"aws_subnet.database",
											"aws_subnet.redshift",
											"aws_subnet.elasticache",
											"aws_subnet.outpost",
											"aws_network_acl.public",
											"aws_network_acl.private",
											"aws_network_acl.intra",
											"aws_network_acl.database",
											"aws_network_acl.redshift",
											"aws_network_acl.elasticache",
											"aws_network_acl.outpost",
										],
									},
									"tags": {
										"references": [
											"var.default_network_acl_name",
											"var.tags",
											"var.default_network_acl_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_default_network_acl",
							},
							{
								"address": "aws_default_route_table.default",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.manage_default_route_table",
									],
								},
								"expressions": {
									"default_route_table_id": {
										"references": [
											"aws_vpc.this[0].default_route_table_id",
											"aws_vpc.this[0]",
											"aws_vpc.this",
										],
									},
									"propagating_vgws": {
										"references": [
											"var.default_route_table_propagating_vgws",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.default_route_table_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "default",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_default_route_table",
							},
							{
								"address": "aws_default_security_group.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.manage_default_security_group",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.default_security_group_name",
											"var.tags",
											"var.default_security_group_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this[0].id",
											"aws_vpc.this[0]",
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      1,
								"type":                "aws_default_security_group",
							},
							{
								"address": "aws_default_vpc.this",
								"count_expression": {
									"references": [
										"var.manage_default_vpc",
									],
								},
								"expressions": {
									"enable_classiclink": {
										"references": [
											"var.default_vpc_enable_classiclink",
										],
									},
									"enable_dns_hostnames": {
										"references": [
											"var.default_vpc_enable_dns_hostnames",
										],
									},
									"enable_dns_support": {
										"references": [
											"var.default_vpc_enable_dns_support",
										],
									},
									"tags": {
										"references": [
											"var.default_vpc_name",
											"var.tags",
											"var.default_vpc_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      1,
								"type":                "aws_default_vpc",
							},
							{
								"address": "aws_egress_only_internet_gateway.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_egress_only_igw",
										"var.enable_ipv6",
										"local.max_subnet_length",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.igw_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_egress_only_internet_gateway",
							},
							{
								"address": "aws_eip.nat",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_nat_gateway",
										"var.reuse_nat_ips",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.azs",
											"var.single_nat_gateway",
											"count.index",
											"var.tags",
											"var.nat_eip_tags",
										],
									},
									"vpc": {
										"constant_value": true,
									},
								},
								"mode":                "managed",
								"name":                "nat",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_eip",
							},
							{
								"address": "aws_elasticache_subnet_group.elasticache",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.elasticache_subnets",
										"var.create_elasticache_subnet_group",
									],
								},
								"expressions": {
									"description": {
										"references": [
											"var.name",
										],
									},
									"name": {
										"references": [
											"var.name",
										],
									},
									"subnet_ids": {
										"references": [
											"aws_subnet.elasticache",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_elasticache_subnet_group",
							},
							{
								"address": "aws_flow_log.this",
								"count_expression": {
									"references": [
										"local.enable_flow_log",
									],
								},
								"expressions": {
									"iam_role_arn": {
										"references": [
											"local.flow_log_iam_role_arn",
										],
									},
									"log_destination": {
										"references": [
											"local.flow_log_destination_arn",
										],
									},
									"log_destination_type": {
										"references": [
											"var.flow_log_destination_type",
										],
									},
									"log_format": {
										"references": [
											"var.flow_log_log_format",
										],
									},
									"max_aggregation_interval": {
										"references": [
											"var.flow_log_max_aggregation_interval",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.vpc_flow_log_tags",
										],
									},
									"traffic_type": {
										"references": [
											"var.flow_log_traffic_type",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_flow_log",
							},
							{
								"address": "aws_iam_policy.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"name_prefix": {
										"constant_value": "vpc-flow-log-to-cloudwatch-",
									},
									"policy": {
										"references": [
											"data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json",
											"data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]",
											"data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
										],
									},
								},
								"mode":                "managed",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_role.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"assume_role_policy": {
										"references": [
											"data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json",
											"data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]",
											"data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
										],
									},
									"name_prefix": {
										"constant_value": "vpc-flow-log-role-",
									},
									"permissions_boundary": {
										"references": [
											"var.vpc_flow_log_permissions_boundary",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.vpc_flow_log_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_iam_role",
							},
							{
								"address": "aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"aws_iam_policy.vpc_flow_log_cloudwatch[0].arn",
											"aws_iam_policy.vpc_flow_log_cloudwatch[0]",
											"aws_iam_policy.vpc_flow_log_cloudwatch",
										],
									},
									"role": {
										"references": [
											"aws_iam_role.vpc_flow_log_cloudwatch[0].name",
											"aws_iam_role.vpc_flow_log_cloudwatch[0]",
											"aws_iam_role.vpc_flow_log_cloudwatch",
										],
									},
								},
								"mode":                "managed",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_internet_gateway.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_igw",
										"var.public_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.igw_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_internet_gateway",
							},
							{
								"address": "aws_nat_gateway.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_nat_gateway",
										"local.nat_gateway_count",
									],
								},
								"depends_on": [
									"aws_internet_gateway.this",
								],
								"expressions": {
									"allocation_id": {
										"references": [
											"local.nat_gateway_ips",
											"var.single_nat_gateway",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.public",
											"var.single_nat_gateway",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.azs",
											"var.single_nat_gateway",
											"count.index",
											"var.tags",
											"var.nat_gateway_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_nat_gateway",
							},
							{
								"address": "aws_network_acl.database",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.database_dedicated_network_acl",
										"var.database_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.database",
										],
									},
									"tags": {
										"references": [
											"var.database_subnet_suffix",
											"var.name",
											"var.tags",
											"var.database_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.elasticache",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.elasticache_dedicated_network_acl",
										"var.elasticache_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.elasticache",
										],
									},
									"tags": {
										"references": [
											"var.elasticache_subnet_suffix",
											"var.name",
											"var.tags",
											"var.elasticache_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.intra",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.intra_dedicated_network_acl",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.intra",
										],
									},
									"tags": {
										"references": [
											"var.intra_subnet_suffix",
											"var.name",
											"var.tags",
											"var.intra_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.outpost",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.outpost_dedicated_network_acl",
										"var.outpost_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.outpost",
										],
									},
									"tags": {
										"references": [
											"var.outpost_subnet_suffix",
											"var.name",
											"var.tags",
											"var.outpost_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "outpost",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.private",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.private_dedicated_network_acl",
										"var.private_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"var.private_subnet_suffix",
											"var.name",
											"var.tags",
											"var.private_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.public",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.public_dedicated_network_acl",
										"var.public_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.public",
										],
									},
									"tags": {
										"references": [
											"var.public_subnet_suffix",
											"var.name",
											"var.tags",
											"var.public_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.redshift",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_dedicated_network_acl",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.redshift",
										],
									},
									"tags": {
										"references": [
											"var.redshift_subnet_suffix",
											"var.name",
											"var.tags",
											"var.redshift_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl_rule.database_inbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.database_dedicated_network_acl",
										"var.database_subnets",
										"var.database_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.database[0].id",
											"aws_network_acl.database[0]",
											"aws_network_acl.database",
										],
									},
									"protocol": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "database_inbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.database_outbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.database_dedicated_network_acl",
										"var.database_subnets",
										"var.database_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.database[0].id",
											"aws_network_acl.database[0]",
											"aws_network_acl.database",
										],
									},
									"protocol": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "database_outbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.elasticache_inbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.elasticache_dedicated_network_acl",
										"var.elasticache_subnets",
										"var.elasticache_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.elasticache[0].id",
											"aws_network_acl.elasticache[0]",
											"aws_network_acl.elasticache",
										],
									},
									"protocol": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache_inbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.elasticache_outbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.elasticache_dedicated_network_acl",
										"var.elasticache_subnets",
										"var.elasticache_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.elasticache[0].id",
											"aws_network_acl.elasticache[0]",
											"aws_network_acl.elasticache",
										],
									},
									"protocol": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache_outbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.intra_inbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.intra_dedicated_network_acl",
										"var.intra_subnets",
										"var.intra_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.intra[0].id",
											"aws_network_acl.intra[0]",
											"aws_network_acl.intra",
										],
									},
									"protocol": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra_inbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.intra_outbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.intra_dedicated_network_acl",
										"var.intra_subnets",
										"var.intra_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.intra[0].id",
											"aws_network_acl.intra[0]",
											"aws_network_acl.intra",
										],
									},
									"protocol": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra_outbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.outpost_inbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.outpost_dedicated_network_acl",
										"var.outpost_subnets",
										"var.outpost_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.outpost[0].id",
											"aws_network_acl.outpost[0]",
											"aws_network_acl.outpost",
										],
									},
									"protocol": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "outpost_inbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.outpost_outbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.outpost_dedicated_network_acl",
										"var.outpost_subnets",
										"var.outpost_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.outpost[0].id",
											"aws_network_acl.outpost[0]",
											"aws_network_acl.outpost",
										],
									},
									"protocol": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "outpost_outbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.private_inbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.private_dedicated_network_acl",
										"var.private_subnets",
										"var.private_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.private[0].id",
											"aws_network_acl.private[0]",
											"aws_network_acl.private",
										],
									},
									"protocol": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private_inbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.private_outbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.private_dedicated_network_acl",
										"var.private_subnets",
										"var.private_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.private[0].id",
											"aws_network_acl.private[0]",
											"aws_network_acl.private",
										],
									},
									"protocol": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private_outbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.public_inbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.public_dedicated_network_acl",
										"var.public_subnets",
										"var.public_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.public[0].id",
											"aws_network_acl.public[0]",
											"aws_network_acl.public",
										],
									},
									"protocol": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public_inbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.public_outbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.public_dedicated_network_acl",
										"var.public_subnets",
										"var.public_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.public[0].id",
											"aws_network_acl.public[0]",
											"aws_network_acl.public",
										],
									},
									"protocol": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public_outbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.redshift_inbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_dedicated_network_acl",
										"var.redshift_subnets",
										"var.redshift_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.redshift[0].id",
											"aws_network_acl.redshift[0]",
											"aws_network_acl.redshift",
										],
									},
									"protocol": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift_inbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.redshift_outbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_dedicated_network_acl",
										"var.redshift_subnets",
										"var.redshift_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.redshift[0].id",
											"aws_network_acl.redshift[0]",
											"aws_network_acl.redshift",
										],
									},
									"protocol": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift_outbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_redshift_subnet_group.redshift",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_subnets",
										"var.create_redshift_subnet_group",
									],
								},
								"expressions": {
									"description": {
										"references": [
											"var.name",
										],
									},
									"name": {
										"references": [
											"var.name",
										],
									},
									"subnet_ids": {
										"references": [
											"aws_subnet.redshift",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.redshift_subnet_group_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_redshift_subnet_group",
							},
							{
								"address": "aws_route.database_internet_gateway",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_igw",
										"var.create_database_subnet_route_table",
										"var.database_subnets",
										"var.create_database_internet_gateway_route",
										"var.create_database_nat_gateway_route",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"constant_value": "0.0.0.0/0",
									},
									"gateway_id": {
										"references": [
											"aws_internet_gateway.this[0].id",
											"aws_internet_gateway.this[0]",
											"aws_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.database[0].id",
											"aws_route_table.database[0]",
											"aws_route_table.database",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "database_internet_gateway",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.database_ipv6_egress",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_egress_only_igw",
										"var.enable_ipv6",
										"var.create_database_subnet_route_table",
										"var.database_subnets",
										"var.create_database_internet_gateway_route",
									],
								},
								"expressions": {
									"destination_ipv6_cidr_block": {
										"constant_value": "::/0",
									},
									"egress_only_gateway_id": {
										"references": [
											"aws_egress_only_internet_gateway.this[0].id",
											"aws_egress_only_internet_gateway.this[0]",
											"aws_egress_only_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.database[0].id",
											"aws_route_table.database[0]",
											"aws_route_table.database",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "database_ipv6_egress",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.database_nat_gateway",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_database_subnet_route_table",
										"var.database_subnets",
										"var.create_database_internet_gateway_route",
										"var.create_database_nat_gateway_route",
										"var.enable_nat_gateway",
										"var.single_nat_gateway",
										"var.database_subnets",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"constant_value": "0.0.0.0/0",
									},
									"nat_gateway_id": {
										"references": [
											"aws_nat_gateway.this",
											"count.index",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.database",
											"count.index",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "database_nat_gateway",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.private_ipv6_egress",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_egress_only_igw",
										"var.enable_ipv6",
										"var.private_subnets",
									],
								},
								"expressions": {
									"destination_ipv6_cidr_block": {
										"constant_value": "::/0",
									},
									"egress_only_gateway_id": {
										"references": [
											"aws_egress_only_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private_ipv6_egress",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.private_nat_gateway",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_nat_gateway",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"constant_value": "0.0.0.0/0",
									},
									"nat_gateway_id": {
										"references": [
											"aws_nat_gateway.this",
											"count.index",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "private_nat_gateway",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.public_internet_gateway",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_igw",
										"var.public_subnets",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"constant_value": "0.0.0.0/0",
									},
									"gateway_id": {
										"references": [
											"aws_internet_gateway.this[0].id",
											"aws_internet_gateway.this[0]",
											"aws_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.public[0].id",
											"aws_route_table.public[0]",
											"aws_route_table.public",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "public_internet_gateway",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.public_internet_gateway_ipv6",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_igw",
										"var.enable_ipv6",
										"var.public_subnets",
									],
								},
								"expressions": {
									"destination_ipv6_cidr_block": {
										"constant_value": "::/0",
									},
									"gateway_id": {
										"references": [
											"aws_internet_gateway.this[0].id",
											"aws_internet_gateway.this[0]",
											"aws_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.public[0].id",
											"aws_route_table.public[0]",
											"aws_route_table.public",
										],
									},
								},
								"mode":                "managed",
								"name":                "public_internet_gateway_ipv6",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route_table.database",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_database_subnet_route_table",
										"var.database_subnets",
										"var.single_nat_gateway",
										"var.create_database_internet_gateway_route",
										"var.database_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.single_nat_gateway",
											"var.create_database_internet_gateway_route",
											"var.name",
											"var.database_subnet_suffix",
											"var.database_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.database_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.elasticache",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_elasticache_subnet_route_table",
										"var.elasticache_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.elasticache_subnet_suffix",
											"var.tags",
											"var.elasticache_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.intra",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.intra_subnet_suffix",
											"var.tags",
											"var.intra_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.private",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"local.max_subnet_length",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.single_nat_gateway",
											"var.name",
											"var.private_subnet_suffix",
											"var.private_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.private_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.public",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.public_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.public_subnet_suffix",
											"var.name",
											"var.tags",
											"var.public_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.redshift",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_redshift_subnet_route_table",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.redshift_subnet_suffix",
											"var.tags",
											"var.redshift_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table_association.database",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.database_subnets",
										"var.database_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.database",
											"aws_route_table.private",
											"var.create_database_subnet_route_table",
											"var.single_nat_gateway",
											"var.create_database_internet_gateway_route",
											"count.index",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.database",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.elasticache",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.elasticache_subnets",
										"var.elasticache_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.elasticache",
											"aws_route_table.private",
											"var.single_nat_gateway",
											"var.create_elasticache_subnet_route_table",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.elasticache",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.intra",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.intra_subnets",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.intra",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.intra",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.outpost",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.outpost_subnets",
										"var.outpost_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"var.single_nat_gateway",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.outpost",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "outpost",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.private",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.private_subnets",
										"var.private_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"var.single_nat_gateway",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.private",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.public",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.public_subnets",
										"var.public_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.public[0].id",
											"aws_route_table.public[0]",
											"aws_route_table.public",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.public",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.redshift",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_subnets",
										"var.enable_public_redshift",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.redshift",
											"aws_route_table.private",
											"var.single_nat_gateway",
											"var.create_redshift_subnet_route_table",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.redshift",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.redshift_public",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_subnets",
										"var.enable_public_redshift",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.redshift",
											"aws_route_table.public",
											"var.single_nat_gateway",
											"var.create_redshift_subnet_route_table",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.redshift",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift_public",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_subnet.database",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.database_subnets",
										"var.database_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.database_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.database_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.database_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.database_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.database_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.database_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.database_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "vpc:aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.elasticache",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.elasticache_subnets",
										"var.elasticache_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.elasticache_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.elasticache_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.elasticache_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.elasticache_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.elasticache_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.elasticache_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.elasticache_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "vpc:aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.intra",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.intra_subnets",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.intra_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.intra_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.intra_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.intra_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.intra_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.intra_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.intra_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "vpc:aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.outpost",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.outpost_subnets",
										"var.outpost_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.outpost_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.outpost_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.outpost_az",
										],
									},
									"cidr_block": {
										"references": [
											"var.outpost_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.outpost_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.outpost_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"outpost_arn": {
										"references": [
											"var.outpost_arn",
										],
									},
									"tags": {
										"references": [
											"var.outpost_subnet_suffix",
											"var.name",
											"var.outpost_az",
											"var.tags",
											"var.outpost_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "outpost",
								"provider_config_key": "vpc:aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.private",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.private_subnets",
										"var.private_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.private_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.private_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.private_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.private_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.private_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.private_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.private_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "vpc:aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.public",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.public_subnets",
										"var.one_nat_gateway_per_az",
										"var.public_subnets",
										"var.azs",
										"var.public_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.public_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.public_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.public_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.public_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.public_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"map_public_ip_on_launch": {
										"references": [
											"var.map_public_ip_on_launch",
										],
									},
									"tags": {
										"references": [
											"var.public_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.public_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "vpc:aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.redshift",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_subnets",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.redshift_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.redshift_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.redshift_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.redshift_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.redshift_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.redshift_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.redshift_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "vpc:aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_vpc.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
									],
								},
								"expressions": {
									"assign_generated_ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
										],
									},
									"cidr_block": {
										"references": [
											"var.cidr",
										],
									},
									"enable_classiclink": {
										"references": [
											"var.enable_classiclink",
										],
									},
									"enable_classiclink_dns_support": {
										"references": [
											"var.enable_classiclink_dns_support",
										],
									},
									"enable_dns_hostnames": {
										"references": [
											"var.enable_dns_hostnames",
										],
									},
									"enable_dns_support": {
										"references": [
											"var.enable_dns_support",
										],
									},
									"instance_tenancy": {
										"references": [
											"var.instance_tenancy",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.vpc_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      1,
								"type":                "aws_vpc",
							},
							{
								"address": "aws_vpc_dhcp_options.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_dhcp_options",
									],
								},
								"expressions": {
									"domain_name": {
										"references": [
											"var.dhcp_options_domain_name",
										],
									},
									"domain_name_servers": {
										"references": [
											"var.dhcp_options_domain_name_servers",
										],
									},
									"netbios_name_servers": {
										"references": [
											"var.dhcp_options_netbios_name_servers",
										],
									},
									"netbios_node_type": {
										"references": [
											"var.dhcp_options_netbios_node_type",
										],
									},
									"ntp_servers": {
										"references": [
											"var.dhcp_options_ntp_servers",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.dhcp_options_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_dhcp_options",
							},
							{
								"address": "aws_vpc_dhcp_options_association.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_dhcp_options",
									],
								},
								"expressions": {
									"dhcp_options_id": {
										"references": [
											"aws_vpc_dhcp_options.this[0].id",
											"aws_vpc_dhcp_options.this[0]",
											"aws_vpc_dhcp_options.this",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_dhcp_options_association",
							},
							{
								"address": "aws_vpc_ipv4_cidr_block_association.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.secondary_cidr_blocks",
										"var.secondary_cidr_blocks",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.secondary_cidr_blocks",
											"count.index",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this[0].id",
											"aws_vpc.this[0]",
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_ipv4_cidr_block_association",
							},
							{
								"address": "aws_vpn_gateway.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_vpn_gateway",
									],
								},
								"expressions": {
									"amazon_side_asn": {
										"references": [
											"var.amazon_side_asn",
										],
									},
									"availability_zone": {
										"references": [
											"var.vpn_gateway_az",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.vpn_gateway_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway",
							},
							{
								"address": "aws_vpn_gateway_attachment.this",
								"count_expression": {
									"references": [
										"var.vpn_gateway_id",
									],
								},
								"expressions": {
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"var.vpn_gateway_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_attachment",
							},
							{
								"address": "aws_vpn_gateway_route_propagation.intra",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.propagate_intra_route_tables_vgw",
										"var.enable_vpn_gateway",
										"var.vpn_gateway_id",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.intra",
											"count.index",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"aws_vpn_gateway.this",
											"aws_vpn_gateway_attachment.this",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_route_propagation",
							},
							{
								"address": "aws_vpn_gateway_route_propagation.private",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.propagate_private_route_tables_vgw",
										"var.enable_vpn_gateway",
										"var.vpn_gateway_id",
										"var.private_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"aws_vpn_gateway.this",
											"aws_vpn_gateway_attachment.this",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_route_propagation",
							},
							{
								"address": "aws_vpn_gateway_route_propagation.public",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.propagate_public_route_tables_vgw",
										"var.enable_vpn_gateway",
										"var.vpn_gateway_id",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.public",
											"count.index",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"aws_vpn_gateway.this",
											"aws_vpn_gateway_attachment.this",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_route_propagation",
							},
							{
								"address": "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"sts:AssumeRole",
												],
											},
											"effect": {
												"constant_value": "Allow",
											},
											"principals": [
												{
													"identifiers": {
														"constant_value": [
															"vpc-flow-logs.amazonaws.com",
														],
													},
													"type": {
														"constant_value": "Service",
													},
												},
											],
										},
									],
								},
								"mode":                "data",
								"name":                "flow_log_cloudwatch_assume_role",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"logs:CreateLogStream",
													"logs:PutLogEvents",
													"logs:DescribeLogGroups",
													"logs:DescribeLogStreams",
												],
											},
											"effect": {
												"constant_value": "Allow",
											},
											"resources": {
												"constant_value": [
													"*",
												],
											},
											"sid": {
												"constant_value": "AWSVPCFlowLogsPushToCloudWatch",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
						],
						"variables": {
							"amazon_side_asn": {
								"default":     "64512",
								"description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN.",
							},
							"assign_ipv6_address_on_creation": {
								"default":     false,
								"description": "Assign IPv6 address on subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"azs": {
								"default":     [],
								"description": "A list of availability zones names or ids in the region",
							},
							"cidr": {
								"default":     "0.0.0.0/0",
								"description": "The CIDR block for the VPC. Default value is a valid CIDR, but not acceptable by AWS and should be overridden",
							},
							"create_database_internet_gateway_route": {
								"default":     false,
								"description": "Controls if an internet gateway route for public database access should be created",
							},
							"create_database_nat_gateway_route": {
								"default":     false,
								"description": "Controls if a nat gateway route should be created to give internet access to the database subnets",
							},
							"create_database_subnet_group": {
								"default":     true,
								"description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)",
							},
							"create_database_subnet_route_table": {
								"default":     false,
								"description": "Controls if separate route table for database should be created",
							},
							"create_egress_only_igw": {
								"default":     true,
								"description": "Controls if an Egress Only Internet Gateway is created and its related routes.",
							},
							"create_elasticache_subnet_group": {
								"default":     true,
								"description": "Controls if elasticache subnet group should be created",
							},
							"create_elasticache_subnet_route_table": {
								"default":     false,
								"description": "Controls if separate route table for elasticache should be created",
							},
							"create_flow_log_cloudwatch_iam_role": {
								"default":     false,
								"description": "Whether to create IAM role for VPC Flow Logs",
							},
							"create_flow_log_cloudwatch_log_group": {
								"default":     false,
								"description": "Whether to create CloudWatch log group for VPC Flow Logs",
							},
							"create_igw": {
								"default":     true,
								"description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them.",
							},
							"create_redshift_subnet_group": {
								"default":     true,
								"description": "Controls if redshift subnet group should be created",
							},
							"create_redshift_subnet_route_table": {
								"default":     false,
								"description": "Controls if separate route table for redshift should be created",
							},
							"create_vpc": {
								"default":     true,
								"description": "Controls if VPC should be created (it affects almost all resources)",
							},
							"customer_gateway_tags": {
								"default":     {},
								"description": "Additional tags for the Customer Gateway",
							},
							"customer_gateways": {
								"default":     {},
								"description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)",
							},
							"database_acl_tags": {
								"default":     {},
								"description": "Additional tags for the database subnets network ACL",
							},
							"database_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets",
							},
							"database_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Database subnets inbound network ACL rules",
							},
							"database_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Database subnets outbound network ACL rules",
							},
							"database_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the database route tables",
							},
							"database_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on database subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"database_subnet_group_name": {
								"description": "Name of database subnet group",
							},
							"database_subnet_group_tags": {
								"default":     {},
								"description": "Additional tags for the database subnet group",
							},
							"database_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"database_subnet_suffix": {
								"default":     "db",
								"description": "Suffix to append to database subnets name",
							},
							"database_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the database subnets",
							},
							"database_subnets": {
								"default":     [],
								"description": "A list of database subnets",
							},
							"default_network_acl_egress": {
								"default": [
									{
										"action":     "allow",
										"cidr_block": "0.0.0.0/0",
										"from_port":  "0",
										"protocol":   "-1",
										"rule_no":    "100",
										"to_port":    "0",
									},
									{
										"action":          "allow",
										"from_port":       "0",
										"ipv6_cidr_block": "::/0",
										"protocol":        "-1",
										"rule_no":         "101",
										"to_port":         "0",
									},
								],
								"description": "List of maps of egress rules to set on the Default Network ACL",
							},
							"default_network_acl_ingress": {
								"default": [
									{
										"action":     "allow",
										"cidr_block": "0.0.0.0/0",
										"from_port":  "0",
										"protocol":   "-1",
										"rule_no":    "100",
										"to_port":    "0",
									},
									{
										"action":          "allow",
										"from_port":       "0",
										"ipv6_cidr_block": "::/0",
										"protocol":        "-1",
										"rule_no":         "101",
										"to_port":         "0",
									},
								],
								"description": "List of maps of ingress rules to set on the Default Network ACL",
							},
							"default_network_acl_name": {
								"default":     "",
								"description": "Name to be used on the Default Network ACL",
							},
							"default_network_acl_tags": {
								"default":     {},
								"description": "Additional tags for the Default Network ACL",
							},
							"default_route_table_propagating_vgws": {
								"default":     [],
								"description": "List of virtual gateways for propagation",
							},
							"default_route_table_routes": {
								"default":     [],
								"description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route",
							},
							"default_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the default route table",
							},
							"default_security_group_egress": {
								"description": "List of maps of egress rules to set on the default security group",
							},
							"default_security_group_ingress": {
								"description": "List of maps of ingress rules to set on the default security group",
							},
							"default_security_group_name": {
								"default":     "default",
								"description": "Name to be used on the default security group",
							},
							"default_security_group_tags": {
								"default":     {},
								"description": "Additional tags for the default security group",
							},
							"default_vpc_enable_classiclink": {
								"default":     false,
								"description": "Should be true to enable ClassicLink in the Default VPC",
							},
							"default_vpc_enable_dns_hostnames": {
								"default":     false,
								"description": "Should be true to enable DNS hostnames in the Default VPC",
							},
							"default_vpc_enable_dns_support": {
								"default":     true,
								"description": "Should be true to enable DNS support in the Default VPC",
							},
							"default_vpc_name": {
								"default":     "",
								"description": "Name to be used on the Default VPC",
							},
							"default_vpc_tags": {
								"default":     {},
								"description": "Additional tags for the Default VPC",
							},
							"dhcp_options_domain_name": {
								"default":     "",
								"description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_domain_name_servers": {
								"default": [
									"AmazonProvidedDNS",
								],
								"description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_netbios_name_servers": {
								"default":     [],
								"description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_netbios_node_type": {
								"default":     "",
								"description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_ntp_servers": {
								"default":     [],
								"description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_tags": {
								"default":     {},
								"description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)",
							},
							"elasticache_acl_tags": {
								"default":     {},
								"description": "Additional tags for the elasticache subnets network ACL",
							},
							"elasticache_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets",
							},
							"elasticache_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Elasticache subnets inbound network ACL rules",
							},
							"elasticache_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Elasticache subnets outbound network ACL rules",
							},
							"elasticache_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the elasticache route tables",
							},
							"elasticache_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on elasticache subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"elasticache_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"elasticache_subnet_suffix": {
								"default":     "elasticache",
								"description": "Suffix to append to elasticache subnets name",
							},
							"elasticache_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the elasticache subnets",
							},
							"elasticache_subnets": {
								"default":     [],
								"description": "A list of elasticache subnets",
							},
							"enable_classiclink": {
								"description": "Should be true to enable ClassicLink for the VPC. Only valid in regions and accounts that support EC2 Classic.",
							},
							"enable_classiclink_dns_support": {
								"description": "Should be true to enable ClassicLink DNS Support for the VPC. Only valid in regions and accounts that support EC2 Classic.",
							},
							"enable_dhcp_options": {
								"default":     false,
								"description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type",
							},
							"enable_dns_hostnames": {
								"default":     false,
								"description": "Should be true to enable DNS hostnames in the VPC",
							},
							"enable_dns_support": {
								"default":     true,
								"description": "Should be true to enable DNS support in the VPC",
							},
							"enable_flow_log": {
								"default":     false,
								"description": "Whether or not to enable VPC Flow Logs",
							},
							"enable_ipv6": {
								"default":     false,
								"description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block.",
							},
							"enable_nat_gateway": {
								"default":     false,
								"description": "Should be true if you want to provision NAT Gateways for each of your private networks",
							},
							"enable_public_redshift": {
								"default":     false,
								"description": "Controls if redshift should have public routing table",
							},
							"enable_vpn_gateway": {
								"default":     false,
								"description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC",
							},
							"external_nat_ip_ids": {
								"default":     [],
								"description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)",
							},
							"external_nat_ips": {
								"default":     [],
								"description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)",
							},
							"flow_log_cloudwatch_iam_role_arn": {
								"default":     "",
								"description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided.",
							},
							"flow_log_cloudwatch_log_group_kms_key_id": {
								"description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs.",
							},
							"flow_log_cloudwatch_log_group_name_prefix": {
								"default":     "/aws/vpc-flow-log/",
								"description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs.",
							},
							"flow_log_cloudwatch_log_group_retention_in_days": {
								"description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs.",
							},
							"flow_log_destination_arn": {
								"default":     "",
								"description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided.",
							},
							"flow_log_destination_type": {
								"default":     "cloud-watch-logs",
								"description": "Type of flow log destination. Can be s3 or cloud-watch-logs.",
							},
							"flow_log_log_format": {
								"description": "The fields to include in the flow log record, in the order in which they should appear.",
							},
							"flow_log_max_aggregation_interval": {
								"default":     600,
								"description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds.",
							},
							"flow_log_traffic_type": {
								"default":     "ALL",
								"description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL.",
							},
							"igw_tags": {
								"default":     {},
								"description": "Additional tags for the internet gateway",
							},
							"instance_tenancy": {
								"default":     "default",
								"description": "A tenancy option for instances launched into the VPC",
							},
							"intra_acl_tags": {
								"default":     {},
								"description": "Additional tags for the intra subnets network ACL",
							},
							"intra_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets",
							},
							"intra_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Intra subnets inbound network ACLs",
							},
							"intra_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Intra subnets outbound network ACLs",
							},
							"intra_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the intra route tables",
							},
							"intra_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on intra subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"intra_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"intra_subnet_suffix": {
								"default":     "intra",
								"description": "Suffix to append to intra subnets name",
							},
							"intra_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the intra subnets",
							},
							"intra_subnets": {
								"default":     [],
								"description": "A list of intra subnets",
							},
							"manage_default_network_acl": {
								"default":     false,
								"description": "Should be true to adopt and manage Default Network ACL",
							},
							"manage_default_route_table": {
								"default":     false,
								"description": "Should be true to manage default route table",
							},
							"manage_default_security_group": {
								"default":     false,
								"description": "Should be true to adopt and manage default security group",
							},
							"manage_default_vpc": {
								"default":     false,
								"description": "Should be true to adopt and manage Default VPC",
							},
							"map_public_ip_on_launch": {
								"default":     true,
								"description": "Should be false if you do not want to auto-assign public IP on launch",
							},
							"name": {
								"default":     "",
								"description": "Name to be used on all the resources as identifier",
							},
							"nat_eip_tags": {
								"default":     {},
								"description": "Additional tags for the NAT EIP",
							},
							"nat_gateway_tags": {
								"default":     {},
								"description": "Additional tags for the NAT gateways",
							},
							"one_nat_gateway_per_az": {
								"default":     false,
								"description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`.",
							},
							"outpost_acl_tags": {
								"default":     {},
								"description": "Additional tags for the outpost subnets network ACL",
							},
							"outpost_arn": {
								"description": "ARN of Outpost you want to create a subnet in.",
							},
							"outpost_az": {
								"description": "AZ where Outpost is anchored.",
							},
							"outpost_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets",
							},
							"outpost_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Outpost subnets inbound network ACLs",
							},
							"outpost_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Outpost subnets outbound network ACLs",
							},
							"outpost_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on outpost subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"outpost_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"outpost_subnet_suffix": {
								"default":     "outpost",
								"description": "Suffix to append to outpost subnets name",
							},
							"outpost_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the outpost subnets",
							},
							"outpost_subnets": {
								"default":     [],
								"description": "A list of outpost subnets inside the VPC",
							},
							"private_acl_tags": {
								"default":     {},
								"description": "Additional tags for the private subnets network ACL",
							},
							"private_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets",
							},
							"private_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Private subnets inbound network ACLs",
							},
							"private_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Private subnets outbound network ACLs",
							},
							"private_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the private route tables",
							},
							"private_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on private subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"private_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"private_subnet_suffix": {
								"default":     "private",
								"description": "Suffix to append to private subnets name",
							},
							"private_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the private subnets",
							},
							"private_subnets": {
								"default":     [],
								"description": "A list of private subnets inside the VPC",
							},
							"propagate_intra_route_tables_vgw": {
								"default":     false,
								"description": "Should be true if you want route table propagation",
							},
							"propagate_private_route_tables_vgw": {
								"default":     false,
								"description": "Should be true if you want route table propagation",
							},
							"propagate_public_route_tables_vgw": {
								"default":     false,
								"description": "Should be true if you want route table propagation",
							},
							"public_acl_tags": {
								"default":     {},
								"description": "Additional tags for the public subnets network ACL",
							},
							"public_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets",
							},
							"public_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Public subnets inbound network ACLs",
							},
							"public_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Public subnets outbound network ACLs",
							},
							"public_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the public route tables",
							},
							"public_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on public subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"public_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"public_subnet_suffix": {
								"default":     "public",
								"description": "Suffix to append to public subnets name",
							},
							"public_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the public subnets",
							},
							"public_subnets": {
								"default":     [],
								"description": "A list of public subnets inside the VPC",
							},
							"redshift_acl_tags": {
								"default":     {},
								"description": "Additional tags for the redshift subnets network ACL",
							},
							"redshift_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets",
							},
							"redshift_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Redshift subnets inbound network ACL rules",
							},
							"redshift_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Redshift subnets outbound network ACL rules",
							},
							"redshift_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the redshift route tables",
							},
							"redshift_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on redshift subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"redshift_subnet_group_tags": {
								"default":     {},
								"description": "Additional tags for the redshift subnet group",
							},
							"redshift_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"redshift_subnet_suffix": {
								"default":     "redshift",
								"description": "Suffix to append to redshift subnets name",
							},
							"redshift_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the redshift subnets",
							},
							"redshift_subnets": {
								"default":     [],
								"description": "A list of redshift subnets",
							},
							"reuse_nat_ips": {
								"default":     false,
								"description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable",
							},
							"secondary_cidr_blocks": {
								"default":     [],
								"description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool",
							},
							"single_nat_gateway": {
								"default":     false,
								"description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks",
							},
							"tags": {
								"default":     {},
								"description": "A map of tags to add to all resources",
							},
							"vpc_flow_log_permissions_boundary": {
								"description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role",
							},
							"vpc_flow_log_tags": {
								"default":     {},
								"description": "Additional tags for the VPC Flow Logs",
							},
							"vpc_tags": {
								"default":     {},
								"description": "Additional tags for the VPC",
							},
							"vpn_gateway_az": {
								"description": "The Availability Zone for the VPN Gateway",
							},
							"vpn_gateway_id": {
								"default":     "",
								"description": "ID of VPN Gateway to attach to the VPC",
							},
							"vpn_gateway_tags": {
								"default":     {},
								"description": "Additional tags for the VPN gateway",
							},
						},
					},
					"source":             "terraform-aws-modules/vpc/aws",
					"version_constraint": "3.2.0",
				},
			},
			"outputs": {
				"cluster_endpoint": {
					"description": "Endpoint for EKS control plane.",
					"expression": {
						"references": [
							"module.eks.cluster_endpoint",
							"module.eks",
						],
					},
				},
				"cluster_id": {
					"description": "EKS cluster ID.",
					"expression": {
						"references": [
							"module.eks.cluster_id",
							"module.eks",
						],
					},
				},
				"cluster_name": {
					"description": "Kubernetes Cluster Name",
					"expression": {
						"references": [
							"local.cluster_name",
						],
					},
				},
				"cluster_security_group_id": {
					"description": "Security group ids attached to the cluster control plane.",
					"expression": {
						"references": [
							"module.eks.cluster_security_group_id",
							"module.eks",
						],
					},
				},
				"config_map_aws_auth": {
					"description": "A kubernetes configuration to authenticate to this EKS cluster.",
					"expression": {
						"references": [
							"module.eks.config_map_aws_auth",
							"module.eks",
						],
					},
				},
				"kubectl_config": {
					"description": "kubectl config as generated by the module.",
					"expression": {
						"references": [
							"module.eks.kubeconfig",
							"module.eks",
						],
					},
				},
				"region": {
					"description": "AWS region",
					"expression": {
						"references": [
							"var.region",
						],
					},
				},
			},
			"resources": [
				{
					"address": "aws_security_group.all_worker_mgmt",
					"expressions": {
						"ingress": {
							"constant_value": [
								{
									"cidr_blocks": [
										"10.0.0.0/8",
										"172.16.0.0/12",
										"192.168.0.0/16",
									],
									"description":      null,
									"from_port":        22,
									"ipv6_cidr_blocks": null,
									"prefix_list_ids":  null,
									"protocol":         "tcp",
									"security_groups":  null,
									"self":             null,
									"to_port":          22,
								},
							],
						},
						"name_prefix": {
							"constant_value": "all_worker_management",
						},
						"vpc_id": {
							"references": [
								"module.vpc.vpc_id",
								"module.vpc",
							],
						},
					},
					"mode":                "managed",
					"name":                "all_worker_mgmt",
					"provider_config_key": "aws",
					"schema_version":      1,
					"type":                "aws_security_group",
				},
				{
					"address": "aws_security_group.worker_group_mgmt_one",
					"expressions": {
						"ingress": {
							"constant_value": [
								{
									"cidr_blocks": [
										"10.0.0.0/8",
									],
									"description":      null,
									"from_port":        22,
									"ipv6_cidr_blocks": null,
									"prefix_list_ids":  null,
									"protocol":         "tcp",
									"security_groups":  null,
									"self":             null,
									"to_port":          22,
								},
							],
						},
						"name_prefix": {
							"constant_value": "worker_group_mgmt_one",
						},
						"vpc_id": {
							"references": [
								"module.vpc.vpc_id",
								"module.vpc",
							],
						},
					},
					"mode":                "managed",
					"name":                "worker_group_mgmt_one",
					"provider_config_key": "aws",
					"schema_version":      1,
					"type":                "aws_security_group",
				},
				{
					"address": "aws_security_group.worker_group_mgmt_two",
					"expressions": {
						"ingress": {
							"constant_value": [
								{
									"cidr_blocks": [
										"192.168.0.0/16",
									],
									"description":      null,
									"from_port":        22,
									"ipv6_cidr_blocks": null,
									"prefix_list_ids":  null,
									"protocol":         "tcp",
									"security_groups":  null,
									"self":             null,
									"to_port":          22,
								},
							],
						},
						"name_prefix": {
							"constant_value": "worker_group_mgmt_two",
						},
						"vpc_id": {
							"references": [
								"module.vpc.vpc_id",
								"module.vpc",
							],
						},
					},
					"mode":                "managed",
					"name":                "worker_group_mgmt_two",
					"provider_config_key": "aws",
					"schema_version":      1,
					"type":                "aws_security_group",
				},
				{
					"address": "random_string.suffix",
					"expressions": {
						"length": {
							"constant_value": 8,
						},
						"special": {
							"constant_value": false,
						},
					},
					"mode":                "managed",
					"name":                "suffix",
					"provider_config_key": "random",
					"schema_version":      1,
					"type":                "random_string",
				},
				{
					"address":             "data.aws_availability_zones.available",
					"mode":                "data",
					"name":                "available",
					"provider_config_key": "aws",
					"schema_version":      0,
					"type":                "aws_availability_zones",
				},
				{
					"address": "data.aws_eks_cluster.cluster",
					"expressions": {
						"name": {
							"references": [
								"module.eks.cluster_id",
								"module.eks",
							],
						},
					},
					"mode":                "data",
					"name":                "cluster",
					"provider_config_key": "aws",
					"schema_version":      0,
					"type":                "aws_eks_cluster",
				},
				{
					"address": "data.aws_eks_cluster_auth.cluster",
					"expressions": {
						"name": {
							"references": [
								"module.eks.cluster_id",
								"module.eks",
							],
						},
					},
					"mode":                "data",
					"name":                "cluster",
					"provider_config_key": "aws",
					"schema_version":      0,
					"type":                "aws_eks_cluster_auth",
				},
			],
			"variables": {
				"region": {
					"default":     "us-east-2",
					"description": "AWS region",
				},
			},
		},
	},
	"format_version": "1.0",
	"output_changes": {
		"cluster_endpoint": {
			"actions": [
				"create",
			],
			"after_sensitive":  false,
			"after_unknown":    true,
			"before":           null,
			"before_sensitive": false,
		},
		"cluster_id": {
			"actions": [
				"create",
			],
			"after_sensitive":  false,
			"after_unknown":    true,
			"before":           null,
			"before_sensitive": false,
		},
		"cluster_name": {
			"actions": [
				"create",
			],
			"after_sensitive":  false,
			"after_unknown":    true,
			"before":           null,
			"before_sensitive": false,
		},
		"cluster_security_group_id": {
			"actions": [
				"create",
			],
			"after_sensitive":  false,
			"after_unknown":    true,
			"before":           null,
			"before_sensitive": false,
		},
		"config_map_aws_auth": {
			"actions": [
				"create",
			],
			"after_sensitive":  false,
			"after_unknown":    true,
			"before":           null,
			"before_sensitive": false,
		},
		"kubectl_config": {
			"actions": [
				"create",
			],
			"after_sensitive":  false,
			"after_unknown":    true,
			"before":           null,
			"before_sensitive": false,
		},
		"region": {
			"actions": [
				"create",
			],
			"after":            "us-east-2",
			"after_sensitive":  false,
			"after_unknown":    false,
			"before":           null,
			"before_sensitive": false,
		},
	},
	"planned_values": {
		"outputs": {
			"cluster_endpoint": {
				"sensitive": false,
			},
			"cluster_id": {
				"sensitive": false,
			},
			"cluster_name": {
				"sensitive": false,
			},
			"cluster_security_group_id": {
				"sensitive": false,
			},
			"config_map_aws_auth": {
				"sensitive": false,
			},
			"kubectl_config": {
				"sensitive": false,
			},
			"region": {
				"sensitive": false,
				"value":     "us-east-2",
			},
		},
		"root_module": {
			"child_modules": [
				{
					"address": "module.eks",
					"resources": [
						{
							"address":        "module.eks.aws_autoscaling_group.workers[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "workers",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"availability_zones":     [],
								"initial_lifecycle_hook": [],
								"instance_refresh":       [],
								"launch_template":        [],
								"mixed_instances_policy": [],
								"suspended_processes": [
									false,
								],
								"tag": [
									{},
									{},
									{},
								],
								"termination_policies": [],
								"vpc_zone_identifier":  [],
								"warm_pool":            [],
							},
							"type": "aws_autoscaling_group",
							"values": {
								"capacity_rebalance":        false,
								"desired_capacity":          2,
								"enabled_metrics":           null,
								"force_delete":              false,
								"force_delete_warm_pool":    false,
								"health_check_grace_period": 300,
								"initial_lifecycle_hook":    [],
								"instance_refresh":          [],
								"launch_template":           [],
								"load_balancers":            null,
								"max_instance_lifetime":     0,
								"max_size":                  3,
								"metrics_granularity":       "1Minute",
								"min_elb_capacity":          null,
								"min_size":                  1,
								"mixed_instances_policy":    [],
								"placement_group":           null,
								"protect_from_scale_in":     false,
								"suspended_processes": [
									"AZRebalance",
								],
								"tag": [
									{
										"key": "Name",
										"propagate_at_launch": true,
									},
									{
										"propagate_at_launch": true,
										"value":               "owned",
									},
									{
										"propagate_at_launch": true,
										"value":               "owned",
									},
								],
								"tags":                      null,
								"target_group_arns":         null,
								"termination_policies":      [],
								"timeouts":                  null,
								"wait_for_capacity_timeout": "10m",
								"wait_for_elb_capacity":     null,
								"warm_pool":                 [],
							},
						},
						{
							"address":        "module.eks.aws_autoscaling_group.workers[1]",
							"index":          1,
							"mode":           "managed",
							"name":           "workers",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"availability_zones":     [],
								"initial_lifecycle_hook": [],
								"instance_refresh":       [],
								"launch_template":        [],
								"mixed_instances_policy": [],
								"suspended_processes": [
									false,
								],
								"tag": [
									{},
									{},
									{},
								],
								"termination_policies": [],
								"vpc_zone_identifier":  [],
								"warm_pool":            [],
							},
							"type": "aws_autoscaling_group",
							"values": {
								"capacity_rebalance":        false,
								"desired_capacity":          1,
								"enabled_metrics":           null,
								"force_delete":              false,
								"force_delete_warm_pool":    false,
								"health_check_grace_period": 300,
								"initial_lifecycle_hook":    [],
								"instance_refresh":          [],
								"launch_template":           [],
								"load_balancers":            null,
								"max_instance_lifetime":     0,
								"max_size":                  3,
								"metrics_granularity":       "1Minute",
								"min_elb_capacity":          null,
								"min_size":                  1,
								"mixed_instances_policy":    [],
								"placement_group":           null,
								"protect_from_scale_in":     false,
								"suspended_processes": [
									"AZRebalance",
								],
								"tag": [
									{
										"key": "Name",
										"propagate_at_launch": true,
									},
									{
										"propagate_at_launch": true,
										"value":               "owned",
									},
									{
										"propagate_at_launch": true,
										"value":               "owned",
									},
								],
								"tags":                      null,
								"target_group_arns":         null,
								"termination_policies":      [],
								"timeouts":                  null,
								"wait_for_capacity_timeout": "10m",
								"wait_for_elb_capacity":     null,
								"warm_pool":                 [],
							},
						},
						{
							"address":        "module.eks.aws_eks_cluster.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"certificate_authority": [],
								"encryption_config":     [],
								"identity":              [],
								"kubernetes_network_config": [
									{},
								],
								"tags_all": {},
								"timeouts": {},
								"vpc_config": [
									{
										"public_access_cidrs": [
											false,
										],
										"security_group_ids": [],
										"subnet_ids":         [],
									},
								],
							},
							"type": "aws_eks_cluster",
							"values": {
								"enabled_cluster_log_types": null,
								"encryption_config":         [],
								"kubernetes_network_config": [
									{},
								],
								"tags": null,
								"timeouts": {
									"create": "30m",
									"delete": "15m",
									"update": "60m",
								},
								"version": "1.20",
								"vpc_config": [
									{
										"endpoint_private_access": false,
										"endpoint_public_access":  true,
										"public_access_cidrs": [
											"0.0.0.0/0",
										],
									},
								],
							},
						},
						{
							"address":        "module.eks.aws_iam_instance_profile.workers[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "workers",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"tags_all": {},
							},
							"type": "aws_iam_instance_profile",
							"values": {
								"path": "/",
								"tags": null,
							},
						},
						{
							"address":        "module.eks.aws_iam_instance_profile.workers[1]",
							"index":          1,
							"mode":           "managed",
							"name":           "workers",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"tags_all": {},
							},
							"type": "aws_iam_instance_profile",
							"values": {
								"path": "/",
								"tags": null,
							},
						},
						{
							"address":        "module.eks.aws_iam_policy.cluster_deny_log_group[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "cluster_deny_log_group",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"tags_all": {},
							},
							"type": "aws_iam_policy",
							"values": {
								"description": "Deny CreateLogGroup",
								"path":        "/",
								"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"logs:CreateLogGroup\",\n      \"Resource\": \"*\"\n    }\n  ]\n}",
								"tags":        null,
							},
						},
						{
							"address":        "module.eks.aws_iam_policy.cluster_elb_sl_role_creation[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "cluster_elb_sl_role_creation",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"tags_all": {},
							},
							"type": "aws_iam_policy",
							"values": {
								"description": "Permissions for EKS to create AWSServiceRoleForElasticLoadBalancing service-linked role",
								"path":        "/",
								"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
								"tags":        null,
							},
						},
						{
							"address":        "module.eks.aws_iam_role.cluster[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "cluster",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"inline_policy":       [],
								"managed_policy_arns": [],
								"tags_all":            {},
							},
							"type": "aws_iam_role",
							"values": {
								"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
								"description":           null,
								"force_detach_policies": true,
								"max_session_duration":  3600,
								"path":                  "/",
								"permissions_boundary":  null,
								"tags":                  null,
							},
						},
						{
							"address":        "module.eks.aws_iam_role.workers[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "workers",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"inline_policy":       [],
								"managed_policy_arns": [],
								"tags_all":            {},
							},
							"type": "aws_iam_role",
							"values": {
								"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
								"description":           null,
								"force_detach_policies": true,
								"max_session_duration":  3600,
								"path":                  "/",
								"permissions_boundary":  null,
								"tags":                  null,
							},
						},
						{
							"address":          "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "cluster_AmazonEKSClusterPolicy",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_iam_role_policy_attachment",
							"values": {
								"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
							},
						},
						{
							"address":          "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "cluster_AmazonEKSServicePolicy",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_iam_role_policy_attachment",
							"values": {
								"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
							},
						},
						{
							"address":          "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "cluster_AmazonEKSVPCResourceControllerPolicy",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_iam_role_policy_attachment",
							"values": {
								"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
							},
						},
						{
							"address":          "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "cluster_deny_log_group",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_iam_role_policy_attachment",
						},
						{
							"address":          "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "cluster_elb_sl_role_creation",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_iam_role_policy_attachment",
						},
						{
							"address":          "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "workers_AmazonEC2ContainerRegistryReadOnly",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_iam_role_policy_attachment",
							"values": {
								"policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
							},
						},
						{
							"address":          "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "workers_AmazonEKSWorkerNodePolicy",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_iam_role_policy_attachment",
							"values": {
								"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
							},
						},
						{
							"address":          "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "workers_AmazonEKS_CNI_Policy",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_iam_role_policy_attachment",
							"values": {
								"policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
							},
						},
						{
							"address":        "module.eks.aws_launch_configuration.workers[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "workers",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"ebs_block_device":       [],
								"ephemeral_block_device": [],
								"metadata_options": [
									{},
								],
								"root_block_device": [
									{},
								],
								"security_groups": [],
							},
							"type": "aws_launch_configuration",
							"values": {
								"associate_public_ip_address": false,
								"ebs_optimized":               false,
								"enable_monitoring":           true,
								"ephemeral_block_device":      [],
								"image_id":                    "ami-04821cb666bb14bc3",
								"instance_type":               "t2.small",
								"metadata_options": [
									{
										"http_endpoint": "enabled",
										"http_tokens":   "optional",
									},
								],
								"placement_tenancy": "",
								"root_block_device": [
									{
										"delete_on_termination": true,
										"encrypted":             false,
										"iops":                  0,
										"volume_size":           100,
										"volume_type":           "gp2",
									},
								],
								"spot_price":                       "",
								"user_data":                        null,
								"vpc_classic_link_id":              null,
								"vpc_classic_link_security_groups": null,
							},
						},
						{
							"address":        "module.eks.aws_launch_configuration.workers[1]",
							"index":          1,
							"mode":           "managed",
							"name":           "workers",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"ebs_block_device":       [],
								"ephemeral_block_device": [],
								"metadata_options": [
									{},
								],
								"root_block_device": [
									{},
								],
								"security_groups": [],
							},
							"type": "aws_launch_configuration",
							"values": {
								"associate_public_ip_address": false,
								"ebs_optimized":               false,
								"enable_monitoring":           true,
								"ephemeral_block_device":      [],
								"image_id":                    "ami-04821cb666bb14bc3",
								"instance_type":               "t2.medium",
								"metadata_options": [
									{
										"http_endpoint": "enabled",
										"http_tokens":   "optional",
									},
								],
								"placement_tenancy": "",
								"root_block_device": [
									{
										"delete_on_termination": true,
										"encrypted":             false,
										"iops":                  0,
										"volume_size":           100,
										"volume_type":           "gp2",
									},
								],
								"spot_price":                       "",
								"user_data":                        null,
								"vpc_classic_link_id":              null,
								"vpc_classic_link_security_groups": null,
							},
						},
						{
							"address":        "module.eks.aws_security_group.cluster[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "cluster",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"egress":   [],
								"ingress":  [],
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_security_group",
							"values": {
								"description":            "EKS cluster security group.",
								"revoke_rules_on_delete": false,
								"timeouts":               null,
							},
						},
						{
							"address":        "module.eks.aws_security_group.workers[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "workers",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"egress":   [],
								"ingress":  [],
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_security_group",
							"values": {
								"description":            "Security group for all nodes in the cluster.",
								"revoke_rules_on_delete": false,
								"timeouts":               null,
							},
						},
						{
							"address":        "module.eks.aws_security_group_rule.cluster_egress_internet[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "cluster_egress_internet",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 2,
							"sensitive_values": {
								"cidr_blocks": [
									false,
								],
							},
							"type": "aws_security_group_rule",
							"values": {
								"cidr_blocks": [
									"0.0.0.0/0",
								],
								"description":      "Allow cluster egress access to the Internet.",
								"from_port":        0,
								"ipv6_cidr_blocks": null,
								"prefix_list_ids":  null,
								"protocol":         "-1",
								"self":             false,
								"to_port":          0,
								"type":             "egress",
							},
						},
						{
							"address":          "module.eks.aws_security_group_rule.cluster_https_worker_ingress[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "cluster_https_worker_ingress",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   2,
							"sensitive_values": {},
							"type":             "aws_security_group_rule",
							"values": {
								"cidr_blocks":      null,
								"description":      "Allow pods to communicate with the EKS cluster API.",
								"from_port":        443,
								"ipv6_cidr_blocks": null,
								"prefix_list_ids":  null,
								"protocol":         "tcp",
								"self":             false,
								"to_port":          443,
								"type":             "ingress",
							},
						},
						{
							"address":        "module.eks.aws_security_group_rule.workers_egress_internet[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "workers_egress_internet",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 2,
							"sensitive_values": {
								"cidr_blocks": [
									false,
								],
							},
							"type": "aws_security_group_rule",
							"values": {
								"cidr_blocks": [
									"0.0.0.0/0",
								],
								"description":      "Allow nodes all egress to the Internet.",
								"from_port":        0,
								"ipv6_cidr_blocks": null,
								"prefix_list_ids":  null,
								"protocol":         "-1",
								"self":             false,
								"to_port":          0,
								"type":             "egress",
							},
						},
						{
							"address":          "module.eks.aws_security_group_rule.workers_ingress_cluster[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "workers_ingress_cluster",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   2,
							"sensitive_values": {},
							"type":             "aws_security_group_rule",
							"values": {
								"cidr_blocks":      null,
								"description":      "Allow workers pods to receive communication from the cluster control plane.",
								"from_port":        1025,
								"ipv6_cidr_blocks": null,
								"prefix_list_ids":  null,
								"protocol":         "tcp",
								"self":             false,
								"to_port":          65535,
								"type":             "ingress",
							},
						},
						{
							"address":          "module.eks.aws_security_group_rule.workers_ingress_cluster_https[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "workers_ingress_cluster_https",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   2,
							"sensitive_values": {},
							"type":             "aws_security_group_rule",
							"values": {
								"cidr_blocks":      null,
								"description":      "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
								"from_port":        443,
								"ipv6_cidr_blocks": null,
								"prefix_list_ids":  null,
								"protocol":         "tcp",
								"self":             false,
								"to_port":          443,
								"type":             "ingress",
							},
						},
						{
							"address":          "module.eks.aws_security_group_rule.workers_ingress_self[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "workers_ingress_self",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   2,
							"sensitive_values": {},
							"type":             "aws_security_group_rule",
							"values": {
								"cidr_blocks":      null,
								"description":      "Allow node to communicate with each other.",
								"from_port":        0,
								"ipv6_cidr_blocks": null,
								"prefix_list_ids":  null,
								"protocol":         "-1",
								"self":             false,
								"to_port":          65535,
								"type":             "ingress",
							},
						},
						{
							"address":        "module.eks.data.http.wait_for_cluster[0]",
							"index":          0,
							"mode":           "data",
							"name":           "wait_for_cluster",
							"provider_name":  "registry.terraform.io/terraform-aws-modules/http",
							"schema_version": 0,
							"sensitive_values": {
								"response_headers": {},
							},
							"type": "http",
							"values": {
								"insecure":        null,
								"request_headers": null,
								"timeout":         300,
							},
						},
						{
							"address":        "module.eks.kubernetes_config_map.aws_auth[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "aws_auth",
							"provider_name":  "registry.terraform.io/hashicorp/kubernetes",
							"schema_version": 0,
							"sensitive_values": {
								"data": {},
								"metadata": [
									{
										"labels": {},
									},
								],
							},
							"type": "kubernetes_config_map",
							"values": {
								"binary_data": null,
								"metadata": [
									{
										"annotations":   null,
										"generate_name": null,
										"labels": {
											"app.kubernetes.io/managed-by": "Terraform",
											"terraform.io/module":          "terraform-aws-modules.eks.aws",
										},
										"name":      "aws-auth",
										"namespace": "kube-system",
									},
								],
							},
						},
						{
							"address":          "module.eks.local_file.kubeconfig[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "kubeconfig",
							"provider_name":    "registry.terraform.io/hashicorp/local",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "local_file",
							"values": {
								"content_base64":       null,
								"directory_permission": "0755",
								"file_permission":      "0600",
								"sensitive_content":    "REDACTED_SENSITIVE",
								"source":               null,
							},
						},
					],
				},
				{
					"address": "module.vpc",
					"resources": [
						{
							"address":        "module.vpc.aws_eip.nat[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "nat",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_eip",
							"values": {
								"address":                   null,
								"associate_with_private_ip": null,
								"customer_owned_ipv4_pool":  null,
								"timeouts":                  null,
								"vpc":                       true,
							},
						},
						{
							"address":        "module.vpc.aws_internet_gateway.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_internet_gateway",
						},
						{
							"address":        "module.vpc.aws_nat_gateway.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_nat_gateway",
							"values": {
								"connectivity_type": "public",
							},
						},
						{
							"address":        "module.vpc.aws_route.private_nat_gateway[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "private_nat_gateway",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"timeouts": {},
							},
							"type": "aws_route",
							"values": {
								"carrier_gateway_id":          null,
								"destination_cidr_block":      "0.0.0.0/0",
								"destination_ipv6_cidr_block": null,
								"destination_prefix_list_id":  null,
								"egress_only_gateway_id":      null,
								"gateway_id":                  null,
								"local_gateway_id":            null,
								"timeouts": {
									"create": "5m",
									"delete": null,
									"update": null,
								},
								"transit_gateway_id":        null,
								"vpc_endpoint_id":           null,
								"vpc_peering_connection_id": null,
							},
						},
						{
							"address":        "module.vpc.aws_route.public_internet_gateway[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "public_internet_gateway",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"timeouts": {},
							},
							"type": "aws_route",
							"values": {
								"carrier_gateway_id":          null,
								"destination_cidr_block":      "0.0.0.0/0",
								"destination_ipv6_cidr_block": null,
								"destination_prefix_list_id":  null,
								"egress_only_gateway_id":      null,
								"local_gateway_id":            null,
								"nat_gateway_id":              null,
								"timeouts": {
									"create": "5m",
									"delete": null,
									"update": null,
								},
								"transit_gateway_id":        null,
								"vpc_endpoint_id":           null,
								"vpc_peering_connection_id": null,
							},
						},
						{
							"address":        "module.vpc.aws_route_table.private[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "private",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"propagating_vgws": [],
								"route":            [],
								"tags":             {},
								"tags_all":         {},
							},
							"type": "aws_route_table",
							"values": {
								"timeouts": null,
							},
						},
						{
							"address":        "module.vpc.aws_route_table.public[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "public",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"propagating_vgws": [],
								"route":            [],
								"tags":             {},
								"tags_all":         {},
							},
							"type": "aws_route_table",
							"values": {
								"timeouts": null,
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.private[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "private",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id": null,
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.private[1]",
							"index":            1,
							"mode":             "managed",
							"name":             "private",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id": null,
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.private[2]",
							"index":            2,
							"mode":             "managed",
							"name":             "private",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id": null,
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.public[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "public",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id": null,
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.public[1]",
							"index":            1,
							"mode":             "managed",
							"name":             "public",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id": null,
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.public[2]",
							"index":            2,
							"mode":             "managed",
							"name":             "public",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id": null,
							},
						},
						{
							"address":        "module.vpc.aws_subnet.private[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "private",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_subnet",
							"values": {
								"assign_ipv6_address_on_creation":                false,
								"availability_zone":                              "us-east-2a",
								"cidr_block":                                     "10.0.1.0/24",
								"customer_owned_ipv4_pool":                       null,
								"enable_dns64":                                   false,
								"enable_resource_name_dns_a_record_on_launch":    false,
								"enable_resource_name_dns_aaaa_record_on_launch": false,
								"ipv6_cidr_block":                                null,
								"ipv6_native":                                    false,
								"map_customer_owned_ip_on_launch":                null,
								"map_public_ip_on_launch":                        false,
								"outpost_arn":                                    null,
								"timeouts":                                       null,
							},
						},
						{
							"address":        "module.vpc.aws_subnet.private[1]",
							"index":          1,
							"mode":           "managed",
							"name":           "private",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_subnet",
							"values": {
								"assign_ipv6_address_on_creation":                false,
								"availability_zone":                              "us-east-2b",
								"cidr_block":                                     "10.0.2.0/24",
								"customer_owned_ipv4_pool":                       null,
								"enable_dns64":                                   false,
								"enable_resource_name_dns_a_record_on_launch":    false,
								"enable_resource_name_dns_aaaa_record_on_launch": false,
								"ipv6_cidr_block":                                null,
								"ipv6_native":                                    false,
								"map_customer_owned_ip_on_launch":                null,
								"map_public_ip_on_launch":                        false,
								"outpost_arn":                                    null,
								"timeouts":                                       null,
							},
						},
						{
							"address":        "module.vpc.aws_subnet.private[2]",
							"index":          2,
							"mode":           "managed",
							"name":           "private",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_subnet",
							"values": {
								"assign_ipv6_address_on_creation":                false,
								"availability_zone":                              "us-east-2c",
								"cidr_block":                                     "10.0.3.0/24",
								"customer_owned_ipv4_pool":                       null,
								"enable_dns64":                                   false,
								"enable_resource_name_dns_a_record_on_launch":    false,
								"enable_resource_name_dns_aaaa_record_on_launch": false,
								"ipv6_cidr_block":                                null,
								"ipv6_native":                                    false,
								"map_customer_owned_ip_on_launch":                null,
								"map_public_ip_on_launch":                        false,
								"outpost_arn":                                    null,
								"timeouts":                                       null,
							},
						},
						{
							"address":        "module.vpc.aws_subnet.public[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "public",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_subnet",
							"values": {
								"assign_ipv6_address_on_creation":                false,
								"availability_zone":                              "us-east-2a",
								"cidr_block":                                     "10.0.4.0/24",
								"customer_owned_ipv4_pool":                       null,
								"enable_dns64":                                   false,
								"enable_resource_name_dns_a_record_on_launch":    false,
								"enable_resource_name_dns_aaaa_record_on_launch": false,
								"ipv6_cidr_block":                                null,
								"ipv6_native":                                    false,
								"map_customer_owned_ip_on_launch":                null,
								"map_public_ip_on_launch":                        true,
								"outpost_arn":                                    null,
								"timeouts":                                       null,
							},
						},
						{
							"address":        "module.vpc.aws_subnet.public[1]",
							"index":          1,
							"mode":           "managed",
							"name":           "public",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_subnet",
							"values": {
								"assign_ipv6_address_on_creation":                false,
								"availability_zone":                              "us-east-2b",
								"cidr_block":                                     "10.0.5.0/24",
								"customer_owned_ipv4_pool":                       null,
								"enable_dns64":                                   false,
								"enable_resource_name_dns_a_record_on_launch":    false,
								"enable_resource_name_dns_aaaa_record_on_launch": false,
								"ipv6_cidr_block":                                null,
								"ipv6_native":                                    false,
								"map_customer_owned_ip_on_launch":                null,
								"map_public_ip_on_launch":                        true,
								"outpost_arn":                                    null,
								"timeouts":                                       null,
							},
						},
						{
							"address":        "module.vpc.aws_subnet.public[2]",
							"index":          2,
							"mode":           "managed",
							"name":           "public",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_subnet",
							"values": {
								"assign_ipv6_address_on_creation":                false,
								"availability_zone":                              "us-east-2c",
								"cidr_block":                                     "10.0.6.0/24",
								"customer_owned_ipv4_pool":                       null,
								"enable_dns64":                                   false,
								"enable_resource_name_dns_a_record_on_launch":    false,
								"enable_resource_name_dns_aaaa_record_on_launch": false,
								"ipv6_cidr_block":                                null,
								"ipv6_native":                                    false,
								"map_customer_owned_ip_on_launch":                null,
								"map_public_ip_on_launch":                        true,
								"outpost_arn":                                    null,
								"timeouts":                                       null,
							},
						},
						{
							"address":        "module.vpc.aws_vpc.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_vpc",
							"values": {
								"assign_generated_ipv6_cidr_block": false,
								"cidr_block":                       "10.0.0.0/16",
								"enable_dns_hostnames":             true,
								"enable_dns_support":               true,
								"instance_tenancy":                 "default",
								"ipv4_ipam_pool_id":                null,
								"ipv4_netmask_length":              null,
								"ipv6_ipam_pool_id":                null,
								"ipv6_netmask_length":              null,
							},
						},
					],
				},
			],
			"resources": [
				{
					"address":        "aws_security_group.all_worker_mgmt",
					"mode":           "managed",
					"name":           "all_worker_mgmt",
					"provider_name":  "registry.terraform.io/hashicorp/aws",
					"schema_version": 1,
					"sensitive_values": {
						"egress": [],
						"ingress": [
							{
								"cidr_blocks": [
									false,
									false,
									false,
								],
								"ipv6_cidr_blocks": [],
								"prefix_list_ids":  [],
								"security_groups":  [],
							},
						],
						"tags_all": {},
					},
					"type": "aws_security_group",
					"values": {
						"description": "Managed by Terraform",
						"ingress": [
							{
								"cidr_blocks": [
									"10.0.0.0/8",
									"172.16.0.0/12",
									"192.168.0.0/16",
								],
								"description":      "",
								"from_port":        22,
								"ipv6_cidr_blocks": [],
								"prefix_list_ids":  [],
								"protocol":         "tcp",
								"security_groups":  [],
								"self":             false,
								"to_port":          22,
							},
						],
						"name_prefix":            "all_worker_management",
						"revoke_rules_on_delete": false,
						"tags":     null,
						"timeouts": null,
					},
				},
				{
					"address":        "aws_security_group.worker_group_mgmt_one",
					"mode":           "managed",
					"name":           "worker_group_mgmt_one",
					"provider_name":  "registry.terraform.io/hashicorp/aws",
					"schema_version": 1,
					"sensitive_values": {
						"egress": [],
						"ingress": [
							{
								"cidr_blocks": [
									false,
								],
								"ipv6_cidr_blocks": [],
								"prefix_list_ids":  [],
								"security_groups":  [],
							},
						],
						"tags_all": {},
					},
					"type": "aws_security_group",
					"values": {
						"description": "Managed by Terraform",
						"ingress": [
							{
								"cidr_blocks": [
									"10.0.0.0/8",
								],
								"description":      "",
								"from_port":        22,
								"ipv6_cidr_blocks": [],
								"prefix_list_ids":  [],
								"protocol":         "tcp",
								"security_groups":  [],
								"self":             false,
								"to_port":          22,
							},
						],
						"name_prefix":            "worker_group_mgmt_one",
						"revoke_rules_on_delete": false,
						"tags":     null,
						"timeouts": null,
					},
				},
				{
					"address":        "aws_security_group.worker_group_mgmt_two",
					"mode":           "managed",
					"name":           "worker_group_mgmt_two",
					"provider_name":  "registry.terraform.io/hashicorp/aws",
					"schema_version": 1,
					"sensitive_values": {
						"egress": [],
						"ingress": [
							{
								"cidr_blocks": [
									false,
								],
								"ipv6_cidr_blocks": [],
								"prefix_list_ids":  [],
								"security_groups":  [],
							},
						],
						"tags_all": {},
					},
					"type": "aws_security_group",
					"values": {
						"description": "Managed by Terraform",
						"ingress": [
							{
								"cidr_blocks": [
									"192.168.0.0/16",
								],
								"description":      "",
								"from_port":        22,
								"ipv6_cidr_blocks": [],
								"prefix_list_ids":  [],
								"protocol":         "tcp",
								"security_groups":  [],
								"self":             false,
								"to_port":          22,
							},
						],
						"name_prefix":            "worker_group_mgmt_two",
						"revoke_rules_on_delete": false,
						"tags":     null,
						"timeouts": null,
					},
				},
				{
					"address":        "data.aws_eks_cluster.cluster",
					"mode":           "data",
					"name":           "cluster",
					"provider_name":  "registry.terraform.io/hashicorp/aws",
					"schema_version": 0,
					"sensitive_values": {
						"certificate_authority":     [],
						"enabled_cluster_log_types": [],
						"identity":                  [],
						"kubernetes_network_config": [],
						"tags":       {},
						"vpc_config": [],
					},
					"type": "aws_eks_cluster",
				},
				{
					"address":          "data.aws_eks_cluster_auth.cluster",
					"mode":             "data",
					"name":             "cluster",
					"provider_name":    "registry.terraform.io/hashicorp/aws",
					"schema_version":   0,
					"sensitive_values": {},
					"type":             "aws_eks_cluster_auth",
				},
				{
					"address":          "random_string.suffix",
					"mode":             "managed",
					"name":             "suffix",
					"provider_name":    "registry.terraform.io/hashicorp/random",
					"schema_version":   1,
					"sensitive_values": {},
					"type":             "random_string",
					"values": {
						"keepers":          null,
						"length":           8,
						"lower":            true,
						"min_lower":        0,
						"min_numeric":      0,
						"min_special":      0,
						"min_upper":        0,
						"number":           true,
						"override_special": null,
						"special":          false,
						"upper":            true,
					},
				},
			],
		},
	},
	"prior_state": {
		"format_version":    "1.0",
		"terraform_version": "1.1.3",
		"values": {
			"outputs": {
				"region": {
					"sensitive": false,
					"value":     "us-east-2",
				},
			},
			"root_module": {
				"child_modules": [
					{
						"address": "module.eks",
						"child_modules": [
							{
								"address": "module.eks.module.fargate",
								"resources": [
									{
										"address":          "module.eks.module.fargate.data.aws_partition.current",
										"mode":             "data",
										"name":             "current",
										"provider_name":    "registry.terraform.io/hashicorp/aws",
										"schema_version":   0,
										"sensitive_values": {},
										"type":             "aws_partition",
										"values": {
											"dns_suffix":         "amazonaws.com",
											"id":                 "aws",
											"partition":          "aws",
											"reverse_dns_prefix": "com.amazonaws",
										},
									},
								],
							},
						],
						"resources": [
							{
								"address":        "module.eks.data.aws_ami.eks_worker[0]",
								"index":          0,
								"mode":           "data",
								"name":           "eks_worker",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"block_device_mappings": [
										{
											"ebs": {},
										},
									],
									"filter": [
										{
											"values": [
												false,
											],
										},
									],
									"owners": [
										false,
									],
									"product_codes": [],
									"state_reason":  {},
									"tags":          {},
								},
								"type": "aws_ami",
								"values": {
									"architecture": "x86_64",
									"arn":          "arn:aws:ec2:us-east-2::image/ami-04821cb666bb14bc3",
									"block_device_mappings": [
										{
											"device_name": "/dev/xvda",
											"ebs": {
												"delete_on_termination": "true",
												"encrypted":             "false",
												"iops":                  "0",
												"snapshot_id":           "snap-0eafefc704717e317",
												"throughput":            "0",
												"volume_size":           "20",
												"volume_type":           "gp2",
											},
											"no_device":    "",
											"virtual_name": "",
										},
									],
									"creation_date":    "2022-01-12T03:07:27.000Z",
									"description":      "EKS Kubernetes Worker AMI with AmazonLinux2 image, (k8s: 1.20.11, docker: 20.10.7-5.amzn2, containerd: 1.4.6-7.amzn2)",
									"ena_support":      true,
									"executable_users": null,
									"filter": [
										{
											"name": "name",
											"values": [
												"amazon-eks-node-1.20-v*",
											],
										},
									],
									"hypervisor":        "xen",
									"id":                "ami-04821cb666bb14bc3",
									"image_id":          "ami-04821cb666bb14bc3",
									"image_location":    "amazon/amazon-eks-node-1.20-v20220112",
									"image_owner_alias": "amazon",
									"image_type":        "machine",
									"kernel_id":         null,
									"most_recent":       true,
									"name":              "amazon-eks-node-1.20-v20220112",
									"name_regex":        null,
									"owner_id":          "602401143452",
									"owners": [
										"amazon",
									],
									"platform":          null,
									"platform_details":  "Linux/UNIX",
									"product_codes":     [],
									"public":            true,
									"ramdisk_id":        null,
									"root_device_name":  "/dev/xvda",
									"root_device_type":  "ebs",
									"root_snapshot_id":  "snap-0eafefc704717e317",
									"sriov_net_support": "simple",
									"state":             "available",
									"state_reason": {
										"code":    "UNSET",
										"message": "UNSET",
									},
									"tags":                {},
									"usage_operation":     "RunInstances",
									"virtualization_type": "hvm",
								},
							},
							{
								"address":          "module.eks.data.aws_caller_identity.current",
								"mode":             "data",
								"name":             "current",
								"provider_name":    "registry.terraform.io/hashicorp/aws",
								"schema_version":   0,
								"sensitive_values": {},
								"type":             "aws_caller_identity",
								"values": {
									"account_id": "420453950703",
									"arn":        "arn:aws:iam::420453950703:user/garak",
									"id":         "420453950703",
									"user_id":    "AIDAWDZICETXVAGLDEOKT",
								},
							},
							{
								"address":        "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
								"mode":           "data",
								"name":           "cluster_assume_role_policy",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"statement": [
										{
											"actions": [
												false,
											],
											"condition":      [],
											"not_actions":    [],
											"not_principals": [],
											"not_resources":  [],
											"principals": [
												{
													"identifiers": [
														false,
													],
												},
											],
											"resources": [],
										},
									],
								},
								"type": "aws_iam_policy_document",
								"values": {
									"id":                        "2764486067",
									"json":                      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
									"override_json":             null,
									"override_policy_documents": null,
									"policy_id":                 null,
									"source_json":               null,
									"source_policy_documents":   null,
									"statement": [
										{
											"actions": [
												"sts:AssumeRole",
											],
											"condition":      [],
											"effect":         "Allow",
											"not_actions":    [],
											"not_principals": [],
											"not_resources":  [],
											"principals": [
												{
													"identifiers": [
														"eks.amazonaws.com",
													],
													"type": "Service",
												},
											],
											"resources": [],
											"sid":       "EKSClusterAssumeRole",
										},
									],
									"version": "2012-10-17",
								},
							},
							{
								"address":        "module.eks.data.aws_iam_policy_document.cluster_deny_log_group[0]",
								"index":          0,
								"mode":           "data",
								"name":           "cluster_deny_log_group",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"statement": [
										{
											"actions": [
												false,
											],
											"condition":      [],
											"not_actions":    [],
											"not_principals": [],
											"not_resources":  [],
											"principals":     [],
											"resources": [
												false,
											],
										},
									],
								},
								"type": "aws_iam_policy_document",
								"values": {
									"id":                        "2675893060",
									"json":                      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"logs:CreateLogGroup\",\n      \"Resource\": \"*\"\n    }\n  ]\n}",
									"override_json":             null,
									"override_policy_documents": null,
									"policy_id":                 null,
									"source_json":               null,
									"source_policy_documents":   null,
									"statement": [
										{
											"actions": [
												"logs:CreateLogGroup",
											],
											"condition":      [],
											"effect":         "Deny",
											"not_actions":    [],
											"not_principals": [],
											"not_resources":  [],
											"principals":     [],
											"resources": [
												"*",
											],
											"sid": "",
										},
									],
									"version": "2012-10-17",
								},
							},
							{
								"address":        "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation[0]",
								"index":          0,
								"mode":           "data",
								"name":           "cluster_elb_sl_role_creation",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"statement": [
										{
											"actions": [
												false,
												false,
												false,
											],
											"condition":      [],
											"not_actions":    [],
											"not_principals": [],
											"not_resources":  [],
											"principals":     [],
											"resources": [
												false,
											],
										},
									],
								},
								"type": "aws_iam_policy_document",
								"values": {
									"id":                        "3709839417",
									"json":                      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
									"override_json":             null,
									"override_policy_documents": null,
									"policy_id":                 null,
									"source_json":               null,
									"source_policy_documents":   null,
									"statement": [
										{
											"actions": [
												"ec2:DescribeAccountAttributes",
												"ec2:DescribeAddresses",
												"ec2:DescribeInternetGateways",
											],
											"condition":      [],
											"effect":         "Allow",
											"not_actions":    [],
											"not_principals": [],
											"not_resources":  [],
											"principals":     [],
											"resources": [
												"*",
											],
											"sid": "",
										},
									],
									"version": "2012-10-17",
								},
							},
							{
								"address":        "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
								"mode":           "data",
								"name":           "workers_assume_role_policy",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"statement": [
										{
											"actions": [
												false,
											],
											"condition":      [],
											"not_actions":    [],
											"not_principals": [],
											"not_resources":  [],
											"principals": [
												{
													"identifiers": [
														false,
													],
												},
											],
											"resources": [],
										},
									],
								},
								"type": "aws_iam_policy_document",
								"values": {
									"id":                        "3778018924",
									"json":                      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
									"override_json":             null,
									"override_policy_documents": null,
									"policy_id":                 null,
									"source_json":               null,
									"source_policy_documents":   null,
									"statement": [
										{
											"actions": [
												"sts:AssumeRole",
											],
											"condition":      [],
											"effect":         "Allow",
											"not_actions":    [],
											"not_principals": [],
											"not_resources":  [],
											"principals": [
												{
													"identifiers": [
														"ec2.amazonaws.com",
													],
													"type": "Service",
												},
											],
											"resources": [],
											"sid":       "EKSWorkerAssumeRole",
										},
									],
									"version": "2012-10-17",
								},
							},
							{
								"address":          "module.eks.data.aws_partition.current",
								"mode":             "data",
								"name":             "current",
								"provider_name":    "registry.terraform.io/hashicorp/aws",
								"schema_version":   0,
								"sensitive_values": {},
								"type":             "aws_partition",
								"values": {
									"dns_suffix":         "amazonaws.com",
									"id":                 "aws",
									"partition":          "aws",
									"reverse_dns_prefix": "com.amazonaws",
								},
							},
						],
					},
				],
				"resources": [
					{
						"address":        "data.aws_availability_zones.available",
						"mode":           "data",
						"name":           "available",
						"provider_name":  "registry.terraform.io/hashicorp/aws",
						"schema_version": 0,
						"sensitive_values": {
							"group_names": [
								false,
							],
							"names": [
								false,
								false,
								false,
							],
							"zone_ids": [
								false,
								false,
								false,
							],
						},
						"type": "aws_availability_zones",
						"values": {
							"all_availability_zones": null,
							"exclude_names":          null,
							"exclude_zone_ids":       null,
							"filter":                 null,
							"group_names": [
								"us-east-2",
							],
							"id": "us-east-2",
							"names": [
								"us-east-2a",
								"us-east-2b",
								"us-east-2c",
							],
							"state": null,
							"zone_ids": [
								"use2-az1",
								"use2-az2",
								"use2-az3",
							],
						},
					},
				],
			},
		},
	},
	"resource_changes": [
		{
			"address": "aws_security_group.all_worker_mgmt",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Managed by Terraform",
					"ingress": [
						{
							"cidr_blocks": [
								"10.0.0.0/8",
								"172.16.0.0/12",
								"192.168.0.0/16",
							],
							"description":      "",
							"from_port":        22,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          22,
						},
					],
					"name_prefix":            "all_worker_management",
					"revoke_rules_on_delete": false,
					"tags":     null,
					"timeouts": null,
				},
				"after_sensitive": {
					"egress": [],
					"ingress": [
						{
							"cidr_blocks": [
								false,
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"tags_all": {},
				},
				"after_unknown": {
					"arn":    true,
					"egress": true,
					"id":     true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"name":     true,
					"owner_id": true,
					"tags_all": true,
					"vpc_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":          "managed",
			"name":          "all_worker_mgmt",
			"provider_name": "registry.terraform.io/hashicorp/aws",
			"type":          "aws_security_group",
		},
		{
			"address": "aws_security_group.worker_group_mgmt_one",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Managed by Terraform",
					"ingress": [
						{
							"cidr_blocks": [
								"10.0.0.0/8",
							],
							"description":      "",
							"from_port":        22,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          22,
						},
					],
					"name_prefix":            "worker_group_mgmt_one",
					"revoke_rules_on_delete": false,
					"tags":     null,
					"timeouts": null,
				},
				"after_sensitive": {
					"egress": [],
					"ingress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"tags_all": {},
				},
				"after_unknown": {
					"arn":    true,
					"egress": true,
					"id":     true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"name":     true,
					"owner_id": true,
					"tags_all": true,
					"vpc_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":          "managed",
			"name":          "worker_group_mgmt_one",
			"provider_name": "registry.terraform.io/hashicorp/aws",
			"type":          "aws_security_group",
		},
		{
			"address": "aws_security_group.worker_group_mgmt_two",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Managed by Terraform",
					"ingress": [
						{
							"cidr_blocks": [
								"192.168.0.0/16",
							],
							"description":      "",
							"from_port":        22,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          22,
						},
					],
					"name_prefix":            "worker_group_mgmt_two",
					"revoke_rules_on_delete": false,
					"tags":     null,
					"timeouts": null,
				},
				"after_sensitive": {
					"egress": [],
					"ingress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"tags_all": {},
				},
				"after_unknown": {
					"arn":    true,
					"egress": true,
					"id":     true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"name":     true,
					"owner_id": true,
					"tags_all": true,
					"vpc_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":          "managed",
			"name":          "worker_group_mgmt_two",
			"provider_name": "registry.terraform.io/hashicorp/aws",
			"type":          "aws_security_group",
		},
		{
			"address": "data.aws_eks_cluster.cluster",
			"change": {
				"actions": [
					"read",
				],
				"after": {},
				"after_sensitive": {
					"certificate_authority":     [],
					"enabled_cluster_log_types": [],
					"identity":                  [],
					"kubernetes_network_config": [],
					"tags":       {},
					"vpc_config": [],
				},
				"after_unknown": {
					"arn": true,
					"certificate_authority":     true,
					"created_at":                true,
					"enabled_cluster_log_types": true,
					"endpoint":                  true,
					"id":                        true,
					"identity":                  true,
					"kubernetes_network_config": true,
					"name":             true,
					"platform_version": true,
					"role_arn":         true,
					"status":           true,
					"tags":             true,
					"version":          true,
					"vpc_config":       true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":          "data",
			"name":          "cluster",
			"provider_name": "registry.terraform.io/hashicorp/aws",
			"type":          "aws_eks_cluster",
		},
		{
			"address": "data.aws_eks_cluster_auth.cluster",
			"change": {
				"actions": [
					"read",
				],
				"after": {},
				"after_sensitive": {
					"token": true,
				},
				"after_unknown": {
					"id":    true,
					"name":  true,
					"token": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":          "data",
			"name":          "cluster",
			"provider_name": "registry.terraform.io/hashicorp/aws",
			"type":          "aws_eks_cluster_auth",
		},
		{
			"address": "module.eks.aws_autoscaling_group.workers[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"capacity_rebalance":        false,
					"desired_capacity":          2,
					"enabled_metrics":           null,
					"force_delete":              false,
					"force_delete_warm_pool":    false,
					"health_check_grace_period": 300,
					"initial_lifecycle_hook":    [],
					"instance_refresh":          [],
					"launch_template":           [],
					"load_balancers":            null,
					"max_instance_lifetime":     0,
					"max_size":                  3,
					"metrics_granularity":       "1Minute",
					"min_elb_capacity":          null,
					"min_size":                  1,
					"mixed_instances_policy":    [],
					"placement_group":           null,
					"protect_from_scale_in":     false,
					"suspended_processes": [
						"AZRebalance",
					],
					"tag": [
						{
							"key": "Name",
							"propagate_at_launch": true,
						},
						{
							"propagate_at_launch": true,
							"value":               "owned",
						},
						{
							"propagate_at_launch": true,
							"value":               "owned",
						},
					],
					"tags":                      null,
					"target_group_arns":         null,
					"termination_policies":      [],
					"timeouts":                  null,
					"wait_for_capacity_timeout": "10m",
					"wait_for_elb_capacity":     null,
					"warm_pool":                 [],
				},
				"after_sensitive": {
					"availability_zones":     [],
					"initial_lifecycle_hook": [],
					"instance_refresh":       [],
					"launch_template":        [],
					"mixed_instances_policy": [],
					"suspended_processes": [
						false,
					],
					"tag": [
						{},
						{},
						{},
					],
					"termination_policies": [],
					"vpc_zone_identifier":  [],
					"warm_pool":            [],
				},
				"after_unknown": {
					"arn":                true,
					"availability_zones": true,
					"default_cooldown":   true,
					"health_check_type":  true,
					"id":                 true,
					"initial_lifecycle_hook": [],
					"instance_refresh":       [],
					"launch_configuration":   true,
					"launch_template":        [],
					"mixed_instances_policy": [],
					"name":                    true,
					"name_prefix":             true,
					"service_linked_role_arn": true,
					"suspended_processes": [
						false,
					],
					"tag": [
						{
							"value": true,
						},
						{
							"key": true,
						},
						{
							"key": true,
						},
					],
					"termination_policies": [],
					"vpc_zone_identifier":  true,
					"warm_pool":            [],
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_autoscaling_group",
		},
		{
			"address": "module.eks.aws_autoscaling_group.workers[1]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"capacity_rebalance":        false,
					"desired_capacity":          1,
					"enabled_metrics":           null,
					"force_delete":              false,
					"force_delete_warm_pool":    false,
					"health_check_grace_period": 300,
					"initial_lifecycle_hook":    [],
					"instance_refresh":          [],
					"launch_template":           [],
					"load_balancers":            null,
					"max_instance_lifetime":     0,
					"max_size":                  3,
					"metrics_granularity":       "1Minute",
					"min_elb_capacity":          null,
					"min_size":                  1,
					"mixed_instances_policy":    [],
					"placement_group":           null,
					"protect_from_scale_in":     false,
					"suspended_processes": [
						"AZRebalance",
					],
					"tag": [
						{
							"key": "Name",
							"propagate_at_launch": true,
						},
						{
							"propagate_at_launch": true,
							"value":               "owned",
						},
						{
							"propagate_at_launch": true,
							"value":               "owned",
						},
					],
					"tags":                      null,
					"target_group_arns":         null,
					"termination_policies":      [],
					"timeouts":                  null,
					"wait_for_capacity_timeout": "10m",
					"wait_for_elb_capacity":     null,
					"warm_pool":                 [],
				},
				"after_sensitive": {
					"availability_zones":     [],
					"initial_lifecycle_hook": [],
					"instance_refresh":       [],
					"launch_template":        [],
					"mixed_instances_policy": [],
					"suspended_processes": [
						false,
					],
					"tag": [
						{},
						{},
						{},
					],
					"termination_policies": [],
					"vpc_zone_identifier":  [],
					"warm_pool":            [],
				},
				"after_unknown": {
					"arn":                true,
					"availability_zones": true,
					"default_cooldown":   true,
					"health_check_type":  true,
					"id":                 true,
					"initial_lifecycle_hook": [],
					"instance_refresh":       [],
					"launch_configuration":   true,
					"launch_template":        [],
					"mixed_instances_policy": [],
					"name":                    true,
					"name_prefix":             true,
					"service_linked_role_arn": true,
					"suspended_processes": [
						false,
					],
					"tag": [
						{
							"value": true,
						},
						{
							"key": true,
						},
						{
							"key": true,
						},
					],
					"termination_policies": [],
					"vpc_zone_identifier":  true,
					"warm_pool":            [],
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_autoscaling_group",
		},
		{
			"address": "module.eks.aws_eks_cluster.this[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"enabled_cluster_log_types": null,
					"encryption_config":         [],
					"kubernetes_network_config": [
						{},
					],
					"tags": null,
					"timeouts": {
						"create": "30m",
						"delete": "15m",
						"update": "60m",
					},
					"version": "1.20",
					"vpc_config": [
						{
							"endpoint_private_access": false,
							"endpoint_public_access":  true,
							"public_access_cidrs": [
								"0.0.0.0/0",
							],
						},
					],
				},
				"after_sensitive": {
					"certificate_authority": [],
					"encryption_config":     [],
					"identity":              [],
					"kubernetes_network_config": [
						{},
					],
					"tags_all": {},
					"timeouts": {},
					"vpc_config": [
						{
							"public_access_cidrs": [
								false,
							],
							"security_group_ids": [],
							"subnet_ids":         [],
						},
					],
				},
				"after_unknown": {
					"arn": true,
					"certificate_authority": true,
					"created_at":            true,
					"encryption_config":     [],
					"endpoint":              true,
					"id":                    true,
					"identity":              true,
					"kubernetes_network_config": [
						{
							"service_ipv4_cidr": true,
						},
					],
					"name":             true,
					"platform_version": true,
					"role_arn":         true,
					"status":           true,
					"tags_all":         true,
					"timeouts":         {},
					"vpc_config": [
						{
							"cluster_security_group_id": true,
							"public_access_cidrs": [
								false,
							],
							"security_group_ids": true,
							"subnet_ids":         true,
							"vpc_id":             true,
						},
					],
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_eks_cluster",
		},
		{
			"address": "module.eks.aws_iam_instance_profile.workers[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"path": "/",
					"tags": null,
				},
				"after_sensitive": {
					"tags_all": {},
				},
				"after_unknown": {
					"arn":         true,
					"create_date": true,
					"id":          true,
					"name":        true,
					"name_prefix": true,
					"role":        true,
					"tags_all":    true,
					"unique_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_instance_profile",
		},
		{
			"address": "module.eks.aws_iam_instance_profile.workers[1]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"path": "/",
					"tags": null,
				},
				"after_sensitive": {
					"tags_all": {},
				},
				"after_unknown": {
					"arn":         true,
					"create_date": true,
					"id":          true,
					"name":        true,
					"name_prefix": true,
					"role":        true,
					"tags_all":    true,
					"unique_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_instance_profile",
		},
		{
			"address": "module.eks.aws_iam_policy.cluster_deny_log_group[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Deny CreateLogGroup",
					"path":        "/",
					"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"logs:CreateLogGroup\",\n      \"Resource\": \"*\"\n    }\n  ]\n}",
					"tags":        null,
				},
				"after_sensitive": {
					"tags_all": {},
				},
				"after_unknown": {
					"arn":         true,
					"id":          true,
					"name":        true,
					"name_prefix": true,
					"policy_id":   true,
					"tags_all":    true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_deny_log_group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.eks.aws_iam_policy.cluster_elb_sl_role_creation[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Permissions for EKS to create AWSServiceRoleForElasticLoadBalancing service-linked role",
					"path":        "/",
					"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
					"tags":        null,
				},
				"after_sensitive": {
					"tags_all": {},
				},
				"after_unknown": {
					"arn":         true,
					"id":          true,
					"name":        true,
					"name_prefix": true,
					"policy_id":   true,
					"tags_all":    true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_elb_sl_role_creation",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_policy",
		},
		{
			"address": "module.eks.aws_iam_role.cluster[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
					"description":           null,
					"force_detach_policies": true,
					"max_session_duration":  3600,
					"path":                  "/",
					"permissions_boundary":  null,
					"tags":                  null,
				},
				"after_sensitive": {
					"inline_policy":       [],
					"managed_policy_arns": [],
					"tags_all":            {},
				},
				"after_unknown": {
					"arn":                 true,
					"create_date":         true,
					"id":                  true,
					"inline_policy":       true,
					"managed_policy_arns": true,
					"name":                true,
					"name_prefix":         true,
					"tags_all":            true,
					"unique_id":           true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role",
		},
		{
			"address": "module.eks.aws_iam_role.workers[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
					"description":           null,
					"force_detach_policies": true,
					"max_session_duration":  3600,
					"path":                  "/",
					"permissions_boundary":  null,
					"tags":                  null,
				},
				"after_sensitive": {
					"inline_policy":       [],
					"managed_policy_arns": [],
					"tags_all":            {},
				},
				"after_unknown": {
					"arn":                 true,
					"create_date":         true,
					"id":                  true,
					"inline_policy":       true,
					"managed_policy_arns": true,
					"name":                true,
					"name_prefix":         true,
					"tags_all":            true,
					"unique_id":           true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role",
		},
		{
			"address": "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":   true,
					"role": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_AmazonEKSClusterPolicy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role_policy_attachment",
		},
		{
			"address": "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":   true,
					"role": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_AmazonEKSServicePolicy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role_policy_attachment",
		},
		{
			"address": "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":   true,
					"role": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_AmazonEKSVPCResourceControllerPolicy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role_policy_attachment",
		},
		{
			"address": "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group[0]",
			"change": {
				"actions": [
					"create",
				],
				"after":           {},
				"after_sensitive": {},
				"after_unknown": {
					"id":         true,
					"policy_arn": true,
					"role":       true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_deny_log_group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role_policy_attachment",
		},
		{
			"address": "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation[0]",
			"change": {
				"actions": [
					"create",
				],
				"after":           {},
				"after_sensitive": {},
				"after_unknown": {
					"id":         true,
					"policy_arn": true,
					"role":       true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_elb_sl_role_creation",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role_policy_attachment",
		},
		{
			"address": "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":   true,
					"role": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_AmazonEC2ContainerRegistryReadOnly",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role_policy_attachment",
		},
		{
			"address": "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":   true,
					"role": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_AmazonEKSWorkerNodePolicy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role_policy_attachment",
		},
		{
			"address": "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":   true,
					"role": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_AmazonEKS_CNI_Policy",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role_policy_attachment",
		},
		{
			"address": "module.eks.aws_launch_configuration.workers[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"associate_public_ip_address": false,
					"ebs_optimized":               false,
					"enable_monitoring":           true,
					"ephemeral_block_device":      [],
					"image_id":                    "ami-04821cb666bb14bc3",
					"instance_type":               "t2.small",
					"metadata_options": [
						{
							"http_endpoint": "enabled",
							"http_tokens":   "optional",
						},
					],
					"placement_tenancy": "",
					"root_block_device": [
						{
							"delete_on_termination": true,
							"encrypted":             false,
							"iops":                  0,
							"volume_size":           100,
							"volume_type":           "gp2",
						},
					],
					"spot_price":                       "",
					"user_data":                        null,
					"vpc_classic_link_id":              null,
					"vpc_classic_link_security_groups": null,
				},
				"after_sensitive": {
					"ebs_block_device":       [],
					"ephemeral_block_device": [],
					"metadata_options": [
						{},
					],
					"root_block_device": [
						{},
					],
					"security_groups": [],
				},
				"after_unknown": {
					"arn":                    true,
					"ebs_block_device":       true,
					"ephemeral_block_device": [],
					"iam_instance_profile":   true,
					"id":       true,
					"key_name": true,
					"metadata_options": [
						{
							"http_put_response_hop_limit": true,
						},
					],
					"name":        true,
					"name_prefix": true,
					"root_block_device": [
						{
							"throughput": true,
						},
					],
					"security_groups":  true,
					"user_data_base64": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_launch_configuration",
		},
		{
			"address": "module.eks.aws_launch_configuration.workers[1]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"associate_public_ip_address": false,
					"ebs_optimized":               false,
					"enable_monitoring":           true,
					"ephemeral_block_device":      [],
					"image_id":                    "ami-04821cb666bb14bc3",
					"instance_type":               "t2.medium",
					"metadata_options": [
						{
							"http_endpoint": "enabled",
							"http_tokens":   "optional",
						},
					],
					"placement_tenancy": "",
					"root_block_device": [
						{
							"delete_on_termination": true,
							"encrypted":             false,
							"iops":                  0,
							"volume_size":           100,
							"volume_type":           "gp2",
						},
					],
					"spot_price":                       "",
					"user_data":                        null,
					"vpc_classic_link_id":              null,
					"vpc_classic_link_security_groups": null,
				},
				"after_sensitive": {
					"ebs_block_device":       [],
					"ephemeral_block_device": [],
					"metadata_options": [
						{},
					],
					"root_block_device": [
						{},
					],
					"security_groups": [],
				},
				"after_unknown": {
					"arn":                    true,
					"ebs_block_device":       true,
					"ephemeral_block_device": [],
					"iam_instance_profile":   true,
					"id":       true,
					"key_name": true,
					"metadata_options": [
						{
							"http_put_response_hop_limit": true,
						},
					],
					"name":        true,
					"name_prefix": true,
					"root_block_device": [
						{
							"throughput": true,
						},
					],
					"security_groups":  true,
					"user_data_base64": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_launch_configuration",
		},
		{
			"address": "module.eks.aws_security_group.cluster[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description":            "EKS cluster security group.",
					"revoke_rules_on_delete": false,
					"timeouts":               null,
				},
				"after_sensitive": {
					"egress":   [],
					"ingress":  [],
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"arn":         true,
					"egress":      true,
					"id":          true,
					"ingress":     true,
					"name":        true,
					"name_prefix": true,
					"owner_id":    true,
					"tags":        true,
					"tags_all":    true,
					"vpc_id":      true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.eks.aws_security_group.workers[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description":            "Security group for all nodes in the cluster.",
					"revoke_rules_on_delete": false,
					"timeouts":               null,
				},
				"after_sensitive": {
					"egress":   [],
					"ingress":  [],
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"arn":         true,
					"egress":      true,
					"id":          true,
					"ingress":     true,
					"name":        true,
					"name_prefix": true,
					"owner_id":    true,
					"tags":        true,
					"tags_all":    true,
					"vpc_id":      true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.eks.aws_security_group_rule.cluster_egress_internet[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      "Allow cluster egress access to the Internet.",
					"from_port":        0,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "-1",
					"self":             false,
					"to_port":          0,
					"type":             "egress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_egress_internet",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.eks.aws_security_group_rule.cluster_https_worker_ingress[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks":      null,
					"description":      "Allow pods to communicate with the EKS cluster API.",
					"from_port":        443,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          443,
					"type":             "ingress",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "cluster_https_worker_ingress",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.eks.aws_security_group_rule.workers_egress_internet[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      "Allow nodes all egress to the Internet.",
					"from_port":        0,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "-1",
					"self":             false,
					"to_port":          0,
					"type":             "egress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_egress_internet",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.eks.aws_security_group_rule.workers_ingress_cluster[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks":      null,
					"description":      "Allow workers pods to receive communication from the cluster control plane.",
					"from_port":        1025,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          65535,
					"type":             "ingress",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_ingress_cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.eks.aws_security_group_rule.workers_ingress_cluster_https[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks":      null,
					"description":      "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
					"from_port":        443,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          443,
					"type":             "ingress",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_ingress_cluster_https",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.eks.aws_security_group_rule.workers_ingress_self[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks":      null,
					"description":      "Allow node to communicate with each other.",
					"from_port":        0,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "-1",
					"self":             false,
					"to_port":          65535,
					"type":             "ingress",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "workers_ingress_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.eks.data.http.wait_for_cluster[0]",
			"change": {
				"actions": [
					"read",
				],
				"after": {
					"insecure":        null,
					"request_headers": null,
					"timeout":         300,
				},
				"after_sensitive": {
					"response_headers": {},
				},
				"after_unknown": {
					"body":             true,
					"ca_certificate":   true,
					"id":               true,
					"response_headers": true,
					"url":              true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "data",
			"module_address": "module.eks",
			"name":           "wait_for_cluster",
			"provider_name":  "registry.terraform.io/terraform-aws-modules/http",
			"type":           "http",
		},
		{
			"address": "module.eks.kubernetes_config_map.aws_auth[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"binary_data": null,
					"metadata": [
						{
							"annotations":   null,
							"generate_name": null,
							"labels": {
								"app.kubernetes.io/managed-by": "Terraform",
								"terraform.io/module":          "terraform-aws-modules.eks.aws",
							},
							"name":      "aws-auth",
							"namespace": "kube-system",
						},
					],
				},
				"after_sensitive": {
					"data": {},
					"metadata": [
						{
							"labels": {},
						},
					],
				},
				"after_unknown": {
					"data": true,
					"id":   true,
					"metadata": [
						{
							"generation":       true,
							"labels":           {},
							"resource_version": true,
							"uid":              true,
						},
					],
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "aws_auth",
			"provider_name":  "registry.terraform.io/hashicorp/kubernetes",
			"type":           "kubernetes_config_map",
		},
		{
			"address": "module.eks.local_file.kubeconfig[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"content_base64":       null,
					"directory_permission": "0755",
					"file_permission":      "0600",
					"sensitive_content":    "REDACTED_SENSITIVE",
					"source":               null,
				},
				"after_sensitive": {
					"sensitive_content": true,
				},
				"after_unknown": {
					"content":  true,
					"filename": true,
					"id":       true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.eks",
			"name":           "kubeconfig",
			"provider_name":  "registry.terraform.io/hashicorp/local",
			"type":           "local_file",
		},
		{
			"address": "module.vpc.aws_eip.nat[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"address":                   null,
					"associate_with_private_ip": null,
					"customer_owned_ipv4_pool":  null,
					"timeouts":                  null,
					"vpc":                       true,
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"allocation_id":        true,
					"association_id":       true,
					"carrier_ip":           true,
					"customer_owned_ip":    true,
					"domain":               true,
					"id":                   true,
					"instance":             true,
					"network_border_group": true,
					"network_interface":    true,
					"private_dns":          true,
					"private_ip":           true,
					"public_dns":           true,
					"public_ip":            true,
					"public_ipv4_pool":     true,
					"tags":                 true,
					"tags_all":             true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "nat",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_eip",
		},
		{
			"address": "module.vpc.aws_internet_gateway.this[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"arn":      true,
					"id":       true,
					"owner_id": true,
					"tags":     true,
					"tags_all": true,
					"vpc_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_internet_gateway",
		},
		{
			"address": "module.vpc.aws_nat_gateway.this[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"connectivity_type": "public",
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"allocation_id": true,
					"id":            true,
					"network_interface_id": true,
					"private_ip":           true,
					"public_ip":            true,
					"subnet_id":            true,
					"tags":                 true,
					"tags_all":             true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_nat_gateway",
		},
		{
			"address": "module.vpc.aws_route.private_nat_gateway[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"carrier_gateway_id":          null,
					"destination_cidr_block":      "0.0.0.0/0",
					"destination_ipv6_cidr_block": null,
					"destination_prefix_list_id":  null,
					"egress_only_gateway_id":      null,
					"gateway_id":                  null,
					"local_gateway_id":            null,
					"timeouts": {
						"create": "5m",
						"delete": null,
						"update": null,
					},
					"transit_gateway_id":        null,
					"vpc_endpoint_id":           null,
					"vpc_peering_connection_id": null,
				},
				"after_sensitive": {
					"timeouts": {},
				},
				"after_unknown": {
					"id":                   true,
					"instance_id":          true,
					"instance_owner_id":    true,
					"nat_gateway_id":       true,
					"network_interface_id": true,
					"origin":               true,
					"route_table_id":       true,
					"state":                true,
					"timeouts":             {},
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private_nat_gateway",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route",
		},
		{
			"address": "module.vpc.aws_route.public_internet_gateway[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"carrier_gateway_id":          null,
					"destination_cidr_block":      "0.0.0.0/0",
					"destination_ipv6_cidr_block": null,
					"destination_prefix_list_id":  null,
					"egress_only_gateway_id":      null,
					"local_gateway_id":            null,
					"nat_gateway_id":              null,
					"timeouts": {
						"create": "5m",
						"delete": null,
						"update": null,
					},
					"transit_gateway_id":        null,
					"vpc_endpoint_id":           null,
					"vpc_peering_connection_id": null,
				},
				"after_sensitive": {
					"timeouts": {},
				},
				"after_unknown": {
					"gateway_id":           true,
					"id":                   true,
					"instance_id":          true,
					"instance_owner_id":    true,
					"network_interface_id": true,
					"origin":               true,
					"route_table_id":       true,
					"state":                true,
					"timeouts":             {},
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public_internet_gateway",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route",
		},
		{
			"address": "module.vpc.aws_route_table.private[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"timeouts": null,
				},
				"after_sensitive": {
					"propagating_vgws": [],
					"route":            [],
					"tags":             {},
					"tags_all":         {},
				},
				"after_unknown": {
					"arn":              true,
					"id":               true,
					"owner_id":         true,
					"propagating_vgws": true,
					"route":            true,
					"tags":             true,
					"tags_all":         true,
					"vpc_id":           true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table",
		},
		{
			"address": "module.vpc.aws_route_table.public[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"timeouts": null,
				},
				"after_sensitive": {
					"propagating_vgws": [],
					"route":            [],
					"tags":             {},
					"tags_all":         {},
				},
				"after_unknown": {
					"arn":              true,
					"id":               true,
					"owner_id":         true,
					"propagating_vgws": true,
					"route":            true,
					"tags":             true,
					"tags_all":         true,
					"vpc_id":           true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table",
		},
		{
			"address": "module.vpc.aws_route_table_association.private[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"gateway_id": null,
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":             true,
					"route_table_id": true,
					"subnet_id":      true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_route_table_association.private[1]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"gateway_id": null,
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":             true,
					"route_table_id": true,
					"subnet_id":      true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_route_table_association.private[2]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"gateway_id": null,
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":             true,
					"route_table_id": true,
					"subnet_id":      true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          2,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_route_table_association.public[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"gateway_id": null,
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":             true,
					"route_table_id": true,
					"subnet_id":      true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_route_table_association.public[1]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"gateway_id": null,
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":             true,
					"route_table_id": true,
					"subnet_id":      true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_route_table_association.public[2]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"gateway_id": null,
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":             true,
					"route_table_id": true,
					"subnet_id":      true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          2,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_subnet.private[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assign_ipv6_address_on_creation":                false,
					"availability_zone":                              "us-east-2a",
					"cidr_block":                                     "10.0.1.0/24",
					"customer_owned_ipv4_pool":                       null,
					"enable_dns64":                                   false,
					"enable_resource_name_dns_a_record_on_launch":    false,
					"enable_resource_name_dns_aaaa_record_on_launch": false,
					"ipv6_cidr_block":                                null,
					"ipv6_native":                                    false,
					"map_customer_owned_ip_on_launch":                null,
					"map_public_ip_on_launch":                        false,
					"outpost_arn":                                    null,
					"timeouts":                                       null,
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"arn": true,
					"availability_zone_id": true,
					"id": true,
					"ipv6_cidr_block_association_id":      true,
					"owner_id":                            true,
					"private_dns_hostname_type_on_launch": true,
					"tags":     true,
					"tags_all": true,
					"vpc_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_subnet.private[1]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assign_ipv6_address_on_creation":                false,
					"availability_zone":                              "us-east-2b",
					"cidr_block":                                     "10.0.2.0/24",
					"customer_owned_ipv4_pool":                       null,
					"enable_dns64":                                   false,
					"enable_resource_name_dns_a_record_on_launch":    false,
					"enable_resource_name_dns_aaaa_record_on_launch": false,
					"ipv6_cidr_block":                                null,
					"ipv6_native":                                    false,
					"map_customer_owned_ip_on_launch":                null,
					"map_public_ip_on_launch":                        false,
					"outpost_arn":                                    null,
					"timeouts":                                       null,
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"arn": true,
					"availability_zone_id": true,
					"id": true,
					"ipv6_cidr_block_association_id":      true,
					"owner_id":                            true,
					"private_dns_hostname_type_on_launch": true,
					"tags":     true,
					"tags_all": true,
					"vpc_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_subnet.private[2]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assign_ipv6_address_on_creation":                false,
					"availability_zone":                              "us-east-2c",
					"cidr_block":                                     "10.0.3.0/24",
					"customer_owned_ipv4_pool":                       null,
					"enable_dns64":                                   false,
					"enable_resource_name_dns_a_record_on_launch":    false,
					"enable_resource_name_dns_aaaa_record_on_launch": false,
					"ipv6_cidr_block":                                null,
					"ipv6_native":                                    false,
					"map_customer_owned_ip_on_launch":                null,
					"map_public_ip_on_launch":                        false,
					"outpost_arn":                                    null,
					"timeouts":                                       null,
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"arn": true,
					"availability_zone_id": true,
					"id": true,
					"ipv6_cidr_block_association_id":      true,
					"owner_id":                            true,
					"private_dns_hostname_type_on_launch": true,
					"tags":     true,
					"tags_all": true,
					"vpc_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          2,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_subnet.public[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assign_ipv6_address_on_creation":                false,
					"availability_zone":                              "us-east-2a",
					"cidr_block":                                     "10.0.4.0/24",
					"customer_owned_ipv4_pool":                       null,
					"enable_dns64":                                   false,
					"enable_resource_name_dns_a_record_on_launch":    false,
					"enable_resource_name_dns_aaaa_record_on_launch": false,
					"ipv6_cidr_block":                                null,
					"ipv6_native":                                    false,
					"map_customer_owned_ip_on_launch":                null,
					"map_public_ip_on_launch":                        true,
					"outpost_arn":                                    null,
					"timeouts":                                       null,
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"arn": true,
					"availability_zone_id": true,
					"id": true,
					"ipv6_cidr_block_association_id":      true,
					"owner_id":                            true,
					"private_dns_hostname_type_on_launch": true,
					"tags":     true,
					"tags_all": true,
					"vpc_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_subnet.public[1]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assign_ipv6_address_on_creation":                false,
					"availability_zone":                              "us-east-2b",
					"cidr_block":                                     "10.0.5.0/24",
					"customer_owned_ipv4_pool":                       null,
					"enable_dns64":                                   false,
					"enable_resource_name_dns_a_record_on_launch":    false,
					"enable_resource_name_dns_aaaa_record_on_launch": false,
					"ipv6_cidr_block":                                null,
					"ipv6_native":                                    false,
					"map_customer_owned_ip_on_launch":                null,
					"map_public_ip_on_launch":                        true,
					"outpost_arn":                                    null,
					"timeouts":                                       null,
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"arn": true,
					"availability_zone_id": true,
					"id": true,
					"ipv6_cidr_block_association_id":      true,
					"owner_id":                            true,
					"private_dns_hostname_type_on_launch": true,
					"tags":     true,
					"tags_all": true,
					"vpc_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_subnet.public[2]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assign_ipv6_address_on_creation":                false,
					"availability_zone":                              "us-east-2c",
					"cidr_block":                                     "10.0.6.0/24",
					"customer_owned_ipv4_pool":                       null,
					"enable_dns64":                                   false,
					"enable_resource_name_dns_a_record_on_launch":    false,
					"enable_resource_name_dns_aaaa_record_on_launch": false,
					"ipv6_cidr_block":                                null,
					"ipv6_native":                                    false,
					"map_customer_owned_ip_on_launch":                null,
					"map_public_ip_on_launch":                        true,
					"outpost_arn":                                    null,
					"timeouts":                                       null,
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"arn": true,
					"availability_zone_id": true,
					"id": true,
					"ipv6_cidr_block_association_id":      true,
					"owner_id":                            true,
					"private_dns_hostname_type_on_launch": true,
					"tags":     true,
					"tags_all": true,
					"vpc_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          2,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_vpc.this[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assign_generated_ipv6_cidr_block": false,
					"cidr_block":                       "10.0.0.0/16",
					"enable_dns_hostnames":             true,
					"enable_dns_support":               true,
					"instance_tenancy":                 "default",
					"ipv4_ipam_pool_id":                null,
					"ipv4_netmask_length":              null,
					"ipv6_ipam_pool_id":                null,
					"ipv6_netmask_length":              null,
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"arn": true,
					"default_network_acl_id":         true,
					"default_route_table_id":         true,
					"default_security_group_id":      true,
					"dhcp_options_id":                true,
					"enable_classiclink":             true,
					"enable_classiclink_dns_support": true,
					"id": true,
					"ipv6_association_id": true,
					"ipv6_cidr_block":     true,
					"main_route_table_id": true,
					"owner_id":            true,
					"tags":                true,
					"tags_all":            true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_vpc",
		},
		{
			"address": "random_string.suffix",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"keepers":          null,
					"length":           8,
					"lower":            true,
					"min_lower":        0,
					"min_numeric":      0,
					"min_special":      0,
					"min_upper":        0,
					"number":           true,
					"override_special": null,
					"special":          false,
					"upper":            true,
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":     true,
					"result": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":          "managed",
			"name":          "suffix",
			"provider_name": "registry.terraform.io/hashicorp/random",
			"type":          "random_string",
		},
	],
	"terraform_version": "1.1.3",
	"variables": {
		"region": {
			"value": "us-east-2",
		},
	},
}
